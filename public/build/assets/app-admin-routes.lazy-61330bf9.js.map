{"version":3,"mappings":"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","names":["useIsMutating","filters","queryClient","client","useQueryClient","useMutationState","getResult","mutationCache","options","mutation","optionsRef","React.useRef","result","React.useEffect","React.useSyncExternalStore","React.useCallback","onStoreChange","nextResult","replaceEqualDeep","notifyManager","AdminSidebar","className","isCompactMode","version","useSettings","jsxs","clsx","jsx","CustomMenu","to","isActive","Trans","MenuOpenIcon","createSvgIcon","DashboardNavbar","children","hideToggleButton","props","isMobileMode","leftSidenavStatus","setLeftSidenavStatus","name","leftSidenavCanBeCompact","useContext","DashboardLayoutContext","shouldToggleCompactMode","shouldShowToggle","handleToggle","handleCompactModeToggle","newStatus","setInLocalStorage","Navbar","IconButton","useAdminSetupAlerts","useQuery","fetchAlerts","apiClient","response","AdminLayout","DashboardLayout","DashboardSidenav","DashboardContent","SetupAlertsList","Outlet","data","dismissValue","useLocalStorage","shouldShowAlert","SetupAlert","alert","description","SectionHelper","ErrorIcon","FilterControlType","FilterOperator","ALL_NUMBER_OPERATORS","DateRangePicker","granularity","closeDialogOnSelection","fieldProps","state","useDateRangePickerState","inputRef","useRef","hideCalendarIcon","useIsMobileMediaQuery","dialog","DialogTrigger","DateRangeDialog","openOnClick","e","isHourSegment","value","onChange","Fragment","DatePickerField","DateRangeIcon","DateSegmentList","_a","newValue","ArrowRightAltIcon","_b","FormDateRangePicker","onBlur","ref","invalid","error","useController","formProps","dateRangeToAbsoluteRange","absoluteRangeToDateRange","mergeProps","start","end","preset","dateRange","parseAbsoluteToLocal","absoluteRange","timestampFilter","DateRangePresets","createdAtFilter","message","updatedAtFilter","UserDatatableFilters","DataTableContext","React","useDataTable","defaultPerPage","perPageOptions","DataTablePaginationFooter","query","onPerPageChange","onPageChange","isMobile","numberFormatter","useNumberFormatter","pagination","perPageSelect","Select","option","Item","KeyboardArrowLeftIcon","hasNextPage","KeyboardArrowRightIcon","FilterAltIcon","AccordionAnimation","Accordion","variant","mode","isLazy","other","expandedValues","setExpandedValues","useControlledState","itemsCount","AnimatePresence","FocusScope","child","index","isValidElement","cloneElement","AccordionItem","label","disabled","bodyClassName","bodyPadding","labelClassName","buttonPadding","startIcon","endAppend","chevronPosition","isFirst","footerContent","onHeaderMouseEnter","onHeaderMouseLeave","isExpanded","wasExpandedOnce","focusManager","useFocusManager","id","useId","buttonId","panelId","onKeyDown","toggle","i","newKeys","chevron","ArrowDropDownIcon","m","SelectFilterPanel","filter","trans","useTrans","FormSelect","DateRangeFilterPanel","NormalizedModelFilterPanel","FormNormalizedModelField","FilterOperatorNames","InputFilterPanel","control","form","useFormContext","selectedOperator","useWatch","operator","FormTextField","BooleanFilterPanel","ChipFieldFilterPanel","FormChipField","chip","o","AddFilterDialog","decodedFilters","useBackendFilterUrlParams","formId","useDialogContext","expandedFilters","setExpandedFilters","useState","f","clearButton","Button","applyButton","Dialog","DialogHeader","DialogBody","FilterList","replaceAll","defaultValues","appliedFilter","useForm","close","Form","formValue","filterValue","key","fieldValue","Checkbox","AddFilterDialogPanel","CustomComponent","AddFilterButton","icon","color","size","desktopButton","mobileButton","DataTableHeader","actions","filtersLoading","searchPlaceholder","searchValue","onSearchChange","HeaderLayout","TextField","SearchIcon","domProps","FilterListTriggerButton","forwardRef","isInactive","InactiveFilterButton","ActiveFilterButton","KeyboardArrowDownIcon","isBoolean","FilterListItemDialogTrigger","onValueChange","FilterListControlDialog","panel","DialogFooter","FilterListControl","DatePickerControl","BooleanToggleControl","SelectControl","ChipFieldControl","InputControl","SelectModelControl","Control","valueLabel","FormattedDateTimeRange","MultipleValues","v","maxShownCount","notShownCount","names","operatorLabel","formattedValue","FormattedNumber","isLoading","useNormalizedModel","skeleton","Skeleton","modelPreview","Avatar","pinnedFilters","remove","field","handleValueChange","payload","newFilters","CloseIcon","SelectedStateDatatableHeader","selectedItemsCount","FilterListSkeleton","opacityAnimation","DataTable","columns","queryParams","endpoint","selectedActions","emptyStateMessage","tableDomProps","onRowAction","enableSelection","selectionStyle","cellHeight","collapseTableOnMobile","skeletonsWhileLoading","border","encodedFilters","params","setParams","selectedRows","setSelectedRows","useDatatableData","BackendFiltersUrlKey","isFiltering","nanoid","ProgressBar","Table","descriptor","page","perPage","DataTablePage","title","headerContent","headerItemsAlign","padding","dataTableProps","titleId","StaticPageTitle","useDeleteSelectedRows","useMutation","deleteSelectedRows","DatatableDataQueryKey","toast","err","showHttpErrorToast","ids","r","DeleteSelectedItemsAction","DeleteItemsDialog","ConfirmationDialog","errorStatusIs","DataTableEmptyStateMessage","filteringTitle","image","IllustratedMessage","SvgImage","teamSvg","DataTableAddItemButton","elementType","onClick","href","download","AddIcon","FileDownloadIcon","useExportCsv","exportCsv","CsvExportInfoDialog","DataTableExportCsvButton","dialogIsOpen","setDialogIsOpen","downloadFileFromUrl","PersonOffIcon","useBanUser","userId","banUser","onFormQueryError","BanUserDialog","user","isPermanent","values","FormDatePicker","FormSwitch","useUnbanUser","unbanUser","useImpersonateUser","impersonateUser","userDatatableColumns","NameWithAvatar","ChipList","role","Chip","Link","CheckIcon","FormattedDate","Tooltip","EditIcon","UnbanButton","ImpersonateButton","unban","confirmed","impersonate","LoginIcon","useCreateUser","navigate","useNavigate","createUser","CreateUserDialog","FileUploadProvider","FormImageSelector","UserDatatable","billing","filteredColumns","c","Actions","DefaultAppearanceConfig","mergedAppearanceConfig","deepMerge","AppAppearanceConfig","resolvePreviewAppIsLoaded","previewAppIsLoaded","resolve","useAppearanceStore","create","subscribeWithSelector","set","get","preview","postMessage","font","themeId","selector","node","document","window","command","appearanceState","useAdminSettings","adminSettingsQueryOptions","fetchAdminSettings","prepareSettingsForHookForm","obj","useAppearanceEditorValuesQuery","fetchAppearanceValues","useAppearanceEditorValues","usePreviewRoute","pathname","useLocation","subRoute","useMatches","activeSection","config","baseRoute","AppearanceEditorPage","isAppearanceEditorActive","useAppearanceEditorMode","base_url","iframeRef","iframeRoute","useEffect","Navigate","Sidebar","spinner","ProgressCircle","AppearanceButton","endIcon","ButtonBase","MenuList","fields","append","useFieldArray","useAvailableRoutes","menuConfig","route","ucFirst","string","AddMenuItemDialog","useValueLists","categories","routeItems","AddCustomLink","AddRoute","category","items","List","item","ListItem","last","DragIndicatorIcon","DeleteIcon","dropdownMenu","AppearanceMenuEditor","menuIndex","useParams","getValues","menuFormPath","menu","MenuEditorSection","has_mobile_app","menuSectionConfig","s","menuPositions","useMemo","positions","position","Option","MenuItemsManager","DeleteMenuTrigger","formPath","menuItemConfig","MenuListItem","oldIndex","newIndex","moveItemInNewArray","menus","isConfirmed","_","onSortEnd","sortableProps","dragHandleRef","useSortable","Icon","createSvgIconFromTree","iconOnlyLabel","PermissionSelector","valueListKey","permissions","setValue","showAdvanced","setShowAdvanced","groupedPermissions","buildPermissionList","onRestrictionChange","newPermission","p","groupName","anyChecked","prettyName","DoneAllIcon","permission","isChecked","Switch","Restrictions","setRestrictionValue","nextState","produce","draftState","restriction","isLast","FormPermissionSelector","allPermissions","selectedPermissions","group","g","mergedPermission","mergeRestrictions","allRestrictions","selectedRestrictions","selected","iconGridStyle","skeletons","IconList","__vitePreload","IconPicker","onIconSelected","Suspense","IconPickerDialog","IconPickerWrapper","MenuItemForm","formPathPrefix","hideRoleAndPermissionFields","prefixName","IconDialogTrigger","DestinationSelector","TargetSelect","RoleSelector","SubscriptionStatusSelector","buttonProps","watch","fieldName","watchedItemIcon","iconTree","currentType","previousType","usePrevious","selectedCategory","roles","Section","AppearanceMenuItemEditor","menuItemIndex","MenuItemEditor","itemsPath","itemIndex","MenuItemEditorSection","DeleteItemTrigger","currentItems","saveAppearanceChangesMutationKey","useSaveAppearanceChanges","saveChanges","changes","BlockerDialog","isBlocked","allowedPath","reset","proceed","useBlocker","nextLocation","handleBeforeUnload","AppearanceEditorForm","breadcrumb","blockerAllowedPath","isDirty","useFormState","subscription","AppearanceEditorLayout","AppearanceEditorHeader","isSaving","usePreviousPath","location","AppearanceEditorBreadcrumb","backLink","childrenArray","Children","previousPath","sections","LabelList","isEmphasized","GeneralSection","BrandingImageSelector","SiteNameTextField","SiteDescriptionTextArea","type","defaultValue","randomNumber","min","max","randomBuffer","number","ThemeList","lightThemeColors","currentThemes","NavLink","AceEditor","AceDialog","onSave","footerStartAction","beautify","editorRef","isValid","setIsValid","Footer","startAction","useSeoTags","fetchTags","useUpdateSeoTags","updateTags","tags","pages","SeoSection","FullPageLoader","TagEditorTrigger","TagsEditorDialog","resetButton","CustomCodeSection","CustomCodeDialogTrigger","articlesSvg","CustomPageDatatableFilters","dynamicFilters","USER_MODEL","CustomPageDatatableColumns","LinkStyle","CustomPageDatablePage","SiteConfigContext","AppSettingsNavConfig","filteredSettingsNavConfig","getBootstrapData","SettingsNavConfig","AdminSettingsPage","propsNavConfig","navConfig","a","b","MobileNav","DesktopNav","newPage","useGenerateSitemap","generate","useUpdateAdminSettings","updateAdminSettings","server","files","formData","file","SettingsSeparator","SettingsFormLoadingIndicator","AdminSettingsForm","updateSettings","errors","keys","AdminSettingsLayout","headerMargin","LinkIcon","LearnMoreLink","link","site","ExternalLink","GeneralSettings","_c","_d","SiteUrlSection","HomepageSection","ThemeSection","SitemapSection","isInvalid","chunks","homepage","selectedType","themes","useBootstrapDataStore","theme","generateSitemap","url","ColorIcon","colorToThemeValue","parseColor","TuneIcon","ThemeSettingsDialogTrigger","themeIndex","currentTheme","SettingsDialog","RestartAltIcon","ThemeMoreOptionsButton","confirmDialogOpen","setConfirmDialogOpen","deleteTheme","MenuTrigger","path","defaultColors","colorName","themeValue","MoreVertIcon","Menu","MenuItem","u","t","n","d","h","l","C","E","H","x","L","w","K","I","y","q","D","S","T","F","X","Y","V","$","J","Q","U","W","Z","qe","ke","Ie","Oe","ColorPresets","ColorSwatch","colors","presetButtons","isSelected","DefaultPresets","ColorPicker","colorPresets","showInput","setColor","presets","style","getInputFieldClassNames","HexColorPicker","newColor","hex","HexColorInput","ColorPickerDialog","hideFooter","initialValue","navbarColorMap","NavbarColorPicker","selectedValue","previewColor","bgColor","AppearanceSectionTitle","marginTop","colorList","ThemeEditor","selectedFont","isAborted","ColorPickerTrigger","initialThemeValue","selectedThemeValue","setSelectedThemeValue","selectThemeValue","themeValueToHex","valueChanged","SettingsErrorGroup","separatorBottom","separatorTop","JsonChipField","arrayValue","mixedValue","ChipField","SubscriptionSettings","_e","_g","_f","_i","_h","_k","_j","_l","_m","_n","_o","_p","_q","Tabs","TabList","Tab","TabPanels","TabPanel","PaypalSection","StripeSection","paypalIsEnabled","stripeEnabled","LocalizationSettings","optionQuery","timezones","localizations","today","useCurrentDateTime","timezone","locale","FormRadioGroup","FormRadio","DateFormatPresets","format","AuthenticationSettings","_r","_s","_t","_u","_v","EmailConfirmationSection","EnvatoSection","GoogleSection","FacebookSection","TwitterSection","MailNotSetupWarning","text","settings","envatoLoginEnabled","googleLoginEnabled","facebookLoginEnabled","twitterLoginEnabled","spaceUnits","convertToBytes","unit","MaxValue","FormFileSizeField","setByteValue","byteValue","liveValue","setLiveValue","setUnit","amount","newUnit","fromBytes","newBytes","unitSelect","memoize","bytes","pretty","prettyBytes","fetchMaxServerUploadSize","useMaxServerUploadSize","useGenerateDropboxRefreshToken","generateToken","DropboxForm","appKey","appSecret","refreshToken","DropboxRefreshTokenDialog","generateRefreshToken","useUploadS3Cors","uploadCors","UploadingSettings","PrivateUploadSection","PublicUploadSection","CredentialsSection","MaxUploadSizeSection","clearErrors","drives","S3Form","FtpForm","DigitalOceanForm","BackblazeForm","S3DirectUploadField","defaultSettings","s3DriverEnabled","MailgunCredentials","SmtpCredentials","SesCredentials","PostmarkCredentials","GmailIcon","ConnectGmailPanel","connectSocial","useSocialLogin","connectedEmail","handleGmailConnect","email","connectButton","reconnectPanel","OutgoingMailGroup","selectedDriver","credentialForms","CredentialsForm","OutgoingEmailSettings","ContactAddressSection","contactPageUrl","clearCache","useClearCache","CacheSettings","CacheSelect","cacheDriver","CredentialSection","MemcachedCredentials","LoggingSettings","SentrySection","parts","useQueueStats","fetchStats","QueueSettings","StatusWidget","DriverSection","status","OpenInNewIcon","queueDriver","SqsCredentials","WebsocketSettings","driver","PusherFields","AblyFields","RecaptchaSettings","RecaptchaSection","FileField","useObjectRef","inputProps","useField","inputFieldClassNames","Field","FormFileField","ReportsSettings","AnalyticsSection","UpdateUserPageHeader","badge","isSuspended","banReason","AvatarSelector","ErrorOutlineIcon","uploadAvatar","useUploadAvatar","removeAvatar","useRemoveAvatar","ImageSelector","onSuccess","useUrlBackedTabs","tabName","tab","updateUserPageTabs","UpdateUserPageTabs","tabs","authUser","hasPermission","useAuth","api","apiEnabled","filteredTabs","activeTab","setActiveTab","useDeleteUser","deleteUser","UpdateUserPageActions","deleteDialogOpen","setDeleteDialogOpen","DeleteUserDialog","openDialog","UpdateUserPage","useUser","PageContent","PageStatus","CrupdateResourceHeader","ArrowBackIcon","TranslateIcon","getLocalWithLinesQueryKey","localeId","useLocaleWithLines","fetchLocaleWithLines","UpdateLocalization","useUpdateLocalization","UpdateLocalizationDialog","localization","languages","updateLocalization","language","createLocalization","useCreateLocalization","CreateLocationDialog","aroundTheWorldSvg","useUploadTranslationFile","uploadFile","columnConfig","RowActionsMenuTrigger","LocalizationIndex","openUploadWindow","FileInputType","NewTranslationDialog","TranslationManagementPage","lines","setLines","searchQuery","setSearchQuery","Header","LinesList","Breadcrumb","BreadcrumbItem","newTranslation","newLines","ActionsMenuTrigger","filteredLines","translation","lowerCaseQuery","rowVirtualizer","useVirtualizer","virtualItem","AdsPage","AdsForm","ads","ad","AdSection","adConfig","ImageZoomDialog","SectionList","sortedSection","section","RoleIndexPageFilters","RolesIndexPage","Endpoint","useRole","roleId","fetchRole","useUpdateRole","updateRole","CrupdateRolePageSettingsPanel","isInternal","workspaces","watchedType","SelectUserDialog","multiple","searchTerm","setSearchTerm","useNormalizedModels","users","selectedUsers","setSelectedUsers","UserListItem","onSelected","useRemoveUsersFromRole","userIds","removeUsersFromRole","useAddUsersToRole","addUsersToRole","userColumn","desktopColumns","mobileColumns","EditRolePageUsersPanel","AssignUserAction","RemoveUsersAction","addUsers","removeUsers","EditRolePage","CrupdateResourceLayout","useCreateRole","createRole","CreateRolePage","TagIndexPageFilters","types","softwareEngineerSvg","CrupdateTagForm","onSubmit","isSystem","useCreateNewTag","createNewTag","slugifyString","CreateTagDialog","useUpdateTag","updateTag","UpdateTagDialog","tag","TagIndexPage","VisibilityIcon","uploadSvg","FileEntryUrlsContext","useFileEntryUrls","entry","urlSearchParams","urls","buildPreviewUrl","addParams","preferThumbnail","isAbsoluteUrl","extension","urlString","baseUrl","FilePreviewContext","DefaultFilePreview","allowDownload","entries","activeIndex","activeEntry","content","downloadUrl","ImageFilePreview","previewUrl","FIVE_MB","TextFilePreview","tooLarge","setTooLarge","setIsLoading","isFailed","setIsFailed","contents","setContents","getFileContents","src","VideoFilePreview","mediaInvalid","setMediaInvalid","AudioFilePreview","PdfFilePreview","WordDocumentFilePreview","showDefault","setShowDefault","timeoutId","buildOfficeLivePreviewUrl","AvailablePreviews","getPreviewForEntry","mime","ChevronLeftIcon","DefaultFileIcon","AudioFileIcon","VideoFileIcon","TextFileIcon","PdfFileIcon","ArchiveFileIcon","FolderFileIcon","ImageFileIcon","PowerPointFileIcon","WordFileIcon","SpreadsheetFileIcon","SharedFolderFileIcon","FileTypeIcon","FileTypeIcons","TwoMB","FileThumbnail","iconClassName","showImage","alt","FilePreviewContainer","onClose","showHeader","headerActionsLeft","useMediaQuery","setActiveIndex","contextValue","Preview","canOpenNext","openNext","canOpenPrevious","openPrevious","onNext","onPrevious","actionsLeft","downloadButton","ChevronRightIcon","FilePreviewDialog","Content","FILE_ENTRY_TYPE_FILTER","FILE_ENTRY_INDEX_FILTERS","owner","FormattedBytes","FileEntryIndexPage","SubscriptionIndexPageFilters","subscriptionsSvg","useUpdateSubscription","updateSubscription","CrupdateSubscriptionForm","useProducts","watchedProductId","selectedProduct","product","price","FormattedPrice","UpdateSubscriptionDialog","useCreateSubscription","createNewSubscription","CreateSubscriptionDialog","createSubscription","PlayArrowIcon","SubscriptionActions","SubscriptionsIndexPage","PageActions","ResumeSubscriptionButton","SuspendSubscriptionButton","CancelSubscriptionButton","cancelSubscription","useCancelSubscription","handleSuspendSubscription","PauseIcon","resumeSubscription","useResumeSubscription","handleResumeSubscription","handleDeleteSubscription","SyncIcon","useSyncProducts","syncPlans","useDeleteProduct","updateProduct","productId","PlansIndexPageFilters","DeleteProductButton","PlansIndexPage","deleteProduct","useProduct","fetchProduct","BillingPeriodPresets","PriceForm","onRemovePrice","currencies","isNewProduct","isNewPrice","subscriberCount","billingPeriodPreset","setBillingPeriodPreset","interval","intervalCount","allowPriceChanges","BillingPeriodSelect","CustomBillingPeriodField","setFormValue","maxIntervalCount","CrupdatePlanForm","FeatureListForm","PricingListForm","useUpdateProduct","backendPayload","feature","EditPlanPage","useCreateProduct","createProduct","CreatePlanPage","GdprSettings","CookieNoticeSection","RegistrationPoliciesSection","noticeEnabled","useUpdateCustomPage","pageId","finalEndpoint","updatePage","ArticleEditorTitle","editingTitle","setEditingTitle","watchedTitle","titlePlaceholder","SlugEditor","host","placeholder","onInputBlur","showLinkIcon","pattern","minLength","maxLength","hideButton","prefix","suffix","isEditing","setIsEditing","handleSubmit","UndoIcon","RedoIcon","HistoryButtons","editor","CodeIcon","ModeButton","Divider","FormatBoldIcon","FormatItalicIcon","FormatUnderlinedIcon","FontStyleButtons","FormatListBulletedIcon","FormatListNumberedIcon","ListButtons","bulletActive","orderedActive","insertLinkIntoTextEditor","target","LinkButton","LinkDialog","previousUrl","previousText","ImageButton","diskPrefix","selectAndUploadFile","useActiveUpload","handleUpload","Disk","ImageIcon","FormatClearIcon","ClearFormatButton","HorizontalRuleIcon","PriorityHighIcon","NoteIcon","SmartDisplayIcon","InsertMenuTrigger","setDialog","WarningIcon","EmbedDialog","previousSrc","Keyboard","modifier","separator","modKey","isMac","FormatMenuTrigger","FormatColorTextIcon","FormatColorFillIcon","ColorButtons","textActive","backgroundActive","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","iconMap","AlignButtons","activeKey","ActiveIcon","FormatIndentDecreaseIcon","FormatIndentIncreaseIcon","IndentButtons","CodeBlockMenuTrigger","MenubarRowClassName","ArticleBodyEditorMenubar","justify","hideInsertButton","imageDiskPrefix","extendedVisible","setExtendedVisible","UnfoldLessIcon","UnfoldMoreIcon","ExtendedButtons","ArticleEditorStickyHeader","allowSlugEditing","saveButton","slugPrefix","isSticky","sentinelRef","useStickySentinel","FormSlugEditor","SaveButton","manuallyChanged","formVal","ArticleBodyEditor","EditCustomPage","useCustomPage","PageMetaTags","crupdatePage","handleSave","editorContent","FormProvider","useCreateCustomPage","createPage","CreateCustomPage","fontImage","FontSelectorFilters","setFilters","BrowserSafeFonts","chunkArray","array","chunkSize","resultArray","chunkIndex","useFilter","collator","useCollator","substring","scan","sliceLen","slice","useFontSelectorState","currentPage","setCurrentPage","setFilterState","contains","useCallback","allFonts","filteredFonts","fonts","loadFonts","FontSelectorPagination","total","FontSelector","FontList","gridClassName","FontListSkeleton","FontButton","displayName","ThemeFontPanel","radiusMap","ThemeRadiusPanel","RadiusSelector","hidePill","formKey","currentValue","PreviewButton","radius","LogsPage","BooleanIndicator","useRerunScheduledCommand","rerunCommand","EventRepeatIcon","ScheduleDatatableColumns","FormattedRelativeTime","RerunButton","timelineImage","ScheduleLogDatatable","DownloadIcon","bugFixingImage","ErrorLogDatatableColumns","InfoIcon","ErrorLogEntryDialog","downloadLogItem","el","useDeleteErrorLog","deleteLogFile","identifier","ErrorLogDatatable","setOnce","selectedFile","setSelectedFile","firstFile","FileSelector","ConfirmDeleteDialog","deleteLog","closeDialog","openedImage","useOutgoingEmailLogItemWithMime","fetchLogItem","OutgoingEmailLogEntryDialog","logItemId","iframe","OutgoingEmailLogDatatableColumns","StatusChip","PreviewEmailButton","OutgoingEmailLogDatatableFilters","OutgoingEmailLogDatatable","UserRoleSection","setQuery","CrupdateResourceSection","suggestion","useUpdateUser","updateUser","UpdateUserForm","useOutletContext","DirtyFormSaveDrawer","UpdateUserDetailsTab","EmailConfirmSection","resendConfirmationEmail","useResendVerificationEmail","require_email_confirmation","UpdateUserPermissionsTab","UpdateUserDatetimeTab","LocalizationPanel","UpdateUserApiTab","AccessTokenPanel","UpdateUserSecurityTab","ChangePasswordPanel","TwoFactorPanel","SocialLoginPanel","SessionsPanel","ThemeEditorForm","ThemeEditorBreadcrumb","lastSegment","allThemes","activeTheme","MenuEditorForm","MenuEditorBreadcrumb","allMenus","activeMenu","activeItem","useUpdateLyric","updateGenre","CrupdateLyricForm","UpdateLyricDialog","lyric","updateLyric","useCreateLyric","CreateLyricDialog","trackId","createLyric","ClosedCaptionIcon","BarChartIcon","TracksDatatableColumns","track","TrackImage","TrackLink","SmallArtistImage","ArtistLink","FormattedDuration","TracksDatatableFilters","ARTIST_MODEL","useImportTrack","importTrack","TRACK_MODEL","ImportTrackDialog","PublishIcon","TracksDatatablePage","marketing","spotify_is_setup","album","AlbumsDatatableColumns","AlbumImage","AlbumLink","AlbumsDatatableFilters","useImportAlbum","importAlbum","ALBUM_MODEL","ImportAlbumDialog","AlbumsDatatablePage","musicImage","acceptRequest","BackstageRequestDatatableFilters","BackstageRequestType","BackstageRequestsDatatableColumns","request","BackstageRequestsDatatablePage","useApproveBackstageRequest","approveRequest","requestId","ApproveBackstageRequestDialog","useDeleteBackstageRequest","deleteRequest","useDenyBackstageRequest","denyRequest","DenyBackstageRequestDialog","BackstageRequestViewerHeader","DeleteButton","ViewBackstageRequestPage","useBackstageRequest","RequestDetails","VerificationList","Detail","UserAvatar","VerificationListItem","DocumentScannerIcon","SocialServiceVerification","service","account","TwitterIcon","FacebookIcon","action","GenreDatatablePageFilters","useUpdateGenre","CrupdateGenreFrom","useImportGenreArtists","importArtists","GENRE_MODEL","UpdateGenreDialog","genre","useCreateGenre","CreateGenreDialog","createGenre","GenreLink","GenresDatatablePage","GenreImage","playlistImage","PlaylistDatatablePageFilters","useImportPlaylist","PLAYLIST_MODEL","ImportPlaylistDialog","importPlaylist","playlist","PlaylistLink","UserProfileLink","updatedPlaylist","invalidateQuery","UpdatePlaylistDialog","PlaylistDatatablePage","newPlaylist","CreatePlaylistDialog","lyricImage","LyricDatatablePageFilters","LyricsDatatablePage","ArtistDatatableColumns","artist","ArtistDatatableFilters","useImportArtist","ImportArtistDialog","importArtist","ArtistDatatablePage","useCreateArtist","createAlbum","CreateArtistPage","wrapInContainer","showExternalFields","createArtist","CrupdateArtistForm","CreateArtistPageWithExternalFields","DeleteCommentsButton","commentIds","deleteComments","useDeleteComments","useUpdateComment","updateComment","commentId","useRestoreComments","restoreComment","RestoreCommentsButton","restoreComments","CommentDatatableItem","comment","onToggle","CommentableHeader","CommentHeader","EditCommentForm","isSaved","commentable","UserDisplayName","setContent","show","auth","publicDiscussionsImage","CommentsDatatableFilters","CommentsDatatablePage","hideTitle","selectedComments","setSelectedComments","toggleComment","newValues","ButtonGroup","childValue","toggleMultipleValue","childIndex","buttons","button","active","adjustedColor","getStyle","MarinaModaMusicProdAdminReportPage","setDateRange","channel","ReportDateSelector","useAdminReport","AdminHeaderReport","AdminInsightsReport","InsightsReportCharts","AdminVisitorsReport","isPlaceholderData","VisitorsReportCharts","useCreateChannel","createChannel","CreateChannelPageLayout","submitButtonText","EMPTY_PAGINATION_RESPONSE","ChannelNameField","autoFocus","FormSlugField","disableSlugEditing","restrictionId","newSlug","ContentTypeField","model","newModel","modelConfig","modelName","ViewWeekIcon","ViewListIcon","contentModels","CHANNEL_MODEL","contentSortingMethods","contentLayoutMethods","GridViewIcon","contentAutoUpdateMethods","contentRestrictions","channelContentConfig","ContentModelField","exclude","firstAutoUpdateMethod","ContentOrderField","contentType","sortMethods","method","sortConfig","ContentLayoutFields","LayoutField","contentModel","ChannelEditorTabs","SeoFields","ChannelsDocsLink","hash","admin","ChannelAutoUpdateField","providers","selectedMethodConfig","InfoDialogTrigger","provider","AppChannelAutoUpdateField","lastfm_is_setup","ChannelRestrictionField","InfoTrigger","AppChannelRestrictionField","RestrictionModelField","setSearchValue","selectedId","selectedRestriction","restrictionLabel","CreateChannelPage","useUpdateChannel","updateChannel","EditChannelPageLayout","useChannel","DescriptionIcon","DashboardIcon","ChannelPaginationTypeField","PublicIcon","ChannelSeoFields","RefreshIcon","useUpdateChannelContent","channelId","channelQueryKey","useReorderChannelContent","reorderContent","modelType","useAddToChannel","addToChannel","useRemoveFromChannel","removeFromChannel","DragHandleIcon","RemoveItemColumn","ChannelContentEditor","searchField","noResultsMessage","setPerPage","contentOrder","useChannelContent","col","ContentNotEditableWarning","UpdateContentButton","Pagination","ContentTableRow","PaginationControls","isTouchDevice","useIsTouchDevice","meta","TableContext","domRef","previewRef","dropPosition","setDropPosition","newPagination","RowDragPreview","DragPreview","slugOrId","updateContent","useAddableContent","search","keepPreviousData","ChannelContentSearchField","onResultSelected","imgRenderer","isFetching","ComboBox","ChannelContentItemImage","imageClassName","EditChannelPage","SettingsIcon","SearchField","HomeIcon","ChannelsDatatableColumns","ChannelName","ContentType","InternalColumn","internalLabel","isHomepage","useApplyChannelPreset","resetChannels","ChannelsDatatablePage","ApplyPresetDialog","useSearchModels","fetchModels","useImportSearchModels","importModels","SearchSettings","SearchMethodSelect","ImportRecordsPanel","selectedMethod","MysqlFields","MeilisearchFields","AlgoliaFields","ElasticsearchField","selectedModel","setSelectedModel","AutomationSettings","WikipediaFields","SpotifyFields","ArtistPagePanel","getListItem","artistPageTabs","ArtistTabListItem","newTabs","TabDragPreview","PlayerSettings","GeneralPanel","ControlsPanel","LandingPageAppearanceForm","LandingPageSectionPrimaryFeatures","FeatureForm","defaultImage","LandingPageSectionActionButtons","LandingPageSectionGeneral","HeaderSection","FooterSection","PricingSection","FormSlider","LandingPageSecondaryFeatures","getDefaultImage"],"sources":["../../../node_modules/@tanstack/react-query/build/modern/useMutationState.js","../../../common/foundation/resources/client/admin/admin-sidebar.tsx","../../../common/foundation/resources/client/ui/library/icons/material/MenuOpen.tsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-navbar.tsx","../../../common/foundation/resources/client/admin/use-admin-setup-alerts.ts","../../../common/foundation/resources/client/admin/admin-layout.tsx","../../../common/foundation/resources/client/datatable/filters/backend-filter.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/date-range-picker.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/form-date-range-picker.tsx","../../../common/foundation/resources/client/datatable/filters/timestamp-filters.ts","../../../common/foundation/resources/client/admin/users/user-datatable-filters.ts","../../../common/foundation/resources/client/datatable/page/data-table-context.ts","../../../common/foundation/resources/client/datatable/data-table-pagination-footer.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FilterAlt.tsx","../../../common/foundation/resources/client/ui/library/accordion/accordtion-animation.ts","../../../common/foundation/resources/client/ui/library/accordion/accordion.tsx","../../../common/foundation/resources/client/datatable/filters/panels/select-filter-panel.tsx","../../../common/foundation/resources/client/datatable/filters/panels/date-range-filter-panel.tsx","../../../common/foundation/resources/client/datatable/filters/panels/normalized-model-filter-panel.tsx","../../../common/foundation/resources/client/datatable/filters/filter-operator-names.ts","../../../common/foundation/resources/client/datatable/filters/panels/input-filter-panel.tsx","../../../common/foundation/resources/client/datatable/filters/panels/boolean-filter-panel.tsx","../../../common/foundation/resources/client/datatable/filters/panels/chip-field-filter-panel.tsx","../../../common/foundation/resources/client/datatable/filters/add-filter-dialog.tsx","../../../common/foundation/resources/client/datatable/filters/add-filter-button.tsx","../../../common/foundation/resources/client/datatable/data-table-header.tsx","../../../common/foundation/resources/client/datatable/filters/filter-list/filter-list-trigger-button.tsx","../../../common/foundation/resources/client/datatable/filters/filter-list/filter-list-item-dialog-trigger.tsx","../../../common/foundation/resources/client/datatable/filters/filter-list/filter-list-control.tsx","../../../common/foundation/resources/client/datatable/filters/filter-list/filter-list.tsx","../../../common/foundation/resources/client/datatable/selected-state-datatable-header.tsx","../../../common/foundation/resources/client/datatable/filters/filter-list/filter-list-skeleton.tsx","../../../common/foundation/resources/client/datatable/data-table.tsx","../../../common/foundation/resources/client/datatable/page/data-table-page.tsx","../../../common/foundation/resources/client/datatable/requests/delete-selected-rows.ts","../../../common/foundation/resources/client/datatable/page/delete-selected-items-action.tsx","../../../common/foundation/resources/client/datatable/page/data-table-emty-state-message.tsx","../../../common/foundation/resources/client/admin/roles/team.svg","../../../common/foundation/resources/client/datatable/data-table-add-item-button.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FileDownload.tsx","../../../common/foundation/resources/client/datatable/requests/use-export-csv.ts","../../../common/foundation/resources/client/datatable/csv-export/csv-export-info-dialog.tsx","../../../common/foundation/resources/client/datatable/csv-export/data-table-export-csv-button.tsx","../../../common/foundation/resources/client/ui/library/icons/material/PersonOff.tsx","../../../common/foundation/resources/client/admin/users/requests/use-ban-user.ts","../../../common/foundation/resources/client/admin/users/ban-user-dialog.tsx","../../../common/foundation/resources/client/admin/users/requests/use-unban-user.ts","../../../common/foundation/resources/client/admin/users/requests/use-impersonate-user.ts","../../../common/foundation/resources/client/admin/users/user-datatable-columns.tsx","../../../common/foundation/resources/client/admin/users/requests/create-user.ts","../../../common/foundation/resources/client/admin/users/create-user-dialog.tsx","../../../common/foundation/resources/client/admin/users/user-datatable.tsx","../../../common/foundation/resources/client/admin/appearance/config/default-appearance-config.ts","../../../common/foundation/resources/client/admin/appearance/config/merged-appearance-config.ts","../../../common/foundation/resources/client/admin/appearance/appearance-store.ts","../../../common/foundation/resources/client/admin/settings/requests/use-admin-settings.ts","../../../common/foundation/resources/client/admin/appearance/requests/use-appearance-editor-values.ts","../../../common/foundation/resources/client/admin/appearance/appearance-editor-page.tsx","../../../common/foundation/resources/client/admin/appearance/appearance-button.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/menu-list.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/hooks/available-routes.ts","../../../common/foundation/resources/client/ui/library/utils/string/uc-first.ts","../../../common/foundation/resources/client/admin/appearance/sections/menus/add-menu-item-dialog.tsx","../../../common/foundation/resources/client/ui/library/icons/material/DragIndicator.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Delete.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/dropdown-menu.svg","../../../common/foundation/resources/client/admin/appearance/sections/menus/appearance-menu-editor.tsx","../../../common/foundation/resources/client/auth/ui/permission-selector.tsx","../../../common/foundation/resources/client/ui/icon-picker/icon-grid-style.ts","../../../common/foundation/resources/client/ui/icon-picker/icon-picker.tsx","../../../common/foundation/resources/client/ui/icon-picker/icon-picker-dialog.tsx","../../../common/foundation/resources/client/admin/menus/menu-item-form.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/menu-item-editor.tsx","../../../common/foundation/resources/client/admin/appearance/requests/use-save-appearance-editor-changes.ts","../../../common/foundation/resources/client/ui/library/overlays/dialog/blocker-dialog.tsx","../../../common/foundation/resources/client/admin/appearance/appearance-editor-form.tsx","../../../common/foundation/resources/client/ui/navigation/use-previous-path.ts","../../../common/foundation/resources/client/admin/appearance/appearance-editor-breadcrumb.tsx","../../../common/foundation/resources/client/admin/appearance/sections/general-section.tsx","../../../common/foundation/resources/client/ui/library/utils/string/random-number.ts","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-list.tsx","../../../common/foundation/resources/client/ace-editor/ace-dialog.tsx","../../../common/foundation/resources/client/admin/appearance/sections/seo/use-seo-tags.ts","../../../common/foundation/resources/client/admin/appearance/sections/seo/use-update-seo-tags.ts","../../../common/foundation/resources/client/admin/appearance/sections/seo/seo-section.tsx","../../../common/foundation/resources/client/admin/appearance/sections/code/custom-code-section.tsx","../../../common/foundation/resources/client/admin/custom-pages/articles.svg","../../../common/foundation/resources/client/admin/custom-pages/custom-page-datatable-filters.tsx","../../../common/foundation/resources/client/admin/custom-pages/custom-page-datatable-columns.tsx","../../../common/foundation/resources/client/admin/custom-pages/custom-page-datable-page.tsx","../../../resources/client/admin/settings/app-settings-nav-config.ts","../../../common/foundation/resources/client/admin/settings/settings-nav-config.ts","../../../common/foundation/resources/client/admin/settings/admin-settings-page.tsx","../../../common/foundation/resources/client/admin/settings/requests/use-generate-sitemap.ts","../../../common/foundation/resources/client/admin/settings/requests/use-update-admin-settings.ts","../../../common/foundation/resources/client/admin/settings/form/settings-separator.tsx","../../../common/foundation/resources/client/admin/settings/form/settings-form-loading-indicator.tsx","../../../common/foundation/resources/client/admin/settings/form/admin-settings-form.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Link.tsx","../../../common/foundation/resources/client/admin/settings/form/learn-more-link.tsx","../../../common/foundation/resources/client/admin/settings/pages/general-settings.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/color-icon.tsx","../../../common/foundation/resources/client/ui/library/themes/utils/color-to-theme-value.ts","../../../common/foundation/resources/client/ui/library/icons/material/Tune.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-settings-dialog-trigger.tsx","../../../common/foundation/resources/client/ui/library/icons/material/RestartAlt.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-more-options-button.tsx","../../../node_modules/react-colorful/dist/index.mjs","../../../common/foundation/resources/client/ui/library/color-picker/color-presets.ts","../../../common/foundation/resources/client/ui/library/color-picker/color-swatch.tsx","../../../common/foundation/resources/client/ui/library/color-picker/color-picker.tsx","../../../common/foundation/resources/client/ui/library/color-picker/color-picker-dialog.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/navbar-color-picker.tsx","../../../common/foundation/resources/client/admin/appearance/appearance-section-title.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-editor.tsx","../../../common/foundation/resources/client/admin/settings/form/settings-error-group.tsx","../../../common/foundation/resources/client/admin/settings/form/json-chip-field.tsx","../../../common/foundation/resources/client/admin/settings/pages/subscription-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/localization-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/authentication-settings.tsx","../../../common/foundation/resources/client/ui/library/utils/files/space-units.ts","../../../common/foundation/resources/client/ui/library/utils/files/convert-to-bytes.ts","../../../common/foundation/resources/client/uploads/components/file-size-field.tsx","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/max-server-upload-size.ts","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/dropbox-form/use-generate-dropbox-refresh-token.ts","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/dropbox-form/dropbox-form.tsx","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/use-upload-s3-cors.ts","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/uploading-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/mailgun-credentials.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/smtp-credentials.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/ses-credentials.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/postmark-credentials.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/gmail-icon.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/connect-gmail-panel.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/outgoing-mail-group.tsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/outgoing-email-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/cache-settings/clear-cache.ts","../../../common/foundation/resources/client/admin/settings/pages/cache-settings/cache-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/logging-settings.tsx","../../../common/foundation/resources/client/admin/settings/requests/use-queue-stats.ts","../../../common/foundation/resources/client/admin/settings/pages/queue-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/websocket-settings.tsx","../../../common/foundation/resources/client/admin/settings/pages/recaptcha-settings.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/file-field.tsx","../../../common/foundation/resources/client/admin/settings/pages/reports-settings.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-page-header.tsx","../../../common/foundation/resources/client/http/use-url-backed-tabs.ts","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-page-tabs.tsx","../../../common/foundation/resources/client/admin/users/requests/use-delete-user.ts","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-page-actions.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-page.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Translate.tsx","../../../common/foundation/resources/client/admin/translations/use-locale-with-lines.ts","../../../common/foundation/resources/client/admin/translations/update-localization.ts","../../../common/foundation/resources/client/admin/translations/update-localization-dialog.tsx","../../../common/foundation/resources/client/admin/translations/create-localization.ts","../../../common/foundation/resources/client/admin/translations/create-localization-dialog.tsx","../../../common/foundation/resources/client/admin/translations/around-the-world.svg","../../../common/foundation/resources/client/admin/translations/use-upload-translation-file.ts","../../../common/foundation/resources/client/admin/translations/localization-index.tsx","../../../common/foundation/resources/client/admin/translations/new-translation-dialog.tsx","../../../common/foundation/resources/client/admin/translations/translation-management-page.tsx","../../../common/foundation/resources/client/admin/ads/ads-page.tsx","../../../common/foundation/resources/client/admin/appearance/section-list.tsx","../../../common/foundation/resources/client/admin/roles/role-index-page-filters.ts","../../../common/foundation/resources/client/admin/roles/roles-index-page.tsx","../../../common/foundation/resources/client/admin/roles/requests/use-role.ts","../../../common/foundation/resources/client/admin/roles/requests/use-update-role.ts","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/crupdate-role-settings-panel.tsx","../../../common/foundation/resources/client/users/select-user-dialog.tsx","../../../common/foundation/resources/client/admin/roles/requests/use-remove-users-from-role.ts","../../../common/foundation/resources/client/admin/roles/requests/use-add-users-to-role.ts","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/edit-role-page-users-panel.tsx","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/edit-role-page.tsx","../../../common/foundation/resources/client/admin/roles/requests/user-create-role.ts","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/create-role-page.tsx","../../../common/foundation/resources/client/admin/tags/tag-index-page-filters.ts","../../../common/foundation/resources/client/admin/tags/software-engineer.svg","../../../common/foundation/resources/client/admin/tags/crupdate-tag-form.tsx","../../../common/foundation/resources/client/admin/tags/requests/use-create-new-tag.ts","../../../common/foundation/resources/client/admin/tags/create-tag-dialog.tsx","../../../common/foundation/resources/client/admin/tags/requests/use-update-tag.ts","../../../common/foundation/resources/client/admin/tags/update-tag-dialog.tsx","../../../common/foundation/resources/client/admin/tags/tag-index-page.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Visibility.tsx","../../../common/foundation/resources/client/admin/file-entry/upload.svg","../../../common/foundation/resources/client/uploads/file-entry-urls.ts","../../../common/foundation/resources/client/uploads/components/file-preview/file-preview-context.ts","../../../common/foundation/resources/client/uploads/components/file-preview/file-preview/default-file-preview.tsx","../../../common/foundation/resources/client/uploads/components/file-preview/file-preview/image-file-preview.tsx","../../../common/foundation/resources/client/uploads/components/file-preview/file-preview/text-file-preview.tsx","../../../common/foundation/resources/client/uploads/components/file-preview/file-preview/video-file-preview.tsx","../../../common/foundation/resources/client/uploads/components/file-preview/file-preview/audio-file-preview.tsx","../../../common/foundation/resources/client/uploads/components/file-preview/file-preview/pdf-file-preview.tsx","../../../common/foundation/resources/client/uploads/components/file-preview/file-preview/word-document-file-preview.tsx","../../../common/foundation/resources/client/uploads/components/file-preview/available-previews.ts","../../../common/foundation/resources/client/ui/library/icons/material/ChevronLeft.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/icons/default-file-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/icons/audio-file-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/icons/video-file-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/icons/text-file-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/icons/pdf-file-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/icons/archive-file-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/icons/folder-file-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/icons/image-file-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/icons/power-point-file-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/icons/word-file-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/icons/spreadsheet-file-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/icons/shared-folder-file-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/file-type-icon.tsx","../../../common/foundation/resources/client/uploads/components/file-type-icon/file-thumbnail.tsx","../../../common/foundation/resources/client/uploads/components/file-preview/file-preview-container.tsx","../../../common/foundation/resources/client/uploads/components/file-preview/file-preview-dialog.tsx","../../../common/foundation/resources/client/admin/file-entry/file-entry-index-filters.ts","../../../common/foundation/resources/client/admin/file-entry/file-entry-index-page.tsx","../../../common/foundation/resources/client/admin/subscriptions/subscription-index-page-filters.ts","../../../common/foundation/resources/client/admin/subscriptions/subscriptions.svg","../../../common/foundation/resources/client/admin/subscriptions/requests/use-update-subscription.ts","../../../common/foundation/resources/client/admin/subscriptions/crupdate-subscription-form.tsx","../../../common/foundation/resources/client/admin/subscriptions/update-subscription-dialog.tsx","../../../common/foundation/resources/client/admin/subscriptions/requests/use-create-subscription.ts","../../../common/foundation/resources/client/admin/subscriptions/create-subscription-dialog.tsx","../../../common/foundation/resources/client/ui/library/icons/material/PlayArrow.tsx","../../../common/foundation/resources/client/admin/subscriptions/subscriptions-index-page.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Sync.tsx","../../../common/foundation/resources/client/admin/plans/requests/use-sync-products.ts","../../../common/foundation/resources/client/admin/plans/requests/use-delete-product.ts","../../../common/foundation/resources/client/admin/plans/plans-index-page-filters.ts","../../../common/foundation/resources/client/admin/plans/plans-index-page.tsx","../../../common/foundation/resources/client/admin/plans/requests/use-product.ts","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/billing-period-presets.ts","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/price-form.tsx","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/crupdate-plan-form.tsx","../../../common/foundation/resources/client/admin/plans/requests/use-update-product.ts","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/edit-plan-page.tsx","../../../common/foundation/resources/client/admin/plans/requests/use-create-product.ts","../../../common/foundation/resources/client/admin/plans/crupdate-plan-page/create-plan-page.tsx","../../../common/foundation/resources/client/admin/settings/pages/gdpr-settings.tsx","../../../common/foundation/resources/client/admin/custom-pages/requests/use-update-custom-page.ts","../../../common/foundation/resources/client/article-editor/article-editor-title.tsx","../../../common/foundation/resources/client/ui/other/slug-editor.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Undo.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Redo.tsx","../../../common/foundation/resources/client/text-editor/menubar/history-buttons.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Code.tsx","../../../common/foundation/resources/client/text-editor/menubar/mode-button.tsx","../../../common/foundation/resources/client/text-editor/menubar/divider.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatBold.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatItalic.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatUnderlined.tsx","../../../common/foundation/resources/client/text-editor/menubar/font-style-buttons.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatListBulleted.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatListNumbered.tsx","../../../common/foundation/resources/client/text-editor/menubar/list-buttons.tsx","../../../common/foundation/resources/client/text-editor/insert-link-into-text-editor.ts","../../../common/foundation/resources/client/text-editor/menubar/link-button.tsx","../../../common/foundation/resources/client/text-editor/menubar/image-button.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatClear.tsx","../../../common/foundation/resources/client/text-editor/menubar/clear-format-button.tsx","../../../common/foundation/resources/client/ui/library/icons/material/HorizontalRule.tsx","../../../common/foundation/resources/client/ui/library/icons/material/PriorityHigh.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Note.tsx","../../../common/foundation/resources/client/ui/library/icons/material/SmartDisplay.tsx","../../../common/foundation/resources/client/text-editor/menubar/insert-menu-trigger.tsx","../../../common/foundation/resources/client/ui/library/keyboard/keyboard.tsx","../../../common/foundation/resources/client/text-editor/menubar/format-menu-trigger.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatColorText.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatColorFill.tsx","../../../common/foundation/resources/client/text-editor/menubar/color-buttons.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatAlignLeft.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatAlignCenter.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatAlignRight.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatAlignJustify.tsx","../../../common/foundation/resources/client/text-editor/menubar/align-buttons.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatIndentDecrease.tsx","../../../common/foundation/resources/client/ui/library/icons/material/FormatIndentIncrease.tsx","../../../common/foundation/resources/client/text-editor/menubar/indent-buttons.tsx","../../../common/foundation/resources/client/text-editor/menubar/code-block-menu-trigger.tsx","../../../common/foundation/resources/client/article-editor/article-body-editor-menubar.tsx","../../../common/foundation/resources/client/article-editor/article-editor-sticky-header.tsx","../../../common/foundation/resources/client/admin/custom-pages/edit-custom-page.tsx","../../../common/foundation/resources/client/admin/custom-pages/requests/use-create-custom-page.ts","../../../common/foundation/resources/client/admin/custom-pages/create-custom-page.tsx","../../../common/foundation/resources/client/ui/font-selector/font.svg","../../../common/foundation/resources/client/ui/font-selector/font-selector-filters.tsx","../../../common/foundation/resources/client/ui/library/fonts/font-picker/browser-safe-fonts.ts","../../../common/foundation/resources/client/ui/library/utils/array/chunk-array.ts","../../../common/foundation/resources/client/ui/library/i18n/use-filter.ts","../../../common/foundation/resources/client/ui/font-selector/font-selector-state.ts","../../../common/foundation/resources/client/ui/font-selector/font-selector-pagination.tsx","../../../common/foundation/resources/client/ui/font-selector/font-selector.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-font-panel.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-radius-panel.tsx","../../../common/foundation/resources/client/admin/logging/logs-page.tsx","../../../common/foundation/resources/client/datatable/column-templates/boolean-indicator.tsx","../../../common/foundation/resources/client/admin/logging/schedule/use-rerurun-scheduled-command.tsx","../../../common/foundation/resources/client/ui/library/icons/material/EventRepeat.tsx","../../../common/foundation/resources/client/admin/logging/schedule/schedule-datatable-columns.tsx","../../../common/foundation/resources/client/admin/logging/schedule/timeline.svg","../../../common/foundation/resources/client/admin/logging/schedule/schedule-log-datatable.tsx","../../../common/foundation/resources/client/admin/logging/error/bug-fixing.svg","../../../common/foundation/resources/client/admin/logging/error/error-log-datatable-columns.tsx","../../../common/foundation/resources/client/admin/logging/error/error-log-entry-dialog.tsx","../../../common/foundation/resources/client/admin/logging/error/use-delete-error-log.ts","../../../common/foundation/resources/client/admin/logging/error/error-log-datatable.tsx","../../../common/foundation/resources/client/admin/logging/outgoing-email/opened.svg","../../../common/foundation/resources/client/admin/logging/outgoing-email/use-outgoing-email-log-item-with-mime.ts","../../../common/foundation/resources/client/admin/logging/outgoing-email/outgoing-email-log-entry-dialog.tsx","../../../common/foundation/resources/client/admin/logging/outgoing-email/outgoing-email-log-datatable-columns.tsx","../../../common/foundation/resources/client/admin/logging/outgoing-email/outgoing-email-log-datatable-filters.tsx","../../../common/foundation/resources/client/admin/logging/outgoing-email/outgoing-email-log-datatable.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/user-role-section.tsx","../../../common/foundation/resources/client/admin/users/requests/user-update-user.ts","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-form.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-details-tab.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-permissions-tab.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-datetime-tab.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-api-tab.tsx","../../../common/foundation/resources/client/admin/users/update-user-page/update-user-security-tab.tsx","../../../common/foundation/resources/client/admin/appearance/sections/themes/theme-editor-form.tsx","../../../common/foundation/resources/client/admin/appearance/sections/menus/menu-editor-form.tsx","../../../resources/client/admin/lyrics-datatable-page/requests/use-update-lyric.ts","../../../resources/client/admin/lyrics-datatable-page/crupdate-lyric-form.tsx","../../../resources/client/admin/lyrics-datatable-page/update-lyric-dialog.tsx","../../../resources/client/admin/lyrics-datatable-page/requests/use-create-lyric.ts","../../../resources/client/admin/lyrics-datatable-page/create-lyric-dialog.tsx","../../../common/foundation/resources/client/ui/library/icons/material/ClosedCaption.tsx","../../../common/foundation/resources/client/ui/library/icons/material/BarChart.tsx","../../../resources/client/admin/tracks-datatable-page/tracks-datatable-columns.tsx","../../../resources/client/admin/tracks-datatable-page/tracks-datatable-filters.ts","../../../resources/client/admin/tracks-datatable-page/requests/use-import-track.ts","../../../resources/client/admin/tracks-datatable-page/import-track-dialog.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Publish.tsx","../../../resources/client/admin/tracks-datatable-page/tracks-datatable-page.tsx","../../../resources/client/admin/albums-datatable-page/albums-datatable-columns.tsx","../../../resources/client/admin/albums-datatable-page/albums-datatable-filters.ts","../../../resources/client/admin/albums-datatable-page/requests/use-import-album.ts","../../../resources/client/admin/albums-datatable-page/import-album-dialog.tsx","../../../resources/client/admin/albums-datatable-page/albums-datatable-page.tsx","../../../resources/client/admin/backstage-requests-datatable-page/accept-request.svg","../../../resources/client/admin/backstage-requests-datatable-page/backstage-request-datatable-filters.ts","../../../resources/client/admin/backstage-requests-datatable-page/backstage-request-type.tsx","../../../resources/client/admin/backstage-requests-datatable-page/backstage-requests-datatable-columns.tsx","../../../resources/client/admin/backstage-requests-datatable-page/backstage-requests-datatable-page.tsx","../../../resources/client/admin/backstage-requests-datatable-page/requests/use-approve-backstage-request.ts","../../../resources/client/admin/backstage-requests-datatable-page/viewer/approve-backstage-request-dialog.tsx","../../../resources/client/admin/backstage-requests-datatable-page/requests/use-delete-backstage-request.ts","../../../resources/client/admin/backstage-requests-datatable-page/requests/use-deny-backstage-request.ts","../../../resources/client/admin/backstage-requests-datatable-page/viewer/deny-backstage-request-dialog.tsx","../../../resources/client/admin/backstage-requests-datatable-page/viewer/backstage-request-viewer-header.tsx","../../../resources/client/admin/backstage-requests-datatable-page/viewer/view-backstage-request-page.tsx","../../../resources/client/admin/genres-datatable-page/genre-datatable-page-filters.ts","../../../resources/client/admin/genres-datatable-page/requests/use-update-genre.ts","../../../resources/client/admin/genres-datatable-page/crupdate-genre-form.tsx","../../../resources/client/admin/genres-datatable-page/requests/use-import-genre-artists.ts","../../../resources/client/admin/genres-datatable-page/update-genre-dialog.tsx","../../../resources/client/admin/genres-datatable-page/requests/use-create-genre.ts","../../../resources/client/admin/genres-datatable-page/create-genre-dialog.tsx","../../../resources/client/admin/genres-datatable-page/genres-datatable-page.tsx","../../../resources/client/admin/channels/playlist.svg","../../../resources/client/admin/playlist-datatable-page/playlist-datatable-page-filters.ts","../../../resources/client/admin/playlist-datatable-page/requests/use-import-playlist.ts","../../../resources/client/admin/playlist-datatable-page/import-playlist-dialog.tsx","../../../resources/client/admin/playlist-datatable-page/playlist-datatable-page.tsx","../../../resources/client/admin/lyrics-datatable-page/source-code.svg","../../../resources/client/admin/lyrics-datatable-page/lyric-datatable-page-filters.ts","../../../resources/client/admin/lyrics-datatable-page/lyrics-datatable-page.tsx","../../../resources/client/admin/artist-datatable-page/artist-datatable-columns.tsx","../../../resources/client/admin/artist-datatable-page/artist-datatable-filters.ts","../../../resources/client/admin/artist-datatable-page/requests/use-import-artist.ts","../../../resources/client/admin/artist-datatable-page/import-artist-dialog.tsx","../../../resources/client/admin/artist-datatable-page/artist-datatable-page.tsx","../../../resources/client/admin/artist-datatable-page/requests/use-create-artist.ts","../../../resources/client/admin/artist-datatable-page/create-artist-page.tsx","../../../common/foundation/resources/client/comments/comments-datatable-page/delete-comments-button.tsx","../../../common/foundation/resources/client/comments/requests/use-update-comment.ts","../../../common/foundation/resources/client/comments/requests/use-restore-comments.ts","../../../common/foundation/resources/client/comments/comments-datatable-page/restore-comments-button.tsx","../../../common/foundation/resources/client/comments/comments-datatable-page/comment-datatable-item.tsx","../../../common/foundation/resources/client/comments/comments-datatable-page/public-discussion.svg","../../../common/foundation/resources/client/comments/comments-datatable-page/comments-datatable-filters.ts","../../../common/foundation/resources/client/comments/comments-datatable-page/comments-datatable-page.tsx","../../../common/foundation/resources/client/ui/library/buttons/button-group.tsx","../../../resources/client/admin/reports/MarinaModaMusicProd-admin-report-page.tsx","../../../resources/client/admin/reports/admin-insights-report.tsx","../../../resources/client/admin/reports/admin-visitors-report.tsx","../../../common/foundation/resources/client/admin/channels/requests/use-create-channel.ts","../../../common/foundation/resources/client/admin/channels/channel-editor/create-channel-page-layout.tsx","../../../common/foundation/resources/client/admin/channels/channel-editor/controls/channel-name-field.tsx","../../../common/foundation/resources/client/admin/channels/channel-editor/controls/content-type-field.tsx","../../../common/foundation/resources/client/ui/library/icons/material/ViewWeek.tsx","../../../common/foundation/resources/client/ui/library/icons/material/ViewList.tsx","../../../resources/client/admin/channels/channel-content-config.tsx","../../../common/foundation/resources/client/admin/channels/channel-editor/controls/content-model-field.tsx","../../../common/foundation/resources/client/admin/channels/channel-editor/controls/content-order-field.tsx","../../../common/foundation/resources/client/admin/channels/channel-editor/controls/content-layout-fields.tsx","../../../common/foundation/resources/client/admin/channels/channel-editor/channel-editor-tabs.tsx","../../../common/foundation/resources/client/admin/channels/channels-docs-link.tsx","../../../common/foundation/resources/client/admin/channels/channel-editor/controls/channel-auto-update-field.tsx","../../../resources/client/admin/channels/app-channel-auto-update-field.tsx","../../../common/foundation/resources/client/admin/channels/channel-editor/controls/channel-restriction-field.tsx","../../../resources/client/admin/channels/app-channel-restriction-field.tsx","../../../resources/client/admin/channels/create-channel-page.tsx","../../../common/foundation/resources/client/admin/channels/requests/use-update-channel.ts","../../../common/foundation/resources/client/admin/channels/channel-editor/edit-channel-page-layout.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Description.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Dashboard.tsx","../../../common/foundation/resources/client/admin/channels/channel-editor/controls/channel-pagination-type-field.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Public.tsx","../../../common/foundation/resources/client/admin/channels/channel-editor/controls/channel-seo-fields.tsx","../../../common/foundation/resources/client/admin/channels/playlist.svg","../../../common/foundation/resources/client/ui/library/icons/material/Refresh.tsx","../../../common/foundation/resources/client/admin/channels/requests/use-update-channel-content.ts","../../../common/foundation/resources/client/admin/channels/requests/use-reorder-channel-content.ts","../../../common/foundation/resources/client/admin/channels/requests/use-add-to-channel.ts","../../../common/foundation/resources/client/admin/channels/requests/use-remove-from-channel.ts","../../../common/foundation/resources/client/admin/channels/channel-editor/channel-content-editor.tsx","../../../common/foundation/resources/client/admin/channels/requests/use-addable-content.ts","../../../common/foundation/resources/client/admin/channels/channel-editor/channel-content-search-field.tsx","../../../resources/client/admin/channels/channel-content-item-image.tsx","../../../resources/client/admin/channels/edit-channel-page.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Home.tsx","../../../common/foundation/resources/client/admin/channels/channels-datatable-columns.tsx","../../../common/foundation/resources/client/admin/channels/requests/use-apply-channel-preset.ts","../../../common/foundation/resources/client/admin/channels/channels-datatable-page.tsx","../../../common/foundation/resources/client/admin/settings/pages/search-settings/requests/use-search-models.ts","../../../common/foundation/resources/client/admin/settings/pages/search-settings/requests/use-import-search-models.ts","../../../common/foundation/resources/client/admin/settings/pages/search-settings/search-settings.tsx","../../../resources/client/admin/settings/automation-settings.tsx","../../../resources/client/admin/settings/interface-settings/artist-page-panel.tsx","../../../resources/client/admin/settings/interface-settings/player-settings.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-appearance-form.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-primary-features.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-action-buttons.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-general.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-secondary-features.tsx"],"sourcesContent":["\"use client\";\n\n// src/useMutationState.ts\nimport * as React from \"react\";\nimport { notifyManager, replaceEqualDeep } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useIsMutating(filters, queryClient) {\n  const client = useQueryClient(queryClient);\n  return useMutationState(\n    { filters: { ...filters, status: \"pending\" } },\n    client\n  ).length;\n}\nfunction getResult(mutationCache, options) {\n  return mutationCache.findAll(options.filters).map(\n    (mutation) => options.select ? options.select(\n      mutation\n    ) : mutation.state\n  );\n}\nfunction useMutationState(options = {}, queryClient) {\n  const mutationCache = useQueryClient(queryClient).getMutationCache();\n  const optionsRef = React.useRef(options);\n  const result = React.useRef();\n  if (!result.current) {\n    result.current = getResult(mutationCache, options);\n  }\n  React.useEffect(() => {\n    optionsRef.current = options;\n  });\n  return React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => mutationCache.subscribe(() => {\n        const nextResult = replaceEqualDeep(\n          result.current,\n          getResult(mutationCache, optionsRef.current)\n        );\n        if (result.current !== nextResult) {\n          result.current = nextResult;\n          notifyManager.schedule(onStoreChange);\n        }\n      }),\n      [mutationCache]\n    ),\n    () => result.current,\n    () => result.current\n  );\n}\nexport {\n  useIsMutating,\n  useMutationState\n};\n//# sourceMappingURL=useMutationState.js.map","import clsx from 'clsx';\nimport React from 'react';\nimport {CustomMenu} from '../menus/custom-menu';\nimport {Trans} from '@ui/i18n/trans';\nimport {useSettings} from '@ui/settings/use-settings';\n\ninterface Props {\n  className?: string;\n  isCompactMode?: boolean;\n}\nexport function AdminSidebar({className, isCompactMode}: Props) {\n  const {version} = useSettings();\n  return (\n    <div\n      className={clsx(\n        className,\n        isCompactMode ? 'p-6' : 'px-12 pb-16 pt-26',\n        'hidden-scrollbar relative flex flex-col gap-20 overflow-y-auto border-r bg-alt text-sm font-medium text-muted',\n      )}\n    >\n      <CustomMenu\n        matchDescendants={to => to === '/admin'}\n        menu=\"admin-sidebar\"\n        orientation=\"vertical\"\n        onlyShowIcons={isCompactMode}\n        iconSize={isCompactMode ? 'md' : 'sm'}\n        itemClassName={({isActive}) =>\n          clsx(\n            'w-full rounded-button',\n            isCompactMode\n              ? 'w-48 h-48 items-center justify-center'\n              : 'py-12 px-16 block',\n            isActive\n              ? 'bg-primary/6 text-primary font-semibold'\n              : 'hover:bg-hover',\n          )\n        }\n        gap={isCompactMode ? 'gap-2' : 'gap-8'}\n      />\n      {!isCompactMode && (\n        <div className=\"mt-auto gap-14 px-16 text-xs\">\n          <Trans message=\"Version: :number\" values={{number: version}} />\n        </div>\n      )}\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const MenuOpenIcon = createSvgIcon(\n  <path d=\"M3 18h13v-2H3v2zm0-5h10v-2H3v2zm0-7v2h13V6H3zm18 9.59L17.42 12 21 8.41 19.59 7l-5 5 5 5L21 15.59z\" />\n, 'MenuOpenOutlined');\n","import {Navbar, NavbarProps} from '../navigation/navbar/navbar';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport React, {useContext} from 'react';\nimport clsx from 'clsx';\nimport {DashboardLayoutContext} from './dashboard-layout-context';\nimport {setInLocalStorage} from '@ui/utils/hooks/local-storage';\nimport {MenuOpenIcon} from '@ui/icons/material/MenuOpen';\n\nexport interface DashboardNavbarProps\n  extends Omit<NavbarProps, 'toggleButton'> {\n  hideToggleButton?: boolean;\n}\nexport function DashboardNavbar({\n  children,\n  className,\n  hideToggleButton,\n  ...props\n}: DashboardNavbarProps) {\n  const {\n    isMobileMode,\n    leftSidenavStatus,\n    setLeftSidenavStatus,\n    name,\n    leftSidenavCanBeCompact,\n  } = useContext(DashboardLayoutContext);\n\n  const shouldToggleCompactMode = leftSidenavCanBeCompact && !isMobileMode;\n  const shouldShowToggle =\n    !hideToggleButton && (isMobileMode || leftSidenavCanBeCompact);\n\n  const handleToggle = () => {\n    setLeftSidenavStatus(leftSidenavStatus === 'open' ? 'closed' : 'open');\n  };\n\n  const handleCompactModeToggle = () => {\n    const newStatus = leftSidenavStatus === 'compact' ? 'open' : 'compact';\n    setInLocalStorage(`${name}.sidenav.compact`, newStatus === 'compact');\n    setLeftSidenavStatus(newStatus);\n  };\n\n  return (\n    <Navbar\n      className={clsx('dashboard-grid-navbar', className)}\n      border=\"border-b\"\n      size=\"sm\"\n      toggleButton={\n        shouldShowToggle ? (\n          <IconButton\n            size=\"md\"\n            onClick={() => {\n              if (shouldToggleCompactMode) {\n                handleCompactModeToggle();\n              } else {\n                handleToggle();\n              }\n            }}\n          >\n            <MenuOpenIcon />\n          </IconButton>\n        ) : undefined\n      }\n      {...props}\n    >\n      {children}\n    </Navbar>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\n\nexport interface AdminSetupAlert {\n  title: string;\n  description: string;\n}\n\ninterface Response extends BackendResponse {\n  alerts: AdminSetupAlert[];\n}\n\nexport function useAdminSetupAlerts() {\n  return useQuery({\n    queryKey: ['admin-setup-alerts'],\n    queryFn: () => fetchAlerts(),\n  });\n}\n\nfunction fetchAlerts() {\n  return apiClient\n    .get<Response>(`admin/setup-alerts`)\n    .then(response => response.data);\n}\n","import {Outlet} from 'react-router-dom';\nimport {AdminSidebar} from './admin-sidebar';\nimport {DashboardLayout} from '@common/ui/dashboard-layout/dashboard-layout';\nimport {DashboardContent} from '@common/ui/dashboard-layout/dashboard-content';\nimport {DashboardSidenav} from '@common/ui/dashboard-layout/dashboard-sidenav';\nimport {DashboardNavbar} from '@common/ui/dashboard-layout/dashboard-navbar';\nimport {\n  AdminSetupAlert,\n  useAdminSetupAlerts,\n} from '@common/admin/use-admin-setup-alerts';\nimport {SectionHelper} from '@common/ui/other/section-helper';\nimport {ErrorIcon} from '@ui/icons/material/Error';\nimport {\n  setInLocalStorage,\n  useLocalStorage,\n} from '@ui/utils/hooks/local-storage';\n\nexport function AdminLayout() {\n  return (\n    <DashboardLayout name=\"admin\" leftSidenavCanBeCompact>\n      <DashboardNavbar size=\"sm\" menuPosition=\"admin-navbar\" />\n      <DashboardSidenav position=\"left\" size=\"sm\">\n        <AdminSidebar />\n      </DashboardSidenav>\n      <DashboardContent>\n        <div className=\"bg dark:bg-alt\">\n          <SetupAlertsList />\n          <Outlet />\n        </div>\n      </DashboardContent>\n    </DashboardLayout>\n  );\n}\n\nfunction SetupAlertsList() {\n  const {data} = useAdminSetupAlerts();\n  const [dismissValue] = useLocalStorage<{\n    timestamp: number;\n  } | null>('admin-setup-alert-dismissed', null);\n\n  // show alert if 1 day passed since last dismiss\n  const shouldShowAlert =\n    !dismissValue || Date.now() - dismissValue.timestamp > 86400000;\n\n  if (!data?.alerts.length || !shouldShowAlert) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed left-24 right-24 top-24 z-10 mx-auto w-max max-w-[calc(100%-48px)] overflow-hidden rounded-panel bg shadow-md\">\n      <SetupAlert alert={data.alerts[0]} />\n    </div>\n  );\n}\n\ninterface SetupAlertProps {\n  alert: AdminSetupAlert;\n}\nfunction SetupAlert({alert}: SetupAlertProps) {\n  const description = (\n    <div dangerouslySetInnerHTML={{__html: alert.description}}></div>\n  );\n  return (\n    <SectionHelper\n      leadingIcon={<ErrorIcon size=\"xs\" className=\"text-danger\" />}\n      onClose={() => {\n        setInLocalStorage('admin-setup-alert-dismissed', {\n          timestamp: Date.now(),\n        });\n      }}\n      key={alert.title}\n      title={alert.title}\n      description={description}\n      color=\"neutral\"\n    />\n  );\n}\n","import {ComponentType} from 'react';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {ChipValue} from '@ui/forms/input-field/chip-field/chip-field';\nimport {AbsoluteDateRange} from '@ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {DateValue} from '@internationalized/date';\nimport {FilterListControlProps} from '@common/datatable/filters/filter-list/filter-list-control';\n\nexport interface FilterSelectControl {\n  type: FilterControlType.Select;\n  options: {\n    label: MessageDescriptor | string;\n    key: string | number;\n    value: any;\n  }[];\n  defaultValue?: string | number | boolean;\n  placeholder?: MessageDescriptor;\n  searchPlaceholder?: MessageDescriptor;\n  showSearchField?: boolean;\n}\n\nexport interface FilterNumberInputControl {\n  type: FilterControlType.Input;\n  placeholder?: MessageDescriptor;\n  inputType: 'number';\n  minValue?: number;\n  maxValue?: number;\n  defaultValue: number;\n}\n\nexport interface FilterTextInputControl {\n  type: FilterControlType.Input;\n  placeholder?: MessageDescriptor;\n  inputType: 'string';\n  minLength?: number;\n  maxLength?: number;\n  defaultValue: string;\n}\n\nexport interface FilterSelectModelControl {\n  type: FilterControlType.SelectModel;\n  model: string;\n  endpoint?: string;\n  defaultValue?: NormalizedModel;\n}\n\nexport interface FilterChipFieldControl {\n  type: FilterControlType.ChipField;\n  options: FilterSelectControl['options'];\n  placeholder?: MessageDescriptor;\n  defaultValue: ChipValue[];\n}\n\nexport interface FilterBooleanToggleControl {\n  type: FilterControlType.BooleanToggle;\n  // value can be something other than boolean, toggling will either send that value or nothing\n  defaultValue: string | number | boolean | null;\n}\n\nexport interface DatePickerFilterControl {\n  type: FilterControlType.DateRangePicker;\n  defaultValue: AbsoluteDateRange;\n  min?: DateValue;\n  max?: DateValue;\n}\n\nexport interface CustomFilterControl {\n  type: FilterControlType.Custom;\n  panel: ComponentType<{filter: BackendFilter<CustomFilterControl>}>;\n  listItem: ComponentType<FilterListControlProps<number, CustomFilterControl>>;\n  defaultValue?: any;\n}\n\nexport type FilterControl =\n  | FilterSelectControl\n  | FilterNumberInputControl\n  | FilterTextInputControl\n  | FilterSelectModelControl\n  | FilterChipFieldControl\n  | DatePickerFilterControl\n  | FilterBooleanToggleControl\n  | CustomFilterControl;\n\nexport interface BackendFilter<T = FilterControl> {\n  key: string;\n  label: MessageDescriptor;\n  description?: MessageDescriptor;\n  control: T;\n  defaultOperator: FilterOperator;\n  operators?: FilterOperator[];\n  extraFilters?: {key: string; operator: FilterOperator; value: any}[];\n}\n\nexport enum FilterControlType {\n  Select = 'select',\n  DateRangePicker = 'dateRangePicker',\n  SelectModel = 'selectModel',\n  Input = 'input',\n  BooleanToggle = 'booleanToggle',\n  ChipField = 'chipField',\n  Custom = 'custom',\n}\n\nexport enum FilterOperator {\n  eq = '=',\n  ne = '!=',\n  gt = '>',\n  gte = '>=',\n  lt = '<',\n  lte = '<=',\n  has = 'has',\n  notNull = 'notNull',\n  contains = 'contains',\n  notContains = 'notContains',\n  startsWith = 'startsWith',\n  endsWith = 'endsWith',\n  hasAll = 'hasAll',\n  doesntHave = 'doesntHave',\n  between = 'between',\n}\n\nexport const ALL_STRING_OPERATORS = [\n  FilterOperator.eq,\n  FilterOperator.ne,\n  FilterOperator.contains,\n  FilterOperator.notContains,\n  FilterOperator.startsWith,\n  FilterOperator.endsWith,\n  FilterOperator.notNull,\n];\n\nexport const ALL_NUMBER_OPERATORS = [\n  FilterOperator.eq,\n  FilterOperator.ne,\n  FilterOperator.gt,\n  FilterOperator.gte,\n  FilterOperator.lt,\n  FilterOperator.lte,\n  FilterOperator.notNull,\n];\n","import React, {\n  ComponentPropsWithoutRef,\n  Fragment,\n  MouseEvent,\n  useRef,\n} from 'react';\nimport {DateRangeIcon} from '@ui/icons/material/DateRange';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {DatePickerField, DatePickerFieldProps} from './date-picker-field';\nimport {useDateRangePickerState} from './use-date-range-picker-state';\nimport {ArrowRightAltIcon} from '@ui/icons/material/ArrowRightAlt';\nimport {DatePickerValueProps} from '../date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-value';\nimport {DateSegmentList} from '../segments/date-segment-list';\nimport {DateRangeDialog} from './dialog/date-range-dialog';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\n\nexport interface DateRangePickerProps\n  extends DatePickerValueProps<Partial<DateRangeValue>>,\n    Omit<DatePickerFieldProps, 'children'> {}\nexport function DateRangePicker(props: DateRangePickerProps) {\n  const {granularity, closeDialogOnSelection, ...fieldProps} = props;\n  const state = useDateRangePickerState(props);\n  const inputRef = useRef<HTMLDivElement>(null);\n  const isMobile = useIsMobileMediaQuery();\n  const hideCalendarIcon = isMobile && granularity !== 'day';\n\n  const dialog = (\n    <DialogTrigger\n      offset={8}\n      placement=\"bottom-start\"\n      isOpen={state.calendarIsOpen}\n      onOpenChange={state.setCalendarIsOpen}\n      type=\"popover\"\n      triggerRef={inputRef}\n      returnFocusToTrigger={false}\n      moveFocusToDialog={false}\n    >\n      <DateRangeDialog state={state} />\n    </DialogTrigger>\n  );\n\n  const openOnClick: ComponentPropsWithoutRef<'div'> = {\n    onClick: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      if (!isHourSegment(e)) {\n        state.setCalendarIsOpen(true);\n      } else {\n        state.setCalendarIsOpen(false);\n      }\n    },\n  };\n\n  const value = state.selectedValue;\n  const onChange = state.setSelectedValue;\n\n  return (\n    <Fragment>\n      <DatePickerField\n        ref={inputRef}\n        wrapperProps={openOnClick}\n        endAdornment={!hideCalendarIcon ? <DateRangeIcon /> : undefined}\n        {...fieldProps}\n      >\n        <DateSegmentList\n          isPlaceholder={state.isPlaceholder?.start}\n          state={state}\n          segmentProps={openOnClick}\n          value={value.start}\n          onChange={newValue => {\n            onChange({start: newValue, end: value.end});\n          }}\n        />\n        <ArrowRightAltIcon\n          className=\"block flex-shrink-0 text-muted\"\n          size=\"md\"\n        />\n        <DateSegmentList\n          isPlaceholder={state.isPlaceholder?.end}\n          state={state}\n          segmentProps={openOnClick}\n          value={value.end}\n          onChange={newValue => {\n            onChange({start: value.start, end: newValue});\n          }}\n        />\n      </DatePickerField>\n      {dialog}\n    </Fragment>\n  );\n}\n\nfunction isHourSegment(e: MouseEvent<HTMLDivElement>): boolean {\n  return ['hour', 'minute', 'dayPeriod'].includes(\n    (e.currentTarget as HTMLElement).ariaLabel || '',\n  );\n}\n","import {parseAbsoluteToLocal, ZonedDateTime} from '@internationalized/date';\nimport {DateRangeValue} from './date-range-value';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport React from 'react';\nimport {DateRangePicker, DateRangePickerProps} from './date-range-picker';\n\nexport interface AbsoluteDateRange {\n  start?: string;\n  end?: string;\n  preset?: number;\n}\n\ninterface FormDateRange {\n  start?: string | ZonedDateTime;\n  end?: string | ZonedDateTime;\n  preset?: number;\n}\n\nexport interface FormDateRangePickerProps extends DateRangePickerProps {\n  name: string;\n}\nexport function FormDateRangePicker(props: FormDateRangePickerProps) {\n  const {\n    field: {onChange, onBlur, value, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<DateRangePickerProps> = {\n    onChange: e => {\n      onChange(e ? dateRangeToAbsoluteRange(e) : null);\n    },\n    onBlur,\n    value: absoluteRangeToDateRange(value),\n    invalid,\n    errorMessage: error?.message,\n    inputRef: ref,\n  };\n\n  return <DateRangePicker {...mergeProps(formProps, props)} />;\n}\n\nexport function absoluteRangeToDateRange(props: FormDateRange | null) {\n  const {start, end, preset} = props || {};\n  const dateRange: Partial<DateRangeValue> = {preset};\n  try {\n    if (start) {\n      dateRange.start =\n        typeof start === 'string' ? parseAbsoluteToLocal(start) : start;\n    }\n    if (end) {\n      dateRange.end = typeof end === 'string' ? parseAbsoluteToLocal(end) : end;\n    }\n  } catch (e) {\n    // ignore\n  }\n  return dateRange;\n}\n\nexport function dateRangeToAbsoluteRange({\n  start,\n  end,\n  preset,\n}: Partial<DateRangeValue> = {}): AbsoluteDateRange {\n  const absoluteRange: AbsoluteDateRange = {\n    preset,\n  };\n  if (start) {\n    absoluteRange.start = start.toAbsoluteString();\n  }\n  if (end) {\n    absoluteRange.end = end.toAbsoluteString();\n  }\n  return absoluteRange;\n}\n","import {\n  BackendFilter,\n  DatePickerFilterControl,\n  FilterControlType,\n  FilterOperator,\n} from './backend-filter';\nimport {\n  DateRangePreset,\n  DateRangePresets,\n} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {message} from '@ui/i18n/message';\nimport {dateRangeToAbsoluteRange} from '@ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {PartialWithRequired} from '@ui/utils/ts/partial-with-required';\n\nexport function timestampFilter(\n  options: PartialWithRequired<\n    BackendFilter<DatePickerFilterControl>,\n    'key' | 'label'\n  >,\n): BackendFilter<DatePickerFilterControl> {\n  return {\n    ...options,\n    defaultOperator: FilterOperator.between,\n    control: {\n      type: FilterControlType.DateRangePicker,\n      defaultValue:\n        options.control?.defaultValue ||\n        dateRangeToAbsoluteRange(\n          (DateRangePresets[3] as Required<DateRangePreset>).getRangeValue(),\n        ),\n    },\n  };\n}\n\nexport function createdAtFilter(\n  options: Partial<BackendFilter<DatePickerFilterControl>>,\n): BackendFilter<DatePickerFilterControl> {\n  return timestampFilter({\n    key: 'created_at',\n    label: message('Date created'),\n    ...options,\n  });\n}\n\nexport function updatedAtFilter(\n  options: Partial<BackendFilter<DatePickerFilterControl>>,\n): BackendFilter<DatePickerFilterControl> {\n  return timestampFilter({\n    key: 'updated_at',\n    label: message('Last updated'),\n    ...options,\n  });\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '../../datatable/filters/timestamp-filters';\nimport {message} from '@ui/i18n/message';\n\nexport const UserDatatableFilters: BackendFilter[] = [\n  {\n    key: 'email_verified_at',\n    label: message('Email'),\n    description: message('Email verification status'),\n    defaultOperator: FilterOperator.ne,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('is confirmed'),\n          value: {value: null, operator: FilterOperator.ne},\n        },\n        {\n          key: '02',\n          label: message('is not confirmed'),\n          value: {value: null, operator: FilterOperator.eq},\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date user registered or was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date user was last updated'),\n  }),\n  {\n    key: 'subscriptions',\n    label: message('Subscription'),\n    description: message('Whether user is subscribed or not'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('is subscribed'),\n          value: {value: '*', operator: FilterOperator.has},\n        },\n        {\n          key: '02',\n          label: message('is not subscribed'),\n          value: {value: '*', operator: FilterOperator.doesntHave},\n        },\n      ],\n    },\n  },\n];\n","import React, {useContext} from 'react';\nimport {GetDatatableDataParams} from '../requests/paginated-resources';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\n\nexport interface DataTableContextValue<T = unknown, A = unknown> {\n  selectedRows: (string | number)[];\n  setSelectedRows: (keys: (string | number)[]) => void;\n  endpoint: string;\n  params: GetDatatableDataParams;\n  setParams: (value: GetDatatableDataParams) => void;\n  query: UseQueryResult<PaginatedBackendResponse<T> & A, unknown>;\n}\n\nexport const DataTableContext = React.createContext<DataTableContextValue>(\n  null!,\n);\n\nexport function useDataTable<T = unknown, A = unknown>() {\n  return useContext(DataTableContext) as DataTableContextValue<T, A>;\n}\n","import {UseQueryResult} from '@tanstack/react-query';\nimport {\n  hasNextPage,\n  LengthAwarePaginationResponse,\n  PaginatedBackendResponse,\n} from '../http/backend-response/pagination-response';\nimport {useNumberFormatter} from '@ui/i18n/use-number-formatter';\nimport {Select} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport React from 'react';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport clsx from 'clsx';\n\nconst defaultPerPage = 15;\nconst perPageOptions = [{key: 10}, {key: 15}, {key: 20}, {key: 50}, {key: 100}];\n\ntype DataTablePaginationFooterProps = {\n  query: UseQueryResult<PaginatedBackendResponse<unknown>, unknown>;\n  onPerPageChange?: (perPage: number) => void;\n  onPageChange?: (page: number) => void;\n  className?: string;\n};\nexport function DataTablePaginationFooter({\n  query,\n  onPerPageChange,\n  onPageChange,\n  className,\n}: DataTablePaginationFooterProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const numberFormatter = useNumberFormatter();\n  const pagination = query.data\n    ?.pagination as LengthAwarePaginationResponse<any>;\n\n  if (!pagination) return null;\n\n  const perPageSelect = onPerPageChange ? (\n    <Select\n      minWidth=\"min-w-auto\"\n      selectionMode=\"single\"\n      disabled={query.isLoading}\n      labelPosition=\"side\"\n      size=\"xs\"\n      label={<Trans message=\"Items per page\" />}\n      selectedValue={pagination.per_page || defaultPerPage}\n      onSelectionChange={value => onPerPageChange(value as number)}\n    >\n      {perPageOptions.map(option => (\n        <Item key={option.key} value={option.key}>\n          {option.key}\n        </Item>\n      ))}\n    </Select>\n  ) : null;\n\n  return (\n    <div\n      className={clsx(\n        'flex h-54 select-none items-center justify-end gap-20 px-20',\n        className,\n      )}\n    >\n      {!isMobile && perPageSelect}\n      {pagination.from && pagination.to && 'total' in pagination ? (\n        <div className=\"text-sm\">\n          <Trans\n            message=\":from - :to of :total\"\n            values={{\n              from: pagination.from,\n              to: pagination.to,\n              total: numberFormatter.format(pagination.total),\n            }}\n          />\n        </div>\n      ) : null}\n      <div className=\"text-muted\">\n        <IconButton\n          disabled={query.isFetching || pagination.current_page < 2}\n          onClick={() => {\n            onPageChange?.(pagination?.current_page - 1);\n          }}\n        >\n          <KeyboardArrowLeftIcon />\n        </IconButton>\n        <IconButton\n          disabled={query.isFetching || !hasNextPage(pagination)}\n          onClick={() => {\n            onPageChange?.(pagination?.current_page + 1);\n          }}\n        >\n          <KeyboardArrowRightIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FilterAltIcon = createSvgIcon(\n  <path d=\"M7 6h10l-5.01 6.3L7 6zm-2.75-.39C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\" />\n, 'FilterAltOutlined');\n","export const AccordionAnimation = {\n  variants: {\n    open: {\n      height: 'auto',\n      visibility: 'visible',\n      transitionEnd: {\n        overflow: 'auto',\n      },\n    },\n    closed: {\n      height: 0,\n      overflow: 'hidden',\n      transitionEnd: {\n        visibility: 'hidden',\n      },\n    },\n  },\n  transition: {type: 'tween', duration: 0.2},\n} as const;\n","import React, {\n  cloneElement,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  useId,\n  useRef,\n} from 'react';\nimport clsx from 'clsx';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {useControlledState} from '@react-stately/utils';\nimport {FocusScope, useFocusManager} from '@react-aria/focus';\nimport {AccordionAnimation} from '@ui/accordion/accordtion-animation';\nimport {ArrowDropDownIcon} from '@ui/icons/material/ArrowDropDown';\n\ntype Props = {\n  variant?: 'outline' | 'default' | 'minimal';\n  children?: ReactNode;\n  mode?: 'single' | 'multiple';\n  expandedValues?: (string | number)[];\n  defaultExpandedValues?: (string | number)[];\n  onExpandedChange?: (key: (string | number)[]) => void;\n  className?: string;\n  isLazy?: boolean;\n};\nexport const Accordion = React.forwardRef<HTMLDivElement, Props>(\n  (\n    {\n      variant = 'default',\n      mode = 'single',\n      children,\n      className,\n      isLazy,\n      ...other\n    },\n    ref,\n  ) => {\n    const [expandedValues, setExpandedValues] = useControlledState(\n      other.expandedValues,\n      other.defaultExpandedValues || [],\n      other.onExpandedChange,\n    );\n\n    const itemsCount = React.Children.count(children);\n\n    return (\n      <div\n        className={clsx(variant === 'outline' && 'space-y-10', className)}\n        ref={ref}\n        role=\"presentation\"\n      >\n        <AnimatePresence>\n          <FocusScope>\n            {React.Children.map(children, (child, index) => {\n              if (!isValidElement<AccordionItemProps>(child)) return null;\n              return cloneElement<AccordionItemProps>(child, {\n                key: child.key || index,\n                value: child.props.value || index,\n                isFirst: index === 0,\n                isLast: index === itemsCount - 1,\n                mode,\n                variant,\n                expandedValues,\n                setExpandedValues,\n                isLazy,\n              });\n            })}\n          </FocusScope>\n        </AnimatePresence>\n      </div>\n    );\n  },\n);\n\nexport interface AccordionItemProps {\n  children: ReactNode;\n  disabled?: boolean;\n  label: ReactNode;\n  description?: ReactNode;\n  value?: string | number;\n  isFirst?: boolean;\n  isLast?: boolean;\n  bodyClassName?: string;\n  bodyPadding?: string;\n  labelClassName?: string;\n  buttonPadding?: string;\n  chevronPosition?: 'left' | 'right';\n  startIcon?: ReactElement;\n  endAppend?: ReactElement;\n  variant?: 'outline' | 'default' | 'minimal';\n  expandedValues?: (string | number)[];\n  setExpandedValues?: (keys: (string | number)[]) => void;\n  mode?: 'single' | 'multiple';\n  footerContent?: ReactNode;\n  isLazy?: boolean;\n  onHeaderMouseEnter?: () => void;\n  onHeaderMouseLeave?: () => void;\n}\nexport function AccordionItem(props: AccordionItemProps) {\n  const {\n    children,\n    label,\n    disabled,\n    bodyClassName,\n    bodyPadding = 'p-16',\n    labelClassName,\n    buttonPadding = 'py-10 pl-14 pr-10',\n    startIcon,\n    description,\n    endAppend,\n    chevronPosition = 'right',\n    isFirst,\n    mode,\n    isLazy,\n    variant,\n    footerContent,\n    onHeaderMouseEnter,\n    onHeaderMouseLeave,\n  } = props;\n  const expandedValues = props.expandedValues || [];\n  const value = props.value || 0;\n  const setExpandedValues = props.setExpandedValues || (() => {});\n  const ref = useRef<HTMLButtonElement>(null);\n  const isExpanded = !disabled && expandedValues!.includes(value!);\n  const wasExpandedOnce = useRef(false);\n  if (isExpanded) {\n    wasExpandedOnce.current = true;\n  }\n  const focusManager = useFocusManager();\n  const id = useId();\n  const buttonId = `${id}-button`;\n  const panelId = `${id}-panel`;\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    switch (e.key) {\n      case 'ArrowDown':\n        focusManager?.focusNext();\n        break;\n      case 'ArrowUp':\n        focusManager?.focusPrevious();\n        break;\n      case 'Home':\n        focusManager?.focusFirst();\n        break;\n      case 'End':\n        focusManager?.focusLast();\n        break;\n    }\n  };\n\n  const toggle = () => {\n    const i = expandedValues.indexOf(value);\n    if (i > -1) {\n      const newKeys = [...expandedValues];\n      newKeys.splice(i, 1);\n      setExpandedValues(newKeys);\n    } else if (mode === 'single') {\n      setExpandedValues([value]);\n    } else {\n      setExpandedValues([...expandedValues, value]);\n    }\n  };\n\n  const chevron = (\n    <div className={clsx(variant === 'minimal' && '')}>\n      <ArrowDropDownIcon\n        aria-hidden=\"true\"\n        size=\"md\"\n        className={clsx(\n          disabled ? 'text-disabled' : 'text-muted',\n          isExpanded && 'rotate-180 transition-transform',\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <div\n      className={clsx(\n        variant === 'default' && 'border-b',\n        variant === 'outline' && 'rounded-panel border',\n        disabled && 'text-disabled',\n      )}\n    >\n      <h3\n        className={clsx(\n          'flex w-full items-center justify-between text-sm',\n          disabled && 'pointer-events-none',\n          isFirst && variant === 'default' && 'border-t',\n          isExpanded && variant !== 'minimal'\n            ? 'border-b'\n            : 'border-b border-b-transparent',\n          variant === 'outline'\n            ? isExpanded\n              ? 'rounded-panel-t'\n              : 'rounded-panel'\n            : undefined,\n        )}\n        onMouseEnter={onHeaderMouseEnter}\n        onMouseLeave={onHeaderMouseLeave}\n      >\n        <button\n          disabled={disabled}\n          aria-expanded={isExpanded}\n          id={buttonId}\n          aria-controls={panelId}\n          type=\"button\"\n          ref={ref}\n          onKeyDown={onKeyDown}\n          onClick={() => {\n            if (!disabled) {\n              toggle();\n            }\n          }}\n          className={clsx(\n            'flex flex-auto items-center gap-10 text-left outline-none hover:bg-hover focus-visible:bg-primary/focus',\n            buttonPadding,\n          )}\n        >\n          {chevronPosition === 'left' && chevron}\n          {startIcon &&\n            cloneElement(startIcon, {\n              size: 'md',\n              className: clsx(\n                startIcon.props.className,\n                disabled ? 'text-disabled' : 'text-muted',\n              ),\n            })}\n          <div className=\"flex-auto overflow-hidden overflow-ellipsis\">\n            <div className={labelClassName} data-testid=\"accordion-label\">\n              {label}\n            </div>\n            {description && (\n              <div className=\"text-xs text-muted\">{description}</div>\n            )}\n          </div>\n          {chevronPosition === 'right' && chevron}\n        </button>\n        {endAppend && (\n          <div className=\"flex-shrink-0 px-4 text-sm text-muted\">\n            {endAppend}\n          </div>\n        )}\n      </h3>\n      <m.div\n        aria-labelledby={id}\n        role=\"region\"\n        variants={AccordionAnimation.variants}\n        transition={AccordionAnimation.transition}\n        initial={false}\n        animate={isExpanded ? 'open' : 'closed'}\n      >\n        <div className={clsx(bodyPadding, bodyClassName)}>\n          {!isLazy || wasExpandedOnce ? children : null}\n        </div>\n        {footerContent}\n      </m.div>\n    </div>\n  );\n}\n","import {FormSelect} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {Trans} from '@ui/i18n/trans';\nimport {FilterPanelProps} from '@common/datatable/filters/panels/filter-panel-props';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {FilterSelectControl} from '@common/datatable/filters/backend-filter';\n\nexport function SelectFilterPanel({\n  filter,\n}: FilterPanelProps<FilterSelectControl>) {\n  const {trans} = useTrans();\n\n  return (\n    <FormSelect\n      size=\"sm\"\n      name={`${filter.key}.value`}\n      selectionMode=\"single\"\n      showSearchField={filter.control.showSearchField}\n      placeholder={\n        filter.control.placeholder\n          ? trans(filter.control.placeholder)\n          : undefined\n      }\n      searchPlaceholder={\n        filter.control.searchPlaceholder\n          ? trans(filter.control.searchPlaceholder)\n          : undefined\n      }\n    >\n      {filter.control.options.map(option => (\n        <Item key={option.key} value={option.key}>\n          {typeof option.label === 'string' ? (\n            option.label\n          ) : (\n            <Trans {...option.label} />\n          )}\n        </Item>\n      ))}\n    </FormSelect>\n  );\n}\n","import {FormDateRangePicker} from '@ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {FilterPanelProps} from '@common/datatable/filters/panels/filter-panel-props';\nimport {DatePickerFilterControl} from '@common/datatable/filters/backend-filter';\n\nexport function DateRangeFilterPanel({\n  filter,\n}: FilterPanelProps<DatePickerFilterControl>) {\n  return (\n    <FormDateRangePicker\n      min={filter.control.min}\n      max={filter.control.max}\n      size=\"sm\"\n      name={`${filter.key}.value`}\n      granularity=\"day\"\n      closeDialogOnSelection={true}\n    />\n  );\n}\n","import {FilterPanelProps} from './filter-panel-props';\nimport {FormNormalizedModelField} from '@common/ui/normalized-model/normalized-model-field';\nimport {FilterSelectModelControl} from '@common/datatable/filters/backend-filter';\n\nexport function NormalizedModelFilterPanel({\n  filter,\n}: FilterPanelProps<FilterSelectModelControl>) {\n  return (\n    <FormNormalizedModelField\n      name={`${filter.key}.value`}\n      endpoint={\n        filter.control.endpoint\n          ? filter.control.endpoint\n          : `normalized-models/${filter.control.model}`\n      }\n    />\n  );\n}\n","import {FilterOperator} from './backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\n\nexport const FilterOperatorNames: {[op in FilterOperator]: MessageDescriptor} =\n  {\n    '=': message('is'),\n    '!=': message('is not'),\n    '>': message('is greater than'),\n    '>=': message('is greater than or equal to'),\n    '<': message('is less than'),\n    '<=': message('is less than or equal to'),\n    notNull: message('has any value'),\n    contains: message('contains'),\n    notContains: message('does not contain'),\n    startsWith: message('starts with'),\n    endsWith: message('ends with'),\n    has: message('Include'),\n    doesntHave: message('Do not include'),\n    between: message('Is between'),\n    hasAll: message('Include all'),\n  };\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {FilterOperatorNames} from '@common/datatable/filters/filter-operator-names';\nimport {Fragment} from 'react';\nimport {FilterPanelProps} from '@common/datatable/filters/panels/filter-panel-props';\nimport {\n  FilterNumberInputControl,\n  FilterTextInputControl,\n} from '@common/datatable/filters/backend-filter';\nimport {useFormContext, useWatch} from 'react-hook-form';\n\nexport function InputFilterPanel({\n  filter,\n}: FilterPanelProps<FilterTextInputControl | FilterNumberInputControl>) {\n  const control = filter.control;\n  const form = useFormContext();\n  const selectedOperator = useWatch({\n    control: form.control,\n    name: `${filter.key}.operator`,\n  });\n  return (\n    <Fragment>\n      {filter.operators?.length ? (\n        <FormSelect\n          selectionMode=\"single\"\n          name={`${filter.key}.operator`}\n          className=\"mb-14\"\n          size=\"sm\"\n        >\n          {filter.operators?.map(operator => (\n            <Item key={operator} value={operator}>\n              {<Trans {...FilterOperatorNames[operator]} />}\n            </Item>\n          ))}\n        </FormSelect>\n      ) : null}\n      {selectedOperator === 'notNull' ? null : (\n        <FormTextField\n          size=\"sm\"\n          name={`${filter.key}.value`}\n          type={filter.control.inputType}\n          min={'minValue' in control ? control.minValue : undefined}\n          max={'maxValue' in control ? control.maxValue : undefined}\n          minLength={'minLength' in control ? control.minLength : undefined}\n          maxLength={'maxLength' in control ? control.maxLength : undefined}\n        />\n      )}\n    </Fragment>\n  );\n}\n","import {FilterPanelProps} from './filter-panel-props';\nimport {FilterBooleanToggleControl} from '@common/datatable/filters/backend-filter';\n\nexport function BooleanFilterPanel({\n  filter,\n}: FilterPanelProps<FilterBooleanToggleControl>) {\n  // Toggling accordion in the dialog will already apply boolean filter, no need for any extra fields here\n  return null;\n}\n","import {Item} from '@ui/forms/listbox/item';\nimport {FilterPanelProps} from '@common/datatable/filters/panels/filter-panel-props';\nimport {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {FilterChipFieldControl} from '@common/datatable/filters/backend-filter';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function ChipFieldFilterPanel({\n  filter,\n}: FilterPanelProps<FilterChipFieldControl>) {\n  const {trans} = useTrans();\n  return (\n    <FormChipField\n      size=\"sm\"\n      name={`${filter.key}.value`}\n      valueKey=\"id\"\n      allowCustomValue={false}\n      showDropdownArrow\n      placeholder={\n        filter.control.placeholder\n          ? trans(filter.control.placeholder)\n          : undefined\n      }\n      displayWith={chip => {\n        const o = filter.control.options.find(o => o.key === chip.id);\n        if (!o) return undefined;\n        return typeof o.label === 'string' ? o.label : o.label.message;\n      }}\n      suggestions={filter.control.options.map(o => ({\n        id: o.key,\n        name: typeof o.label === 'string' ? o.label : o.label.message,\n      }))}\n    >\n      {chip => (\n        <Item key={chip.id} value={chip.id}>\n          {<Trans message={chip.name} />}\n        </Item>\n      )}\n    </FormChipField>\n  );\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {\n  BackendFilter,\n  CustomFilterControl,\n  DatePickerFilterControl,\n  FilterBooleanToggleControl,\n  FilterChipFieldControl,\n  FilterControlType,\n  FilterOperator,\n  FilterSelectControl,\n  FilterSelectModelControl,\n  FilterTextInputControl,\n} from './backend-filter';\nimport {Trans} from '@ui/i18n/trans';\nimport {useState} from 'react';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useBackendFilterUrlParams} from './backend-filter-url-params';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {Button} from '@ui/buttons/button';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {Checkbox} from '@ui/forms/toggle/checkbox';\nimport {SelectFilterPanel} from './panels/select-filter-panel';\nimport {DateRangeFilterPanel} from './panels/date-range-filter-panel';\nimport {NormalizedModelFilterPanel} from './panels/normalized-model-filter-panel';\nimport {InputFilterPanel} from './panels/input-filter-panel';\nimport {BooleanFilterPanel} from './panels/boolean-filter-panel';\nimport clsx from 'clsx';\nimport {ChipFieldFilterPanel} from '@common/datatable/filters/panels/chip-field-filter-panel';\n\nexport interface FilterItemFormValue<T = any> {\n  value: T;\n  operator?: FilterOperator;\n}\n\ninterface AddFilterDialogProps {\n  filters: BackendFilter[];\n}\nexport function AddFilterDialog({filters}: AddFilterDialogProps) {\n  const {decodedFilters} = useBackendFilterUrlParams(filters);\n  const {formId} = useDialogContext();\n\n  // expand currently active filters\n  const [expandedFilters, setExpandedFilters] = useState<(string | number)[]>(\n    () => {\n      return decodedFilters.map(f => f.key);\n    },\n  );\n\n  const clearButton = (\n    <Button\n      size=\"xs\"\n      variant=\"outline\"\n      className=\"mr-auto\"\n      onClick={() => {\n        setExpandedFilters([]);\n      }}\n    >\n      <Trans message=\"Clear\" />\n    </Button>\n  );\n\n  const applyButton = (\n    <Button\n      size=\"xs\"\n      variant=\"flat\"\n      color=\"primary\"\n      className=\"ml-auto\"\n      type=\"submit\"\n      form={formId}\n    >\n      <Trans message=\"Apply\" />\n    </Button>\n  );\n\n  return (\n    <Dialog className=\"min-w-[300px]\" maxWidth=\"max-w-400\" size=\"auto\">\n      <DialogHeader\n        padding=\"px-14 py-10\"\n        leftAdornment={clearButton}\n        rightAdornment={applyButton}\n      >\n        <Trans message=\"Filter\" />\n      </DialogHeader>\n      <DialogBody padding=\"p-0\">\n        <FilterList\n          filters={filters}\n          expandedFilters={expandedFilters}\n          setExpandedFilters={setExpandedFilters}\n        />\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface FilterListProps {\n  filters: BackendFilter[];\n  expandedFilters: (string | number)[];\n  setExpandedFilters: (value: (string | number)[]) => void;\n}\nfunction FilterList({\n  filters,\n  expandedFilters,\n  setExpandedFilters,\n}: FilterListProps) {\n  const {decodedFilters, replaceAll} = useBackendFilterUrlParams(filters);\n\n  // either get value and operator from url params if filter is active, or get defaults from filter config\n  const defaultValues: Record<string, FilterItemFormValue> = {};\n  filters.forEach(filter => {\n    const appliedFilter = decodedFilters.find(f => f.key === filter.key);\n    defaultValues[filter.key] =\n      appliedFilter?.value !== undefined\n        ? // there might be some extra keys set on filter besides\n          // \"value\" and \"operator\", so add the whole object to form\n          appliedFilter\n        : {\n            value: filter.control.defaultValue,\n            operator: filter.defaultOperator,\n          };\n  });\n  const form = useForm<Record<string, FilterItemFormValue>>({defaultValues});\n  const {formId, close} = useDialogContext();\n\n  return (\n    <Form\n      form={form}\n      id={formId}\n      onSubmit={formValue => {\n        const filterValue = Object.entries(formValue)\n          // remove undefined and non-expanded filters, so \"clear\" button will correctly remove active filters\n          .filter(\n            ([key, fieldValue]) =>\n              expandedFilters.includes(key) && fieldValue !== undefined,\n          )\n          .map(([key, fieldValue]) => ({\n            key,\n            ...fieldValue, // value and operator from form\n          }));\n\n        replaceAll(filterValue);\n        close();\n      }}\n    >\n      <Accordion\n        mode=\"multiple\"\n        expandedValues={expandedFilters}\n        onExpandedChange={setExpandedFilters}\n      >\n        {filters.map(filter => (\n          <AccordionItem\n            startIcon={\n              <Checkbox checked={expandedFilters.includes(filter.key)} />\n            }\n            key={filter.key}\n            value={filter.key}\n            label={<Trans {...filter.label} />}\n            bodyClassName=\"max-h-288 overflow-y-auto compact-scrollbar\"\n          >\n            {filter.description && (\n              <div\n                className={clsx(\n                  'text-xs text-muted',\n                  // boolean filter will have nothing in the panel, no need to add margin\n                  filter.control.type !== FilterControlType.BooleanToggle &&\n                    'mb-14',\n                )}\n              >\n                <Trans {...filter.description} />\n              </div>\n            )}\n            <AddFilterDialogPanel filter={filter} />\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </Form>\n  );\n}\n\ninterface ActiveFilterPanelProps {\n  filter: BackendFilter;\n}\nexport function AddFilterDialogPanel({filter}: ActiveFilterPanelProps) {\n  switch (filter.control.type) {\n    case FilterControlType.Select:\n      return (\n        <SelectFilterPanel\n          filter={filter as BackendFilter<FilterSelectControl>}\n        />\n      );\n    case FilterControlType.ChipField:\n      return (\n        <ChipFieldFilterPanel\n          filter={filter as BackendFilter<FilterChipFieldControl>}\n        />\n      );\n    case FilterControlType.DateRangePicker:\n      return (\n        <DateRangeFilterPanel\n          filter={filter as BackendFilter<DatePickerFilterControl>}\n        />\n      );\n    case FilterControlType.SelectModel:\n      return (\n        <NormalizedModelFilterPanel\n          filter={filter as BackendFilter<FilterSelectModelControl>}\n        />\n      );\n    case FilterControlType.Input:\n      return (\n        <InputFilterPanel\n          filter={filter as BackendFilter<FilterTextInputControl>}\n        />\n      );\n    case FilterControlType.BooleanToggle:\n      return (\n        <BooleanFilterPanel\n          filter={filter as BackendFilter<FilterBooleanToggleControl>}\n        />\n      );\n    case 'custom':\n      const CustomComponent = filter.control.panel;\n      return (\n        <CustomComponent\n          filter={filter as BackendFilter<CustomFilterControl>}\n        />\n      );\n    default:\n      return null;\n  }\n}\n","import {Button, ButtonProps} from '@ui/buttons/button';\nimport {BackendFilter} from './backend-filter';\nimport {FilterAltIcon} from '@ui/icons/material/FilterAlt';\nimport {Trans} from '@ui/i18n/trans';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {AddFilterDialog} from './add-filter-dialog';\nimport {ReactElement} from 'react';\n\ninterface AddFilterButtonProps {\n  filters: BackendFilter[];\n  icon?: ReactElement;\n  color?: ButtonProps['color'];\n  variant?: ButtonProps['variant'];\n  disabled?: boolean;\n  size?: ButtonProps['size'];\n  className?: string;\n}\nexport function AddFilterButton({\n  filters,\n  icon = <FilterAltIcon />,\n  color = 'primary',\n  variant = 'outline',\n  size = 'sm',\n  disabled,\n  className,\n}: AddFilterButtonProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  const desktopButton = (\n    <Button\n      variant={variant}\n      color={color}\n      startIcon={icon}\n      disabled={disabled}\n      size={size}\n      className={className}\n    >\n      <Trans message=\"Filter\" />\n    </Button>\n  );\n\n  const mobileButton = (\n    <IconButton\n      color={color}\n      size=\"sm\"\n      variant={variant}\n      disabled={disabled}\n      className={className}\n    >\n      {icon}\n    </IconButton>\n  );\n\n  return (\n    <DialogTrigger type=\"popover\">\n      {isMobile ? mobileButton : desktopButton}\n      <AddFilterDialog filters={filters} />\n    </DialogTrigger>\n  );\n}\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\nimport {BackendFilter} from './filters/backend-filter';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@ui/icons/material/Search';\nimport {AddFilterButton} from './filters/add-filter-button';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport {message} from '@ui/i18n/message';\n\ninterface Props {\n  actions?: ReactNode;\n  filters?: BackendFilter[];\n  filtersLoading?: boolean;\n  searchPlaceholder?: MessageDescriptor;\n  searchValue?: string;\n  onSearchChange: (value: string) => void;\n}\nexport function DataTableHeader({\n  actions,\n  filters,\n  filtersLoading,\n  searchPlaceholder = message('Type to search...'),\n  searchValue = '',\n  onSearchChange,\n}: Props) {\n  const {trans} = useTrans();\n  return (\n    <HeaderLayout>\n      <TextField\n        size=\"sm\"\n        className=\"mr-auto min-w-180 max-w-440 flex-auto\"\n        inputWrapperClassName=\"mr-24 md:mr-0\"\n        placeholder={trans(searchPlaceholder)}\n        startAdornment={<SearchIcon size=\"sm\" />}\n        value={searchValue}\n        onChange={e => {\n          onSearchChange(e.target.value);\n        }}\n      />\n      {filters && (\n        <AddFilterButton filters={filters} disabled={filtersLoading} />\n      )}\n      {actions}\n    </HeaderLayout>\n  );\n}\n\ninterface AnimatedHeaderProps extends ComponentPropsWithoutRef<'div'> {\n  children: ReactNode;\n}\nexport function HeaderLayout({children, ...domProps}: AnimatedHeaderProps) {\n  return (\n    <div\n      className=\"hidden-scrollbar relative mb-24 flex h-42 items-center gap-8 overflow-x-auto text-muted md:gap-12\"\n      {...domProps}\n    >\n      {children}\n    </div>\n  );\n}\n","import {BackendFilter, FilterControlType} from '../backend-filter';\nimport {ComponentPropsWithRef, forwardRef, ReactNode} from 'react';\nimport {Button} from '@ui/buttons/button';\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\nimport {Trans} from '@ui/i18n/trans';\nimport clsx from 'clsx';\n\ninterface TriggerButtonProps\n  extends Omit<ComponentPropsWithRef<'button'>, 'color'> {\n  isInactive?: boolean;\n  filter: BackendFilter;\n  children?: ReactNode;\n}\nexport const FilterListTriggerButton = forwardRef<\n  HTMLButtonElement,\n  TriggerButtonProps\n>((props, ref) => {\n  // pass through all props from menu trigger and dialog trigger to button\n  const {isInactive, filter, ...domProps} = props;\n\n  if (isInactive) {\n    return <InactiveFilterButton filter={filter} {...domProps} ref={ref} />;\n  }\n\n  return <ActiveFilterButton filter={filter} {...domProps} ref={ref} />;\n});\n\ninterface InactiveFilterButtonProps\n  extends Omit<ComponentPropsWithRef<'button'>, 'color'> {\n  filter: BackendFilter;\n}\nexport const InactiveFilterButton = forwardRef<\n  HTMLButtonElement,\n  InactiveFilterButtonProps\n>(({filter, ...domProps}, ref) => {\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"xs\"\n      color=\"paper\"\n      radius=\"rounded-md\"\n      border=\"border\"\n      ref={ref}\n      endIcon={<KeyboardArrowDownIcon />}\n      {...domProps}\n    >\n      <Trans {...filter.label} />\n    </Button>\n  );\n});\n\nexport const ActiveFilterButton = forwardRef<\n  HTMLButtonElement,\n  InactiveFilterButtonProps\n>(({filter, children, ...domProps}, ref) => {\n  const isBoolean = filter.control.type === FilterControlType.BooleanToggle;\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"xs\"\n      color=\"primary\"\n      radius=\"rounded-r-md\"\n      border=\"border-y border-r\"\n      endIcon={!isBoolean && <KeyboardArrowDownIcon />}\n      ref={ref}\n      {...domProps}\n    >\n      <span\n        className={clsx(\n          !isBoolean && 'mr-8 border-r border-r-primary-light pr-8',\n        )}\n      >\n        <Trans {...filter.label} />\n      </span>\n      {children}\n    </Button>\n  );\n});\n","import {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {FilterListTriggerButton} from './filter-list-trigger-button';\nimport {ReactNode} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {FilterItemFormValue} from '../add-filter-dialog';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Form} from '@ui/forms/form';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {FilterListControlProps} from './filter-list-control';\n\ninterface FilterListItemDialogTriggerProps extends FilterListControlProps<any> {\n  label: ReactNode;\n  panel: ReactNode;\n}\nexport function FilterListItemDialogTrigger(\n  props: FilterListItemDialogTriggerProps,\n) {\n  const {onValueChange, isInactive, filter, label} = props;\n  return (\n    <DialogTrigger\n      offset={10}\n      type=\"popover\"\n      onClose={(value?: FilterItemFormValue) => {\n        if (value !== undefined) {\n          onValueChange(value);\n        }\n      }}\n    >\n      <FilterListTriggerButton isInactive={isInactive} filter={filter}>\n        {label}\n      </FilterListTriggerButton>\n      <FilterListControlDialog {...props} />\n    </DialogTrigger>\n  );\n}\n\nexport function FilterListControlDialog({\n  filter,\n  panel,\n  value,\n  operator,\n}: FilterListItemDialogTriggerProps) {\n  const form = useForm<Record<string, FilterItemFormValue>>({\n    defaultValues: {\n      [filter.key]: {value, operator},\n    },\n  });\n  const {close, formId} = useDialogContext();\n  return (\n    <Dialog size=\"xs\">\n      <DialogHeader>\n        <Trans {...filter.label} />\n      </DialogHeader>\n      <DialogBody padding=\"px-14 pt-14 pb-4 max-h-288\">\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={formValue => {\n            close(formValue[filter.key]);\n          }}\n        >\n          {filter.description && (\n            <div className=\"mb-14 text-xs text-muted\">\n              <Trans {...filter.description} />\n            </div>\n          )}\n          {panel}\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          size=\"xs\"\n        >\n          <Trans message=\"Apply\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {\n  BackendFilter,\n  CustomFilterControl,\n  DatePickerFilterControl,\n  FilterBooleanToggleControl,\n  FilterChipFieldControl,\n  FilterControl,\n  FilterControlType,\n  FilterNumberInputControl,\n  FilterOperator,\n  FilterSelectControl,\n  FilterSelectModelControl,\n  FilterTextInputControl,\n} from '../backend-filter';\nimport {FilterListTriggerButton} from './filter-list-trigger-button';\nimport {Trans} from '@ui/i18n/trans';\nimport {SelectFilterPanel} from '../panels/select-filter-panel';\nimport {FilterListItemDialogTrigger} from './filter-list-item-dialog-trigger';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {NormalizedModelFilterPanel} from '../panels/normalized-model-filter-panel';\nimport {DateRangeFilterPanel} from '../panels/date-range-filter-panel';\nimport {Fragment, Key, ReactNode} from 'react';\nimport {DateRangePresets} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {FormattedDateTimeRange} from '@ui/i18n/formatted-date-time-range';\nimport {AbsoluteDateRange} from '@ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {InputFilterPanel} from '../panels/input-filter-panel';\nimport {FilterOperatorNames} from '../filter-operator-names';\nimport {FilterItemFormValue} from '../add-filter-dialog';\nimport {useNormalizedModel} from '@common/ui/normalized-model/use-normalized-model';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {ChipFieldFilterPanel} from '@common/datatable/filters/panels/chip-field-filter-panel';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\n\nexport interface FilterListControlProps<T = unknown, E = FilterControl> {\n  filter: BackendFilter<E>;\n  onValueChange: (value: FilterItemFormValue<T>) => void;\n  value: T;\n  operator?: FilterOperator;\n  isInactive?: boolean;\n}\nexport function FilterListControl(props: FilterListControlProps<any, any>) {\n  switch (props.filter.control.type) {\n    case FilterControlType.DateRangePicker:\n      return <DatePickerControl {...props} />;\n    case FilterControlType.BooleanToggle:\n      return <BooleanToggleControl {...props} />;\n    case FilterControlType.Select:\n      return <SelectControl {...props} />;\n    case FilterControlType.ChipField:\n      return <ChipFieldControl {...props} />;\n    case FilterControlType.Input:\n      return <InputControl {...props} />;\n    case FilterControlType.SelectModel:\n      return <SelectModelControl {...props} />;\n    case FilterControlType.Custom:\n      const Control = (props.filter.control as CustomFilterControl).listItem;\n      return <Control {...props} />;\n    default:\n      return null;\n  }\n}\n\nfunction DatePickerControl(\n  props: FilterListControlProps<\n    Required<AbsoluteDateRange>,\n    DatePickerFilterControl\n  >,\n) {\n  const {value, filter} = props;\n\n  let valueLabel: ReactNode;\n  if (value.preset !== undefined) {\n    valueLabel = <Trans {...DateRangePresets[value.preset].label} />;\n  } else {\n    valueLabel = (\n      <FormattedDateTimeRange\n        start={new Date(value.start)}\n        end={new Date(value.end)}\n        options={{dateStyle: 'medium'}}\n      />\n    );\n  }\n\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={valueLabel}\n      panel={<DateRangeFilterPanel filter={filter} />}\n    />\n  );\n}\n\nfunction BooleanToggleControl({\n  filter,\n  isInactive,\n  onValueChange,\n}: FilterListControlProps<\n  FilterBooleanToggleControl['defaultValue'],\n  FilterBooleanToggleControl\n>) {\n  // todo: toggle control on or off here\n  return (\n    <FilterListTriggerButton\n      onClick={() => {\n        onValueChange({value: filter.control.defaultValue});\n      }}\n      filter={filter}\n      isInactive={isInactive}\n    />\n  );\n}\n\nfunction SelectControl(\n  props: FilterListControlProps<Key, FilterSelectControl>,\n) {\n  const {filter, value} = props;\n  const option = filter.control.options.find(o => o.key === value);\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={\n        option ? (\n          typeof option.label === 'string' ? (\n            option.label\n          ) : (\n            <Trans {...option.label} />\n          )\n        ) : null\n      }\n      panel={<SelectFilterPanel filter={filter} />}\n    />\n  );\n}\n\nfunction ChipFieldControl(\n  props: FilterListControlProps<string[], FilterChipFieldControl>,\n) {\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={<MultipleValues {...props} />}\n      panel={<ChipFieldFilterPanel filter={props.filter} />}\n    />\n  );\n}\n\nfunction MultipleValues(\n  props: FilterListControlProps<string[], FilterChipFieldControl>,\n) {\n  const {trans} = useTrans();\n  const {filter, value} = props;\n\n  const options = value.map(v => filter.control.options.find(o => o.key === v));\n  const maxShownCount = 3;\n  const notShownCount = value.length - maxShownCount;\n\n  // translate names, add commas and limit to 3\n  const names = (\n    <Fragment>\n      {options\n        .filter(Boolean)\n        .slice(0, maxShownCount)\n        .map((o, i) => {\n          let name = '';\n          if (i !== 0) {\n            name += ', ';\n          }\n          name += typeof o!.label === 'string' ? o!.label : trans(o!.label);\n          return name;\n        })}\n    </Fragment>\n  );\n\n  // indicate that there are some names not shown\n  return notShownCount > 0 ? (\n    <Trans\n      message=\":names + :count more\"\n      values={{names: names, count: notShownCount}}\n    />\n  ) : (\n    names\n  );\n}\n\nfunction InputControl(\n  props: FilterListControlProps<\n    string,\n    FilterTextInputControl | FilterNumberInputControl\n  >,\n) {\n  const {filter, value, operator} = props;\n\n  const operatorLabel = operator ? (\n    <Trans {...FilterOperatorNames[operator]} />\n  ) : null;\n\n  const formattedValue =\n    filter.control.inputType === 'number' ? (\n      <FormattedNumber value={value as any} />\n    ) : (\n      value\n    );\n\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={\n        <Fragment>\n          {operatorLabel} {formattedValue}\n        </Fragment>\n      }\n      panel={<InputFilterPanel filter={filter} />}\n    />\n  );\n}\n\nfunction SelectModelControl(\n  props: FilterListControlProps<string, FilterSelectModelControl>,\n) {\n  const {value, filter} = props;\n  const {isLoading, data} = useNormalizedModel(\n    filter.control.endpoint\n      ? `${filter.control.endpoint}/${value}`\n      : `normalized-models/${filter.control.model}/${value}`,\n    undefined,\n    {enabled: !!value},\n  );\n\n  const skeleton = (\n    <Fragment>\n      <Skeleton variant=\"avatar\" size=\"w-18 h-18 mr-6\" />\n      <Skeleton variant=\"rect\" size=\"w-50\" />\n    </Fragment>\n  );\n  const modelPreview = (\n    <Fragment>\n      <Avatar\n        size=\"xs\"\n        src={data?.model.image}\n        label={data?.model.name}\n        className=\"mr-6\"\n      />\n      {data?.model.name}\n    </Fragment>\n  );\n\n  const label = isLoading || !data ? skeleton : modelPreview;\n\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={label}\n      panel={<NormalizedModelFilterPanel filter={filter} />}\n    />\n  );\n}\n","import clsx from 'clsx';\nimport {BackendFilter} from '../backend-filter';\nimport {useBackendFilterUrlParams} from '../backend-filter-url-params';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {FilterListControl} from './filter-list-control';\nimport {FilterItemFormValue} from '../add-filter-dialog';\n\ninterface FilterListProps {\n  filters: BackendFilter[];\n  // these filters will always be shown, even if value is not yet selected for filter\n  pinnedFilters?: string[];\n  className?: string;\n}\nexport function FilterList({\n  filters,\n  pinnedFilters,\n  className,\n}: FilterListProps) {\n  const {decodedFilters, remove, replaceAll} = useBackendFilterUrlParams(\n    filters,\n    pinnedFilters,\n  );\n\n  if (!decodedFilters.length) return null;\n\n  return (\n    <div className={clsx('flex items-center gap-6 overflow-x-auto', className)}>\n      {decodedFilters.map((field, index) => {\n        const filter = filters.find(f => f.key === field.key);\n\n        if (!filter) return null;\n\n        const handleValueChange = (payload: FilterItemFormValue) => {\n          const newFilters = [...decodedFilters];\n          newFilters.splice(index, 1, {\n            key: filter.key,\n            value: payload.value,\n            isInactive: false,\n            operator: payload.operator || filter.defaultOperator,\n          });\n          replaceAll(newFilters);\n        };\n\n        return (\n          <div key={field.key}>\n            {!field.isInactive && (\n              <IconButton\n                variant=\"outline\"\n                color=\"primary\"\n                size=\"xs\"\n                radius=\"rounded-l-md\"\n                onClick={() => {\n                  remove(field.key);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n            <FilterListControl\n              filter={filter}\n              isInactive={field.isInactive}\n              value={field.valueKey != null ? field.valueKey : field.value}\n              operator={field.operator}\n              onValueChange={handleValueChange}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport React, {ReactNode} from 'react';\nimport {HeaderLayout} from '@common/datatable/data-table-header';\n\ninterface Props {\n  actions?: ReactNode;\n  selectedItemsCount: number;\n}\nexport function SelectedStateDatatableHeader({\n  actions,\n  selectedItemsCount,\n}: Props) {\n  return (\n    <HeaderLayout data-testid=\"datatable-selected-header\">\n      <div className=\"mr-auto\">\n        <Trans\n          message=\"[one 1 item|other :count items] selected\"\n          values={{count: selectedItemsCount}}\n        />\n      </div>\n      {actions}\n    </HeaderLayout>\n  );\n}\n","import {m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport React from 'react';\n\nexport function FilterListSkeleton() {\n  return (\n    <m.div\n      className=\"flex h-30 items-center gap-6\"\n      key=\"filter-list-skeleton\"\n      {...opacityAnimation}\n    >\n      <Skeleton variant=\"rect\" size=\"h-full w-144\" radius=\"rounded-md\" />\n      <Skeleton variant=\"rect\" size=\"h-full w-112\" radius=\"rounded-md\" />\n      <Skeleton variant=\"rect\" size=\"h-full w-172\" radius=\"rounded-md\" />\n    </m.div>\n  );\n}\n","import React, {\n  cloneElement,\n  ComponentProps,\n  ReactElement,\n  ReactNode,\n  useState,\n} from 'react';\nimport {TableDataItem} from '../ui/tables/types/table-data-item';\nimport {BackendFilter} from './filters/backend-filter';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport {ColumnConfig} from './column-config';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useBackendFilterUrlParams} from './filters/backend-filter-url-params';\nimport {\n  GetDatatableDataParams,\n  useDatatableData,\n} from './requests/paginated-resources';\nimport {DataTableContext} from './page/data-table-context';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {ProgressBar} from '@ui/progress/progress-bar';\nimport {Table, TableProps} from '../ui/tables/table';\nimport {DataTablePaginationFooter} from './data-table-pagination-footer';\nimport {DataTableHeader} from './data-table-header';\nimport {FilterList} from './filters/filter-list/filter-list';\nimport {SelectedStateDatatableHeader} from '@common/datatable/selected-state-datatable-header';\nimport clsx from 'clsx';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {BackendFiltersUrlKey} from '@common/datatable/filters/backend-filters-url-key';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {FilterListSkeleton} from '@common/datatable/filters/filter-list/filter-list-skeleton';\nimport {nanoid} from 'nanoid';\n\nexport interface DataTableProps<T extends TableDataItem> {\n  filters?: BackendFilter[];\n  pinnedFilters?: string[];\n  filtersLoading?: boolean;\n  columns: ColumnConfig<T>[];\n  searchPlaceholder?: MessageDescriptor;\n  queryParams?: Record<string, string | number | undefined | null>;\n  endpoint: string;\n  skeletonsWhileLoading?: number;\n  resourceName?: ReactNode;\n  emptyStateMessage: ReactElement<{isFiltering: boolean}>;\n  actions?: ReactNode;\n  enableSelection?: boolean;\n  selectionStyle?: TableProps<T>['selectionStyle'];\n  selectedActions?: ReactNode;\n  onRowAction?: TableProps<T>['onAction'];\n  tableDomProps?: ComponentProps<'table'>;\n  children?: ReactNode;\n  collapseTableOnMobile?: boolean;\n  cellHeight?: string;\n  border?: string;\n}\nexport function DataTable<T extends TableDataItem>({\n  filters,\n  pinnedFilters,\n  filtersLoading,\n  columns,\n  searchPlaceholder,\n  queryParams,\n  endpoint,\n  actions,\n  selectedActions,\n  emptyStateMessage,\n  tableDomProps,\n  onRowAction,\n  enableSelection = true,\n  selectionStyle = 'checkbox',\n  children,\n  cellHeight,\n  collapseTableOnMobile = true,\n  skeletonsWhileLoading,\n  border,\n}: DataTableProps<T>) {\n  const isMobile = useIsMobileMediaQuery();\n  const {trans} = useTrans();\n  const {encodedFilters} = useBackendFilterUrlParams(filters);\n  const [params, setParams] = useState<GetDatatableDataParams>({perPage: 15});\n  const [selectedRows, setSelectedRows] = useState<(string | number)[]>([]);\n  const query = useDatatableData<T>(\n    endpoint,\n    {\n      ...params,\n      ...queryParams,\n      [BackendFiltersUrlKey]: encodedFilters,\n    },\n    undefined,\n    () => setSelectedRows([]),\n  );\n\n  const isFiltering = !!(params.query || params.filters || encodedFilters);\n  const pagination = query.data?.pagination;\n\n  const data =\n    pagination?.data ||\n    (query.isLoading && skeletonsWhileLoading\n      ? Array.from({length: skeletonsWhileLoading}).map(() => {\n          return {\n            id: nanoid(),\n            isPlaceholder: true,\n          };\n        })\n      : []);\n\n  return (\n    <DataTableContext.Provider\n      value={{\n        selectedRows,\n        setSelectedRows,\n        endpoint,\n        params,\n        setParams,\n        query,\n      }}\n    >\n      {children}\n      <AnimatePresence initial={false} mode=\"wait\">\n        {selectedRows.length ? (\n          <SelectedStateDatatableHeader\n            selectedItemsCount={selectedRows.length}\n            actions={selectedActions}\n            key=\"selected\"\n          />\n        ) : (\n          <DataTableHeader\n            searchPlaceholder={searchPlaceholder}\n            searchValue={params.query}\n            onSearchChange={query => setParams({...params, query})}\n            actions={actions}\n            filters={filters}\n            filtersLoading={filtersLoading}\n            key=\"default\"\n          />\n        )}\n      </AnimatePresence>\n\n      {filters && (\n        <div className=\"mb-14\">\n          <AnimatePresence initial={false} mode=\"wait\">\n            {filtersLoading && (encodedFilters || pinnedFilters?.length) ? (\n              <FilterListSkeleton />\n            ) : (\n              <m.div key=\"filter-list\" {...opacityAnimation}>\n                <FilterList filters={filters} pinnedFilters={pinnedFilters} />\n              </m.div>\n            )}\n          </AnimatePresence>\n        </div>\n      )}\n\n      <div\n        className={clsx(\n          'relative rounded-panel',\n          border ? border : (!isMobile || !collapseTableOnMobile) && 'border',\n        )}\n      >\n        {query.isFetching && !skeletonsWhileLoading && (\n          <ProgressBar\n            isIndeterminate\n            className=\"absolute left-0 top-0 z-10 w-full\"\n            aria-label={trans({message: 'Loading'})}\n            size=\"xs\"\n          />\n        )}\n\n        <div className=\"relative overflow-x-auto md:overflow-hidden\">\n          <Table\n            {...tableDomProps}\n            columns={columns}\n            data={data as T[]}\n            sortDescriptor={params}\n            onSortChange={descriptor => {\n              setParams({...params, ...descriptor});\n            }}\n            selectedRows={selectedRows}\n            enableSelection={enableSelection}\n            selectionStyle={selectionStyle}\n            onSelectionChange={setSelectedRows}\n            onAction={onRowAction}\n            collapseOnMobile={collapseTableOnMobile}\n            cellHeight={cellHeight}\n          />\n        </div>\n\n        {(query.isFetched || query.isPlaceholderData) &&\n        !pagination?.data.length ? (\n          <div className=\"pt-50\">\n            {cloneElement(emptyStateMessage, {\n              isFiltering,\n            })}\n          </div>\n        ) : undefined}\n\n        <DataTablePaginationFooter\n          query={query}\n          onPageChange={page => setParams({...params, page})}\n          onPerPageChange={perPage => setParams({...params, perPage})}\n        />\n      </div>\n    </DataTableContext.Provider>\n  );\n}\n","import React, {ReactElement, ReactNode, useId} from 'react';\nimport {TableDataItem} from '../../ui/tables/types/table-data-item';\nimport {DataTable, DataTableProps} from '../data-table';\nimport {TableProps} from '../../ui/tables/table';\nimport {StaticPageTitle} from '../../seo/static-page-title';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport clsx from 'clsx';\n\ninterface Props<T extends TableDataItem> extends DataTableProps<T> {\n  title?: ReactElement<MessageDescriptor>;\n  headerContent?: ReactNode;\n  headerItemsAlign?: string;\n  enableSelection?: boolean;\n  onRowAction?: TableProps<T>['onAction'];\n  padding?: string;\n  className?: string;\n  variant?: 'default' | 'fullPage';\n}\nexport function DataTablePage<T extends TableDataItem>({\n  title,\n  headerContent,\n  headerItemsAlign = 'items-end',\n  className,\n  padding,\n  variant,\n  ...dataTableProps\n}: Props<T>) {\n  const titleId = useId();\n\n  return (\n    <div\n      className={clsx(\n        padding ?? variant === 'fullPage' ? 'p-0' : 'p-12 md:p-24',\n        className,\n      )}\n    >\n      {title && (\n        <div\n          className={clsx(\n            variant === 'fullPage' ? 'mb-6 border-b px-24 py-12' : 'mb-16',\n            headerContent && `flex ${headerItemsAlign} gap-4`,\n          )}\n        >\n          <StaticPageTitle>{title}</StaticPageTitle>\n          <h1 className=\"text-3xl font-light first:capitalize\" id={titleId}>\n            {title}\n          </h1>\n          {headerContent}\n        </div>\n      )}\n      <div className={clsx(variant === 'fullPage' ? 'p-12 md:p-24' : 'p-0')}>\n        <DataTable\n          {...dataTableProps}\n          tableDomProps={{\n            'aria-labelledby': title ? titleId : undefined,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from './paginated-resources';\nimport {useDataTable} from '../page/data-table-context';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\nimport {Key} from 'react';\n\ninterface Response extends BackendResponse {\n  //\n}\n\nexport function useDeleteSelectedRows() {\n  const {endpoint, selectedRows, setSelectedRows} = useDataTable();\n  return useMutation({\n    mutationFn: () => deleteSelectedRows(endpoint, selectedRows),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n      toast(\n        message('Deleted [one 1 record|other :count records]', {\n          values: {count: selectedRows.length},\n        }),\n      );\n      setSelectedRows([]);\n    },\n    onError: err =>\n      showHttpErrorToast(err, message('Could not delete records')),\n  });\n}\n\nfunction deleteSelectedRows(endpoint: string, ids: Key[]): Promise<Response> {\n  return apiClient.delete(`${endpoint}/${ids.join(',')}`).then(r => r.data);\n}\n","import {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport React from 'react';\nimport {useDeleteSelectedRows} from '../requests/delete-selected-rows';\nimport {useDataTable} from './data-table-context';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {errorStatusIs} from '@common/http/error-status-is';\n\nexport function DeleteSelectedItemsAction() {\n  return (\n    <DialogTrigger type=\"modal\">\n      <Button variant=\"flat\" color=\"danger\" className=\"ml-auto\">\n        <Trans message=\"Delete\" />\n      </Button>\n      <DeleteItemsDialog />\n    </DialogTrigger>\n  );\n}\n\nfunction DeleteItemsDialog() {\n  const deleteSelectedRows = useDeleteSelectedRows();\n  const {selectedRows, setSelectedRows} = useDataTable();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isLoading={deleteSelectedRows.isPending}\n      title={\n        <Trans\n          message=\"Delete [one 1 item|other :count items]?\"\n          values={{count: selectedRows.length}}\n        />\n      }\n      body={\n        <Trans message=\"This will permanently remove the items and cannot be undone.\" />\n      }\n      confirm={<Trans message=\"Delete\" />}\n      isDanger\n      onConfirm={() => {\n        deleteSelectedRows.mutate(undefined, {\n          onSuccess: () => close(),\n          onError: err => {\n            if (errorStatusIs(err, 422)) {\n              setSelectedRows([]);\n              close();\n            }\n          },\n        });\n      }}\n    />\n  );\n}\n","import React, {ReactNode} from 'react';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {SvgImage} from '@ui/images/svg-image';\nimport {Trans} from '@ui/i18n/trans';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\n\nexport interface DataTableEmptyStateMessageProps {\n  isFiltering?: boolean;\n  title: ReactNode;\n  filteringTitle?: ReactNode;\n  image: string;\n  size?: 'sm' | 'md';\n  className?: string;\n}\nexport function DataTableEmptyStateMessage({\n  isFiltering,\n  title,\n  filteringTitle,\n  image,\n  size,\n  className,\n}: DataTableEmptyStateMessageProps) {\n  const isMobile = useIsMobileMediaQuery();\n  if (!size) {\n    size = isMobile ? 'sm' : 'md';\n  }\n\n  // allow user to disable filtering message variation by not passing in \"filteringTitle\"\n  return (\n    <IllustratedMessage\n      className={className}\n      size={size}\n      image={<SvgImage src={image} />}\n      title={isFiltering && filteringTitle ? filteringTitle : title}\n      description={\n        isFiltering && filteringTitle ? (\n          <Trans message=\"Try another search query or different filters\" />\n        ) : undefined\n      }\n    />\n  );\n}\n","export default \"__VITE_ASSET__d109d853__\"","import {AddIcon} from '@ui/icons/material/Add';\nimport {Button} from '@ui/buttons/button';\nimport React, {ReactElement, ReactNode} from 'react';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {To} from 'react-router-dom';\nimport {ButtonBaseProps} from '@ui/buttons/button-base';\n\nexport interface DataTableAddItemButtonProps {\n  children: ReactNode;\n  to?: To;\n  href?: string;\n  download?: boolean | string;\n  elementType?: ButtonBaseProps['elementType'];\n  onClick?: ButtonBaseProps['onClick'];\n  icon?: ReactElement;\n  disabled?: boolean;\n}\nexport const DataTableAddItemButton = React.forwardRef<\n  HTMLButtonElement,\n  DataTableAddItemButtonProps\n>(\n  (\n    {children, to, elementType, onClick, href, download, icon, disabled},\n    ref,\n  ) => {\n    const isMobile = useIsMobileMediaQuery();\n\n    if (isMobile) {\n      return (\n        <IconButton\n          ref={ref}\n          variant=\"flat\"\n          color=\"primary\"\n          className=\"flex-shrink-0\"\n          size=\"sm\"\n          to={to}\n          href={href}\n          download={download}\n          elementType={elementType}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {icon || <AddIcon />}\n        </IconButton>\n      );\n    }\n\n    return (\n      <Button\n        ref={ref}\n        startIcon={icon || <AddIcon />}\n        variant=\"flat\"\n        color=\"primary\"\n        size=\"sm\"\n        to={to}\n        href={href}\n        download={download}\n        elementType={elementType}\n        onClick={onClick}\n        disabled={disabled}\n      >\n        {children}\n      </Button>\n    );\n  },\n);\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FileDownloadIcon = createSvgIcon(\n  <path d=\"M18 15v3H6v-3H4v3c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-3h-2zm-1-4-1.41-1.41L13 12.17V4h-2v8.17L8.41 9.59 7 11l5 5 5-5z\" />\n, 'FileDownloadOutlined');\n","import {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  downloadPath?: string;\n  result?: 'jobQueued';\n}\n\nexport type ExportCsvPayload = Record<string, string | number | undefined>;\n\nexport function useExportCsv(endpoint: string) {\n  return useMutation({\n    mutationFn: (payload?: ExportCsvPayload) => exportCsv(endpoint, payload),\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction exportCsv(\n  endpoint: string,\n  payload: ExportCsvPayload | undefined,\n): Promise<Response> {\n  return apiClient.post(endpoint, payload).then(r => r.data);\n}\n","import {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function CsvExportInfoDialog() {\n  const {close} = useDialogContext();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Csv export\" />\n      </DialogHeader>\n      <DialogBody>\n        <Trans\n          message=\"Your request is being processed. We'll email you when the report is ready to download. In\n            certain cases, it might take a little longer, depending on the number of items beings\n            exported and the volume of activity.\"\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" color=\"primary\" onClick={close}>\n          <Trans message=\"Got it\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {IconButton} from '@ui/buttons/icon-button';\nimport {FileDownloadIcon} from '@ui/icons/material/FileDownload';\nimport React, {Fragment, useState} from 'react';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ExportCsvPayload, useExportCsv} from '../requests/use-export-csv';\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\nimport {CsvExportInfoDialog} from './csv-export-info-dialog';\n\ninterface DataTableExportCsvButtonProps {\n  endpoint: string;\n  payload?: ExportCsvPayload;\n}\nexport function DataTableExportCsvButton({\n  endpoint,\n  payload,\n}: DataTableExportCsvButtonProps) {\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\n  const exportCsv = useExportCsv(endpoint);\n\n  return (\n    <Fragment>\n      <IconButton\n        variant=\"outline\"\n        color=\"primary\"\n        size=\"sm\"\n        className=\"flex-shrink-0\"\n        disabled={exportCsv.isPending}\n        onClick={() => {\n          exportCsv.mutate(payload, {\n            onSuccess: response => {\n              if (response.downloadPath) {\n                downloadFileFromUrl(response.downloadPath);\n              } else {\n                setDialogIsOpen(true);\n              }\n            },\n          });\n        }}\n      >\n        <FileDownloadIcon />\n      </IconButton>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={dialogIsOpen}\n        onOpenChange={setDialogIsOpen}\n      >\n        <CsvExportInfoDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PersonOffIcon = createSvgIcon(\n  <path d=\"m20 17.17-3.37-3.38c.64.22 1.23.48 1.77.76.97.51 1.58 1.52 1.6 2.62zm1.19 4.02-1.41 1.41-2.61-2.6H4v-2.78c0-1.12.61-2.15 1.61-2.66 1.29-.66 2.87-1.22 4.67-1.45L1.39 4.22 2.8 2.81l18.39 18.38zM15.17 18l-3-3H12c-2.37 0-4.29.73-5.48 1.34-.32.16-.52.5-.52.88V18h9.17zM12 6c1.1 0 2 .9 2 2 0 .86-.54 1.59-1.3 1.87l1.48 1.48C15.28 10.64 16 9.4 16 8c0-2.21-1.79-4-4-4-1.4 0-2.64.72-3.35 1.82l1.48 1.48C10.41 6.54 11.14 6 12 6z\" />\n, 'PersonOffOutlined');\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {User} from '@ui/types/user';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\nexport interface BanUserPayload {\n  ban_until?: string;\n  permanent?: boolean;\n  comment?: string;\n}\n\nexport function useBanUser(\n  form: UseFormReturn<BanUserPayload>,\n  userId: number,\n) {\n  return useMutation({\n    mutationFn: (payload: BanUserPayload) => banUser(userId, payload),\n    onSuccess: async () => {\n      toast(message('User suspended'));\n      await queryClient.invalidateQueries({queryKey: ['users']});\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction banUser(userId: number, payload: BanUserPayload): Promise<Response> {\n  return apiClient.post(`users/${userId}/ban`, payload).then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Form} from '@ui/forms/form';\nimport {useForm} from 'react-hook-form';\nimport {\n  BanUserPayload,\n  useBanUser,\n} from '@common/admin/users/requests/use-ban-user';\nimport {FormDatePicker} from '@ui/forms/input-field/date/date-picker/date-picker';\nimport {User} from '@ui/types/user';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\n\ninterface Props {\n  user: User;\n}\nexport function BanUserDialog({user}: Props) {\n  const {trans} = useTrans();\n  const {close, formId} = useDialogContext();\n  const form = useForm<BanUserPayload>({\n    defaultValues: {\n      permanent: true,\n    },\n  });\n  const isPermanent = form.watch('permanent');\n  const banUser = useBanUser(form, user.id);\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Suspend “:name“\" values={{name: user.name}} />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values =>\n            banUser.mutate(values, {onSuccess: () => close()})\n          }\n        >\n          <FormDatePicker\n            name=\"ban_until\"\n            label={<Trans message=\"Suspend until\" />}\n            disabled={isPermanent}\n          />\n          <FormSwitch name=\"permanent\" className=\"mt-12\">\n            <Trans message=\"Permanent\" />\n          </FormSwitch>\n          <FormTextField\n            className=\"mt-24\"\n            name=\"comment\"\n            inputElementType=\"textarea\"\n            maxLength={250}\n            label={<Trans message=\"Reason\" />}\n            placeholder={trans(message('Optional'))}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={banUser.isPending}\n        >\n          <Trans message=\"Suspend\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport function useUnbanUser(userId: number) {\n  return useMutation({\n    mutationFn: () => unbanUser(userId),\n    onSuccess: () => {\n      toast(message('User unsuspended'));\n      queryClient.invalidateQueries({queryKey: ['users']});\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction unbanUser(userId: number): Promise<Response> {\n  return apiClient.delete(`users/${userId}/unban`).then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient} from '@common/http/query-client';\nimport {message} from '@ui/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {User} from '@ui/types/user';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\ninterface Payload {\n  userId: string | number;\n}\n\nexport function useImpersonateUser() {\n  return useMutation({\n    mutationFn: (payload: Payload) => impersonateUser(payload),\n    onSuccess: async response => {\n      toast(message(`Impersonating User \"${response.user.name}\"`));\n      window.location.href = '/';\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction impersonateUser(payload: Payload) {\n  return apiClient\n    .post<Response>(`admin/users/impersonate/${payload.userId}`, payload)\n    .then(r => r.data);\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {User} from '@ui/types/user';\nimport {Trans} from '@ui/i18n/trans';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {CheckIcon} from '@ui/icons/material/Check';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {ChipList} from '@ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\nimport {Link} from 'react-router-dom';\nimport clsx from 'clsx';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {PersonOffIcon} from '@ui/icons/material/PersonOff';\nimport {BanUserDialog} from '@common/admin/users/ban-user-dialog';\nimport React from 'react';\nimport {useUnbanUser} from '@common/admin/users/requests/use-unban-user';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useImpersonateUser} from '@common/admin/users/requests/use-impersonate-user';\nimport {LoginIcon} from '@ui/icons/material/Login';\n\nexport const userDatatableColumns: ColumnConfig<User>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    sortingKey: 'email',\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"User\" />,\n    body: user => (\n      <NameWithAvatar\n        image={user.image}\n        label={user.name}\n        description={user.email}\n        alwaysShowAvatar\n        avatarCircle\n      />\n    ),\n  },\n  {\n    key: 'roles',\n    header: () => <Trans message=\"Roles\" />,\n    body: user => (\n      <ChipList radius=\"rounded\" size=\"xs\">\n        {user?.roles?.map(role => (\n          <Chip key={role.id} selectable>\n            <Link\n              className={clsx('capitalize')}\n              target=\"_blank\"\n              to={`/admin/roles/${role.id}/edit`}\n            >\n              <Trans message={role.name} />\n            </Link>\n          </Chip>\n        ))}\n      </ChipList>\n    ),\n  },\n  {\n    key: 'subscribed',\n    header: () => <Trans message=\"Subscribed\" />,\n    width: 'w-96',\n    body: user =>\n      user.subscriptions?.length ? (\n        <CheckIcon className=\"text-positive icon-md\" />\n      ) : (\n        <CloseIcon className=\"text-danger icon-md\" />\n      ),\n  },\n  {\n    key: 'banned_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Suspended\" />,\n    width: 'w-96',\n    body: user =>\n      user.banned_at ? <CheckIcon className=\"text-danger icon-md\" /> : null,\n  },\n  {\n    key: 'last_login',\n    width: 'w-110',\n    header: () => <Trans message=\"Last active\" />,\n    body: user =>\n      user.last_login ? (\n        <time>\n          <FormattedDate date={user.last_login.created_at} />\n        </time>\n      ) : (\n        '-'\n      ),\n  },\n  {\n    key: 'createdAt',\n    allowsSorting: true,\n    width: 'w-110',\n    header: () => <Trans message=\"Created at\" />,\n    body: user => (\n      <time>\n        <FormattedDate date={user.created_at} />\n      </time>\n    ),\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    width: 'w-128 flex-shrink-0',\n    hideHeader: true,\n    align: 'end',\n    visibleInMode: 'all',\n    body: user => (\n      <div className=\"text-muted\">\n        <Link to={`${user.id}/details`}>\n          <Tooltip label={<Trans message=\"Edit user\" />}>\n            <IconButton size=\"md\">\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n        </Link>\n        {user.banned_at ? (\n          <UnbanButton user={user} />\n        ) : (\n          <DialogTrigger type=\"modal\">\n            <Tooltip label={<Trans message=\"Suspend user\" />}>\n              <IconButton size=\"md\">\n                <PersonOffIcon />\n              </IconButton>\n            </Tooltip>\n            <BanUserDialog user={user} />\n          </DialogTrigger>\n        )}\n        <ImpersonateButton user={user} />\n      </div>\n    ),\n  },\n];\n\ninterface UnbanButtonProps {\n  user: User;\n}\nfunction UnbanButton({user}: UnbanButtonProps) {\n  const unban = useUnbanUser(user.id);\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          unban.mutate();\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Remove suspension\" />}>\n        <IconButton size=\"md\" color=\"danger\">\n          <PersonOffIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Suspend “:name“\" values={{name: user.name}} />}\n        body={\n          <Trans message=\"Are you sure you want to remove suspension from this user?\" />\n        }\n        confirm={<Trans message=\"Unsuspend\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\ninterface ImpersonateButtonProps {\n  user: User;\n}\nfunction ImpersonateButton({user}: ImpersonateButtonProps) {\n  const impersonate = useImpersonateUser();\n  return (\n    <DialogTrigger type=\"modal\">\n      <Tooltip label={<Trans message=\"Login as user\" />}>\n        <IconButton size=\"md\">\n          <LoginIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        title={<Trans message=\"Login as “:name“\" values={{name: user.name}} />}\n        isLoading={impersonate.isPending}\n        body={<Trans message=\"Are you sure you want to login as this user?\" />}\n        confirm={<Trans message=\"Login\" />}\n        onConfirm={() => {\n          impersonate.mutate({userId: user.id});\n        }}\n      />\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {User} from '@ui/types/user';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\nexport interface CreateUserPayload\n  extends Omit<Partial<User>, 'email_verified_at'> {\n  email_verified_at?: boolean;\n}\n\nexport function useCreateUser(form: UseFormReturn<CreateUserPayload>) {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (props: CreateUserPayload) => createUser(props),\n    onSuccess: () => {\n      toast(message('User created'));\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('users')});\n      navigate('/admin/users');\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createUser(payload: CreateUserPayload): Promise<Response> {\n  if (payload.roles) {\n    payload.roles = payload.roles.map(r => r.id) as any;\n  }\n  return apiClient.post('users', payload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport {CreateUserPayload, useCreateUser} from './requests/create-user';\nimport {FileUploadProvider} from '../../uploads/uploader/file-upload-provider';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Button} from '@ui/buttons/button';\n\nexport function CreateUserDialog() {\n  const form = useForm<CreateUserPayload>();\n  const createUser = useCreateUser(form);\n  const navigate = useNavigate();\n  const {close, formId} = useDialogContext();\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create user\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            createUser.mutate(values, {\n              onSuccess: r => {\n                close();\n                navigate(`${r.user.id}/details`, {replace: true});\n              },\n            });\n          }}\n        >\n          <FileUploadProvider>\n            <FormImageSelector\n              className=\"mb-24\"\n              name=\"image\"\n              diskPrefix=\"avatars\"\n              label={<Trans message=\"Avatar\" />}\n              showRemoveButton\n            />\n          </FileUploadProvider>\n          <FormTextField\n            required\n            className=\"mb-24\"\n            name=\"email\"\n            type=\"email\"\n            label={<Trans message=\"Email\" />}\n          />\n          <FormTextField\n            className=\"mb-24\"\n            name=\"first_name\"\n            label={<Trans message=\"First name\" />}\n          />\n          <FormTextField\n            className=\"mb-24\"\n            name=\"last_name\"\n            label={<Trans message=\"Last name\" />}\n          />\n          <FormTextField\n            required\n            name=\"password\"\n            type=\"password\"\n            label={<Trans message=\"Password\" />}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"outline\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={createUser.isPending}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {UserDatatableFilters} from '@common/admin/users/user-datatable-filters';\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport teamSvg from '../roles/team.svg';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {DataTableExportCsvButton} from '@common/datatable/csv-export/data-table-export-csv-button';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {userDatatableColumns} from '@common/admin/users/user-datatable-columns';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {CreateUserDialog} from '@common/admin/users/create-user-dialog';\n\nexport function UserDatatable() {\n  const {billing} = useSettings();\n\n  const filteredColumns = !billing.enable\n    ? userDatatableColumns.filter(c => c.key !== 'subscribed')\n    : userDatatableColumns;\n\n  return (\n    <Fragment>\n      <DataTablePage\n        endpoint=\"users\"\n        title={<Trans message=\"Users\" />}\n        filters={UserDatatableFilters}\n        columns={filteredColumns}\n        actions={<Actions />}\n        queryParams={{with: 'subscriptions,bans,lastLogin'}}\n        selectedActions={<DeleteSelectedItemsAction />}\n        emptyStateMessage={\n          <DataTableEmptyStateMessage\n            image={teamSvg}\n            title={<Trans message=\"No users have been created yet\" />}\n            filteringTitle={<Trans message=\"No matching users\" />}\n          />\n        }\n      />\n    </Fragment>\n  );\n}\n\nfunction Actions() {\n  return (\n    <Fragment>\n      <DataTableExportCsvButton endpoint=\"users/csv/export\" />\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new user\" />\n        </DataTableAddItemButton>\n        <CreateUserDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {\n  IAppearanceConfig,\n  MenuSectionConfig,\n} from '@common/admin/appearance/types/appearance-editor-config';\nimport {message} from '@ui/i18n/message';\n\nexport const DefaultAppearanceConfig: IAppearanceConfig = {\n  preview: {\n    defaultRoute: '/',\n    navigationRoutes: [],\n  },\n  sections: {\n    general: {\n      label: message('General'),\n      position: 1,\n    },\n    themes: {\n      label: message('Themes'),\n      position: 2,\n    },\n    menus: {\n      label: message('Menus'),\n      position: 3,\n      config: {\n        availableRoutes: [\n          '/',\n          '/login',\n          '/register',\n          '/contact',\n          '/pricing',\n          '/account-settings',\n          '/admin',\n          '/admin/appearance',\n          '/admin/settings',\n          '/admin/plans',\n          '/admin/subscriptions',\n          '/admin/users',\n          '/admin/roles',\n          '/admin/pages',\n          '/admin/tags',\n          '/admin/files',\n          '/admin/localizations',\n          '/admin/ads',\n          '/admin/logs',\n          '/admin/settings/authentication',\n          '/admin/settings/branding',\n          '/admin/settings/cache',\n          '/admin/settings/providers',\n          '/api-docs',\n        ],\n        positions: [\n          'admin-navbar',\n          'admin-sidebar',\n          'custom-page-navbar',\n          'auth-page-footer',\n          'auth-dropdown',\n          'account-settings-page',\n          'billing-page',\n          'checkout-page-navbar',\n          'checkout-page-footer',\n          'pricing-table-page',\n          'contact-us-page',\n          'notifications-page',\n          'footer',\n          'footer-secondary',\n        ],\n      } as MenuSectionConfig,\n    },\n    'custom-code': {\n      label: message('Custom Code'),\n      position: 4,\n    },\n    'seo-settings': {\n      label: message('SEO Settings'),\n      position: 5,\n    },\n  },\n};\n","import deepMerge from 'deepmerge';\nimport {DefaultAppearanceConfig} from '@common/admin/appearance/config/default-appearance-config';\nimport {AppAppearanceConfig} from '@app/admin/appearance/app-appearance-config';\nimport {IAppearanceConfig} from '@common/admin/appearance/types/appearance-editor-config';\n\nconst mergedAppearanceConfig = deepMerge.all([\n  DefaultAppearanceConfig,\n  AppAppearanceConfig,\n]);\n\nexport default mergedAppearanceConfig as IAppearanceConfig;\n","import {create} from 'zustand';\nimport {subscribeWithSelector} from 'zustand/middleware';\nimport {Settings} from '@ui/settings/settings';\nimport type {IAppearanceConfig} from './types/appearance-editor-config';\nimport {AllCommands} from './commands/commands';\nimport mergedAppearanceConfig from './config/merged-appearance-config';\nimport {BootstrapData} from '@ui/bootstrap-data/bootstrap-data';\nimport {FontConfig} from '@ui/fonts/font-picker/font-config';\nimport {ThemeId} from '@ui/themes/theme-selector-context';\n\nexport interface AppearanceEditorValues {\n  appearance: {\n    env: {app_name: string; app_url: string};\n    seo: {\n      key: string;\n      name: string;\n      value: string;\n      defaultValue: string;\n    }[];\n    themes: BootstrapData['themes'];\n    custom_code: {\n      css?: string;\n      html?: string;\n    };\n  };\n  settings: Settings;\n}\n\nexport interface AppearanceDefaults {\n  appearance: {\n    themes: {\n      light: Record<string, string>;\n      dark: Record<string, string>;\n    };\n  };\n  settings: Settings;\n}\n\ninterface AppearanceStore {\n  defaults: AppearanceDefaults | null;\n  iframeWindow: Window | null;\n  config: IAppearanceConfig | null;\n  setDefaults: (value: AppearanceDefaults) => void;\n  setIframeWindow: (value: Window) => void;\n  isDirty: boolean;\n  setIsDirty: (value: boolean) => void;\n  preview: {\n    setValues: (settings: AppearanceEditorValues) => void;\n    setThemeFont: (font: FontConfig | null) => void;\n    setThemeValue: (name: string, value: string) => void;\n    setActiveTheme: (themeId: ThemeId | null) => void;\n    setHighlight: (selector: string | null | undefined) => void;\n    setCustomCode: (mode: 'css' | 'html', value?: string) => void;\n  };\n}\n\nlet resolvePreviewAppIsLoaded = () => {};\nexport const previewAppIsLoaded = new Promise<void>(\n  resolve => (resolvePreviewAppIsLoaded = resolve),\n);\n\nexport const useAppearanceStore = create<AppearanceStore>()(\n  subscribeWithSelector((set, get) => ({\n    defaults: null,\n    iframeWindow: null,\n    isDirty: false,\n    setIsDirty: value => {\n      set(() => ({isDirty: value}));\n    },\n    config: mergedAppearanceConfig,\n    setDefaults: value => {\n      set({defaults: {...value}});\n    },\n    setIframeWindow: value => {\n      set({iframeWindow: value});\n      value.addEventListener('message', e => {\n        if (\n          e.data.source === 'be-appearance-preview' &&\n          e.data.type === 'appLoaded'\n        ) {\n          resolvePreviewAppIsLoaded();\n        }\n      });\n    },\n    preview: {\n      setValues: values => {\n        const preview = get().iframeWindow;\n        postMessage(preview, {type: 'setValues', values});\n      },\n      setThemeFont: font => {\n        const preview = get().iframeWindow;\n        postMessage(preview, {type: 'setThemeFont', value: font});\n      },\n      setThemeValue: (name, value) => {\n        const preview = get().iframeWindow;\n        postMessage(preview, {type: 'setThemeValue', name, value});\n      },\n      setActiveTheme: themeId => {\n        const preview = get().iframeWindow!;\n        postMessage(preview, {type: 'setActiveTheme', themeId});\n      },\n      setCustomCode: (mode, value) => {\n        const preview = get().iframeWindow;\n        postMessage(preview, {type: 'setCustomCode', mode, value});\n      },\n      setHighlight: selector => {\n        let node: HTMLElement | null = null;\n        const document = get().iframeWindow?.document;\n        if (document && selector) {\n          node = document.querySelector(selector);\n        }\n        if (node) {\n          requestAnimationFrame(() => {\n            if (!node) return;\n            node.scrollIntoView({\n              behavior: 'smooth',\n              block: 'center',\n              inline: 'center',\n            });\n          });\n        }\n      },\n    },\n  })),\n);\n\nfunction postMessage(window: Window | null, command: AllCommands) {\n  if (window) {\n    window.postMessage({source: 'be-appearance-editor', ...command}, '*');\n  }\n}\n\nexport function appearanceState(): AppearanceStore {\n  return useAppearanceStore.getState();\n}\n","import {queryOptions, useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {AdminSettings} from '../admin-settings';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchAdminSettingsResponse\n  extends BackendResponse,\n    AdminSettings {}\n\nexport function useAdminSettings() {\n  return useQuery(adminSettingsQueryOptions);\n}\n\nexport const adminSettingsQueryOptions = queryOptions({\n  queryKey: ['fetchAdminSettings'],\n  queryFn: () => fetchAdminSettings(),\n  staleTime: Infinity,\n  select: prepareSettingsForHookForm,\n});\n\nfunction fetchAdminSettings() {\n  return apiClient\n    .get<FetchAdminSettingsResponse>('settings')\n    .then(r => r.data);\n}\n\n// need to cast all numbers to strings and null/undefined to empty string recursively, otherwise hook form isDirty functionality will not work properly when binding numbers to text fields due to string/number type mismatch\nexport function prepareSettingsForHookForm(obj: any) {\n  for (const key in obj) {\n    if (Array.isArray(obj[key])) {\n      obj[key] = obj[key].map(prepareSettingsForHookForm);\n    } else if (typeof obj[key] === 'object') {\n      obj[key] = prepareSettingsForHookForm(obj[key]);\n    } else if (typeof obj[key] === 'number') {\n      obj[key] = obj[key].toString();\n    } else if (obj[key] == null) {\n      obj[key] = '';\n    }\n  }\n  return obj;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {AppearanceDefaults, AppearanceEditorValues} from '../appearance-store';\nimport {prepareSettingsForHookForm} from '@common/admin/settings/requests/use-admin-settings';\n\nexport interface FetchAppearanceValuesResponse extends BackendResponse {\n  values: AppearanceEditorValues;\n  defaults: AppearanceDefaults;\n}\n\nexport function useAppearanceEditorValuesQuery() {\n  return useQuery({\n    queryKey: ['admin/appearance/values'],\n    queryFn: () => fetchAppearanceValues(),\n    staleTime: Infinity,\n    select: prepareSettingsForHookForm,\n  });\n}\n\nexport function useAppearanceEditorValues(): AppearanceEditorValues {\n  const {data} = useAppearanceEditorValuesQuery();\n  return data!.values;\n}\n\nfunction fetchAppearanceValues(): Promise<FetchAppearanceValuesResponse> {\n  return apiClient.get('admin/appearance/values').then(r => r.data);\n}\n","import {Navigate, Outlet, useLocation, useMatches} from 'react-router-dom';\nimport {useEffect, useRef} from 'react';\nimport {AppearanceEditorValues, appearanceState} from './appearance-store';\nimport {useAppearanceEditorValuesQuery} from './requests/use-appearance-editor-values';\nimport {Trans} from '@ui/i18n/trans';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {useAppearanceEditorMode} from './commands/use-appearance-editor-mode';\nimport {StaticPageTitle} from '../../seo/static-page-title';\nimport {useSettings} from '@ui/settings/use-settings';\nimport mergedAppearanceConfig from '@common/admin/appearance/config/merged-appearance-config';\n\nfunction usePreviewRoute(): string {\n  const {pathname} = useLocation();\n  const matches = useMatches();\n  const subRoute = (matches.at(-1)?.handle as any)?.previewRoute;\n  const activeSection = pathname.split('/')[3];\n  const config = mergedAppearanceConfig.sections[activeSection];\n\n  const baseRoute =\n    config?.previewRoute || mergedAppearanceConfig.preview.defaultRoute || '/';\n\n  if (subRoute) {\n    return `${baseRoute}/${subRoute}`;\n  }\n\n  return baseRoute;\n}\n\nexport function AppearanceEditorPage() {\n  const {isAppearanceEditorActive} = useAppearanceEditorMode();\n  const {data} = useAppearanceEditorValuesQuery();\n  const {base_url} = useSettings();\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n  const iframeRoute = usePreviewRoute();\n\n  useEffect(() => {\n    // only set defaults snapshot once on route init\n    if (data?.defaults && !appearanceState().defaults) {\n      appearanceState().setDefaults(data.defaults);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (iframeRef.current) {\n      appearanceState().setIframeWindow(iframeRef.current.contentWindow!);\n    }\n  }, []);\n\n  // make sure appearance editor iframe can't be nested\n  if (isAppearanceEditorActive) {\n    return <Navigate to=\"/admin\" />;\n  }\n\n  // set key so iframe is recreated on route change and there's no entry pushed into history stack\n  return (\n    <div className=\"h-screen items-center md:flex\">\n      <StaticPageTitle>\n        <Trans message=\"Appearance\" />\n      </StaticPageTitle>\n      <Sidebar values={data?.values} />\n      <div className=\"relative h-full flex-auto\">\n        <iframe\n          key={iframeRoute}\n          ref={iframeRef}\n          className=\"h-full w-full max-md:hidden\"\n          src={\n            iframeRoute && iframeRoute !== '/'\n              ? `${base_url}/${iframeRoute}?appearanceEditor=true`\n              : `${base_url}?appearanceEditor=true`\n          }\n        />\n      </div>\n    </div>\n  );\n}\n\ninterface SidebarProps {\n  values: AppearanceEditorValues | undefined;\n}\nfunction Sidebar({values}: SidebarProps) {\n  const spinner = (\n    <div className=\"flex h-full flex-auto items-center justify-center\">\n      <ProgressCircle isIndeterminate aria-label=\"Loading editor\" />\n    </div>\n  );\n\n  return (\n    <div className=\"relative z-10 h-full w-full border-r bg shadow-lg @container md:w-320\">\n      {values ? <Outlet /> : spinner}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport {forwardRef, ReactNode} from 'react';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport {ButtonBase, ButtonBaseProps} from '@ui/buttons/button-base';\n\ninterface Props extends ButtonBaseProps {\n  startIcon?: ReactNode;\n  endIcon?: ReactNode;\n  description?: ReactNode;\n}\nexport const AppearanceButton = forwardRef<HTMLButtonElement, Props>(\n  ({startIcon, children, className, description, endIcon, ...other}, ref) => {\n    return (\n      <ButtonBase\n        ref={ref}\n        display=\"flex\"\n        className={clsx(\n          'relative mb-10 h-54 w-full items-center gap-10 rounded-input border bg px-14 text-sm hover:bg-hover',\n          className,\n          other.disabled && 'pointer-events-none opacity-50',\n        )}\n        variant={null}\n        {...other}\n      >\n        {startIcon}\n        <span className=\"block min-w-0\">\n          <span className=\"block\">{children}</span>\n          {description && (\n            <span className=\"block overflow-hidden overflow-ellipsis whitespace-nowrap text-xs text-muted\">\n              {description}\n            </span>\n          )}\n        </span>\n        <div className=\"ml-auto\">\n          {endIcon ?? (\n            <KeyboardArrowRightIcon\n              aria-hidden\n              className=\"text-muted icon-sm\"\n            />\n          )}\n        </div>\n      </ButtonBase>\n    );\n  },\n);\n","import {Link, useNavigate} from 'react-router-dom';\nimport {AppearanceEditorValues} from '../../appearance-store';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {Trans} from '@ui/i18n/trans';\nimport {useFieldArray} from 'react-hook-form';\nimport {AppearanceButton} from '../../appearance-button';\nimport {nanoid} from 'nanoid';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {Fragment} from 'react';\n\nexport function MenuList() {\n  const navigate = useNavigate();\n  const {trans} = useTrans();\n  const {fields, append} = useFieldArray<\n    AppearanceEditorValues,\n    'settings.menus',\n    'key'\n  >({\n    name: 'settings.menus',\n    keyName: 'key',\n  });\n\n  return (\n    <Fragment>\n      <div>\n        {fields.map((field, index) => (\n          <AppearanceButton to={`${index}`} key={field.key} elementType={Link}>\n            {field.name}\n          </AppearanceButton>\n        ))}\n      </div>\n      <div className=\"text-right\">\n        <Button\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          size=\"xs\"\n          onClick={() => {\n            const id = nanoid(10);\n            append({\n              name: trans(\n                message('New menu :number', {\n                  values: {number: fields.length + 1},\n                }),\n              ),\n              id,\n              positions: [],\n              items: [],\n            });\n            navigate(`${fields.length}`);\n          }}\n        >\n          <Trans message=\"Create menu\" />\n        </Button>\n      </div>\n    </Fragment>\n  );\n}\n","import {MenuSectionConfig} from '../../../types/appearance-editor-config';\nimport mergedAppearanceConfig from '../../../config/merged-appearance-config';\nimport {MenuItemConfig} from '@common/menus/menu-config';\n\nexport function useAvailableRoutes(): Partial<MenuItemConfig>[] {\n  const menuConfig = mergedAppearanceConfig.sections.menus.config;\n\n  if (!menuConfig) return [];\n\n  return (menuConfig as MenuSectionConfig).availableRoutes.map(route => {\n    return {\n      id: route,\n      label: route,\n      action: route,\n      type: 'route',\n      target: '_self',\n    };\n  });\n}\n","export function ucFirst<T extends string>(string: T): T {\n  if (!string) return string;\n  return (string.charAt(0).toUpperCase() + string.slice(1)) as T;\n}\n","import {useForm} from 'react-hook-form';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {Button} from '@ui/buttons/button';\nimport {useAvailableRoutes} from '@common/admin/appearance/sections/menus/hooks/available-routes';\nimport {List, ListItem} from '@ui/list/list';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\nimport {useValueLists} from '@common/http/value-lists';\nimport {ReactNode} from 'react';\nimport {nanoid} from 'nanoid';\nimport {MenuItemConfig} from '@common/menus/menu-config';\nimport {ucFirst} from '@ui/utils/string/uc-first';\n\ninterface AddMenuItemDialogProps {\n  title?: ReactNode;\n}\nexport function AddMenuItemDialog({\n  title = <Trans message=\"Add menu item\" />,\n}: AddMenuItemDialogProps) {\n  const {data} = useValueLists(['menuItemCategories']);\n  const categories = data?.menuItemCategories || [];\n  const routeItems = useAvailableRoutes();\n\n  return (\n    <Dialog size=\"sm\">\n      <DialogHeader>{title}</DialogHeader>\n      <DialogBody>\n        <Accordion variant=\"outline\">\n          <AccordionItem\n            label={<Trans message=\"Link\" />}\n            bodyClassName=\"max-h-240 overflow-y-auto\"\n          >\n            <AddCustomLink />\n          </AccordionItem>\n          <AccordionItem\n            label={<Trans message=\"Route\" />}\n            bodyClassName=\"max-h-240 overflow-y-auto\"\n          >\n            <AddRoute items={routeItems} />\n          </AccordionItem>\n          {categories.map(category => (\n            <AccordionItem\n              key={category.name}\n              label={<Trans message={category.name} />}\n            >\n              <AddRoute items={category.items} />\n            </AccordionItem>\n          ))}\n        </Accordion>\n      </DialogBody>\n    </Dialog>\n  );\n}\n\nfunction AddCustomLink() {\n  const form = useForm<MenuItemConfig>({\n    defaultValues: {\n      id: nanoid(6),\n      type: 'link',\n      target: '_blank',\n    },\n  });\n  const {close} = useDialogContext();\n\n  return (\n    <Form\n      form={form}\n      onSubmit={value => {\n        close(value);\n      }}\n    >\n      <FormTextField\n        required\n        name=\"label\"\n        label={<Trans message=\"Label\" />}\n        className=\"mb-20\"\n      />\n      <FormTextField\n        required\n        type=\"url\"\n        name=\"action\"\n        placeholder=\"https://\"\n        label={<Trans message=\"Url\" />}\n        className=\"mb-20\"\n      />\n      <div className=\"text-right\">\n        <Button type=\"submit\" variant=\"flat\" color=\"primary\" size=\"xs\">\n          <Trans message=\"Add to menu\" />\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\ninterface AddRouteProps {\n  items: Partial<MenuItemConfig>[];\n}\nfunction AddRoute({items}: AddRouteProps) {\n  const {close} = useDialogContext();\n\n  return (\n    <List>\n      {items.map(item => {\n        return (\n          <ListItem\n            key={item.id}\n            startIcon={<AddIcon size=\"sm\" />}\n            onSelected={() => {\n              if (item.label) {\n                const last = item.label.split('/').pop();\n                item.label = last ? ucFirst(last) : item.label;\n                item.id = nanoid(6);\n              }\n              if (!item.target) {\n                item.target = '_self';\n              }\n              close(item);\n            }}\n          >\n            {item.label}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DragIndicatorIcon = createSvgIcon(\n  <path d=\"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n, 'DragIndicatorOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DeleteIcon = createSvgIcon(\n  <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\n, 'DeleteOutlined');\n","export default \"__VITE_ASSET__abcb02f6__\"","import {FieldArrayWithId, useFormContext, useWatch} from 'react-hook-form';\nimport {Fragment, useEffect, useMemo, useRef} from 'react';\nimport {Link, useNavigate, useParams} from 'react-router-dom';\nimport {MenuSectionConfig} from '@common/admin/appearance/types/appearance-editor-config';\nimport {\n  AppearanceEditorValues,\n  appearanceState,\n  useAppearanceStore,\n} from '@common/admin/appearance/appearance-store';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Button} from '@ui/buttons/button';\nimport {AddMenuItemDialog} from '@common/admin/appearance/sections/menus/add-menu-item-dialog';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {DragIndicatorIcon} from '@ui/icons/material/DragIndicator';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {SvgImage} from '@ui/images/svg-image';\nimport {DeleteIcon} from '@ui/icons/material/Delete';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Option} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport dropdownMenu from './dropdown-menu.svg';\nimport {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\nimport {\n  useSortable,\n  UseSortableProps,\n} from '@ui/interactions/dnd/sortable/use-sortable';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {createSvgIconFromTree} from '@ui/icons/create-svg-icon';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {MenuItemConfig} from '@common/menus/menu-config';\nimport {MenuEditorFormValue} from '@common/admin/appearance/sections/menus/menu-editor-form';\nimport {moveItemInNewArray} from '@ui/utils/array/move-item-in-new-array';\n\nexport function AppearanceMenuEditor() {\n  const {menuIndex} = useParams();\n  const navigate = useNavigate();\n\n  const {getValues} = useFormContext<AppearanceEditorValues>();\n  const menuFormPath = `settings.menus.${menuIndex!}` as 'settings.menus.0';\n  const menu = getValues(menuFormPath);\n\n  useEffect(() => {\n    // go to menu list, if menu can't be found\n    if (!menu) {\n      navigate('/admin/appearance/menus');\n    } else {\n      appearanceState().preview.setHighlight(`[data-menu-id=\"${menu.id}\"]`);\n    }\n  }, [navigate, menu]);\n\n  if (!menu) {\n    return null;\n  }\n\n  return <MenuEditorSection menuFormPath={menuFormPath} />;\n}\n\ninterface MenuEditorFormProps {\n  menuFormPath: 'settings.menus.0';\n}\nfunction MenuEditorSection({menuFormPath}: MenuEditorFormProps) {\n  const {\n    site: {has_mobile_app},\n  } = useSettings();\n  const menuSectionConfig = useAppearanceStore(\n    s => s.config?.sections.menus.config,\n  ) as MenuSectionConfig;\n\n  const menuPositions = useMemo(() => {\n    const positions = [...menuSectionConfig?.positions];\n    if (has_mobile_app) {\n      positions.push('mobile-app-about');\n    }\n    return positions.map(position => ({\n      key: position,\n      name: position.replaceAll('-', ' '),\n    }));\n  }, [menuSectionConfig, has_mobile_app]);\n\n  return (\n    <Fragment>\n      <div className=\"mb-30 border-b pb-30\">\n        <FormTextField\n          name={`${menuFormPath}.name`}\n          label={<Trans message=\"Menu name\" />}\n          className=\"mb-20\"\n          autoFocus\n        />\n        <FormChipField\n          chipSize=\"sm\"\n          name={`${menuFormPath}.positions`}\n          valueKey=\"id\"\n          label={<Trans message=\"Menu positions\" />}\n          description={\n            <Trans message=\"Where should this menu appear on the site\" />\n          }\n        >\n          {menuPositions.map(item => (\n            <Option key={item.key} value={item.key} capitalizeFirst>\n              {item.name}\n            </Option>\n          ))}\n        </FormChipField>\n      </div>\n      <MenuItemsManager formPath={`${menuFormPath}.items`} />\n      <div className=\"text-right\">\n        <DeleteMenuTrigger />\n      </div>\n    </Fragment>\n  );\n}\n\ninterface MenuItemsManagerProps {\n  formPath: string;\n}\nexport function MenuItemsManager({formPath}: MenuItemsManagerProps) {\n  const navigate = useNavigate();\n  const form = useFormContext();\n  const items = useWatch({\n    control: form.control,\n    name: formPath,\n  }) as MenuItemConfig[];\n\n  return (\n    <Fragment>\n      <div className=\"flex flex-shrink-0 items-center justify-between gap-16\">\n        <Trans message=\"Menu items\" />\n        <DialogTrigger\n          type=\"popover\"\n          placement=\"right\"\n          offset={20}\n          onClose={(menuItemConfig?: MenuItemConfig) => {\n            if (menuItemConfig) {\n              form.setValue(formPath, [...items, menuItemConfig], {\n                shouldDirty: true,\n              });\n              navigate(`${items.length}`);\n            }\n          }}\n        >\n          <Button\n            variant=\"outline\"\n            color=\"primary\"\n            size=\"xs\"\n            startIcon={<AddIcon />}\n          >\n            <Trans message=\"Add\" />\n          </Button>\n          <AddMenuItemDialog />\n        </DialogTrigger>\n      </div>\n      <div className=\"mt-20 flex-shrink-0\">\n        {items.map((item, index) => (\n          <MenuListItem\n            key={item.id}\n            item={item}\n            items={items}\n            index={index}\n            onSortEnd={(oldIndex, newIndex) => {\n              form.setValue(\n                formPath,\n                moveItemInNewArray(items, oldIndex, newIndex),\n                {shouldDirty: true},\n              );\n            }}\n          />\n        ))}\n        {!items.length ? (\n          <IllustratedMessage\n            size=\"xs\"\n            className=\"my-40\"\n            image={<SvgImage src={dropdownMenu} />}\n            title={<Trans message=\"No menu items yet\" />}\n            description={\n              <Trans message=\"Click “add“ button to start adding links, pages, routes and other items to this menu. \" />\n            }\n          />\n        ) : null}\n      </div>\n    </Fragment>\n  );\n}\n\nfunction DeleteMenuTrigger() {\n  const navigate = useNavigate();\n  const params = useParams();\n  const menuIndex = parseInt(params.menuIndex!);\n\n  const form = useFormContext<MenuEditorFormValue>();\n  const name = `settings.menus` as 'settings.menus';\n  const menus = useWatch({\n    control: form.control,\n    name,\n  });\n  const menu = menus[menuIndex];\n\n  if (!menu) return null;\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          form.setValue(\n            name,\n            menus.filter((_, i) => i != menuIndex),\n            {\n              shouldDirty: true,\n            },\n          );\n          navigate('/admin/appearance/menus');\n        }\n      }}\n    >\n      <Button\n        variant=\"outline\"\n        color=\"danger\"\n        size=\"xs\"\n        startIcon={<DeleteIcon />}\n      >\n        <Trans message=\"Delete menu\" />\n      </Button>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Delete menu\" />}\n        body={\n          <Trans\n            message=\"Are you sure you want to delete “:name“?\"\n            values={{name: menu.name}}\n          />\n        }\n        confirm={<Trans message=\"Delete\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\ninterface MenuListItemProps {\n  item: MenuItemConfig;\n  items: FieldArrayWithId[];\n  index: number;\n  onSortEnd: UseSortableProps['onSortEnd'];\n}\nfunction MenuListItem({item, items, index, onSortEnd}: MenuListItemProps) {\n  const ref = useRef<HTMLButtonElement>(null);\n  const {sortableProps, dragHandleRef} = useSortable({\n    item,\n    items,\n    type: 'menuEditorSortable',\n    ref,\n    onSortEnd,\n    strategy: 'liveSort',\n  });\n\n  const Icon = item.icon && createSvgIconFromTree(item.icon);\n  const iconOnlyLabel = (\n    <div className=\"flex items-center gap-4 text-xs text-muted\">\n      {Icon && <Icon size=\"sm\" />}\n      (<Trans message=\"No label...\" />)\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <AppearanceButton\n        elementType={Link}\n        to={`${index}`}\n        ref={ref}\n        {...sortableProps}\n      >\n        <div className=\"flex items-center gap-10\">\n          <IconButton ref={dragHandleRef} size=\"sm\">\n            <DragIndicatorIcon className=\"text-muted hover:cursor-move\" />\n          </IconButton>\n          <div>{item.label || iconOnlyLabel}</div>\n        </div>\n      </AppearanceButton>\n    </Fragment>\n  );\n}\n","import {useControlledState} from '@react-stately/utils';\nimport React, {Fragment, useState} from 'react';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport clsx from 'clsx';\nimport {produce} from 'immer';\nimport {Permission, PermissionRestriction} from '../permission';\nimport {useValueLists} from '../../http/value-lists';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {List, ListItem} from '@ui/list/list';\nimport {Switch} from '@ui/forms/toggle/switch';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DoneAllIcon} from '@ui/icons/material/DoneAll';\nimport {Trans} from '@ui/i18n/trans';\nimport {ucFirst} from '@ui/utils/string/uc-first';\n\ninterface PermissionSelectorProps {\n  value?: Permission[];\n  onChange?: (value: Permission[]) => void;\n  valueListKey?: 'permissions' | 'workspacePermissions';\n}\nexport const PermissionSelector = React.forwardRef<\n  HTMLDivElement,\n  PermissionSelectorProps\n>(({valueListKey = 'permissions', ...props}, ref) => {\n  const {data} = useValueLists([valueListKey]);\n  const permissions = data?.permissions || data?.workspacePermissions;\n\n  const [value, setValue] = useControlledState(props.value, [], props.onChange);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  if (!permissions) return null;\n\n  const groupedPermissions = buildPermissionList(\n    permissions,\n    value,\n    showAdvanced,\n  );\n\n  const onRestrictionChange = (newPermission: Permission) => {\n    const newValue = [...value];\n    const index = newValue.findIndex(p => p.id === newPermission.id);\n    if (index > -1) {\n      newValue.splice(index, 1, newPermission);\n    }\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      <Accordion variant=\"outline\" ref={ref}>\n        {groupedPermissions.map(({groupName, items, anyChecked}) => (\n          <AccordionItem\n            label={<Trans message={prettyName(groupName)} />}\n            key={groupName}\n            startIcon={anyChecked ? <DoneAllIcon size=\"sm\" /> : undefined}\n          >\n            <List>\n              {items.map(permission => {\n                const index = value.findIndex(v => v.id === permission.id);\n                const isChecked = index > -1;\n\n                return (\n                  <div key={permission.id}>\n                    <ListItem\n                      onSelected={() => {\n                        if (isChecked) {\n                          const newValue = [...value];\n                          newValue.splice(index, 1);\n                          setValue(newValue);\n                        } else {\n                          setValue([...value, permission]);\n                        }\n                      }}\n                      endSection={\n                        <Switch\n                          tabIndex={-1}\n                          checked={isChecked}\n                          onChange={() => {}}\n                        />\n                      }\n                      description={<Trans message={permission.description} />}\n                    >\n                      <Trans\n                        message={permission.display_name || permission.name}\n                      />\n                    </ListItem>\n                    {isChecked && (\n                      <Restrictions\n                        permission={permission}\n                        onChange={onRestrictionChange}\n                      />\n                    )}\n                  </div>\n                );\n              })}\n            </List>\n          </AccordionItem>\n        ))}\n      </Accordion>\n      <Switch\n        className=\"mt-30\"\n        checked={showAdvanced}\n        onChange={e => {\n          setShowAdvanced(e.target.checked);\n        }}\n      >\n        <Trans message=\"Show advanced permissions\" />\n      </Switch>\n    </Fragment>\n  );\n});\n\ninterface RestrictionsProps {\n  permission: Permission;\n  onChange?: (newPermission: Permission) => void;\n}\nfunction Restrictions({permission, onChange}: RestrictionsProps) {\n  if (!permission?.restrictions?.length) return null;\n\n  const setRestrictionValue = (\n    name: string,\n    value: PermissionRestriction['value'],\n  ) => {\n    const nextState = produce(permission, draftState => {\n      const restriction = draftState.restrictions.find(r => r.name === name);\n      if (restriction) {\n        restriction.value = value;\n      }\n    });\n    onChange?.(nextState);\n  };\n\n  return (\n    <div className=\"px-40 py-20\">\n      {permission.restrictions.map((restriction, index) => {\n        const isLast = index === permission.restrictions.length - 1;\n\n        const name = <Trans message={prettyName(restriction.name)} />;\n        const description = restriction.description ? (\n          <Trans message={restriction.description} />\n        ) : undefined;\n\n        if (restriction.type === 'bool') {\n          return (\n            <Switch\n              description={description}\n              key={restriction.name}\n              className={clsx(!isLast && 'mb-30')}\n              checked={Boolean(restriction.value)}\n              onChange={e => {\n                setRestrictionValue(restriction.name, e.target.checked);\n              }}\n            >\n              {name}\n            </Switch>\n          );\n        }\n\n        return (\n          <TextField\n            size=\"sm\"\n            label={name}\n            description={description}\n            type=\"number\"\n            key={restriction.name}\n            className={clsx(!isLast && 'mb-30')}\n            value={(restriction.value as string) || ''}\n            onChange={e => {\n              setRestrictionValue(\n                restriction.name,\n                e.target.value === '' ? undefined : parseInt(e.target.value),\n              );\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport type FormChipFieldProps = PermissionSelectorProps & {\n  name: string;\n};\nexport function FormPermissionSelector(props: FormChipFieldProps) {\n  const {\n    field: {onChange, value = [], ref},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<PermissionSelectorProps> = {\n    onChange,\n    value,\n  };\n\n  return <PermissionSelector ref={ref} {...mergeProps(formProps, props)} />;\n}\n\nexport const prettyName = (name: string) => {\n  return ucFirst(name.replace('_', ' '));\n};\n\ninterface PermissionGroup {\n  groupName: string;\n  anyChecked: boolean;\n  items: Permission[];\n}\n\n// merge \"restrictions\" from selected value into all permissions to make\n// it easier to bind restriction values to form inputs\nexport function buildPermissionList(\n  allPermissions: Permission[],\n  selectedPermissions: Permission[],\n  showAdvanced: boolean,\n) {\n  const groupedPermissions: PermissionGroup[] = [];\n\n  allPermissions.forEach(permission => {\n    const index = selectedPermissions.findIndex(p => p.id === permission.id);\n    if (!showAdvanced && permission.advanced) return;\n\n    let group: PermissionGroup | undefined = groupedPermissions.find(\n      g => g.groupName === permission.group,\n    );\n    if (!group) {\n      group = {groupName: permission.group, anyChecked: false, items: []};\n      groupedPermissions.push(group);\n    }\n\n    if (index > -1) {\n      const mergedPermission = {\n        ...permission,\n        restrictions: mergeRestrictions(\n          permission.restrictions,\n          selectedPermissions[index].restrictions,\n        ),\n      };\n      group.anyChecked = true;\n      group.items.push(mergedPermission);\n    } else {\n      group.items.push(permission);\n    }\n  });\n\n  return groupedPermissions;\n}\n\nfunction mergeRestrictions(\n  allRestrictions: PermissionRestriction[],\n  selectedRestrictions: PermissionRestriction[],\n): PermissionRestriction[] {\n  return allRestrictions?.map(restriction => {\n    const selected = selectedRestrictions.find(\n      r => r.name === restriction.name,\n    );\n    if (selected) {\n      return {...restriction, value: selected.value};\n    } else {\n      return restriction;\n    }\n  });\n}\n","export const iconGridStyle = {\n  grid: 'flex flex-wrap gap-24',\n  button:\n    'flex flex-col items-center rounded hover:bg-hover h-90 aspect-square',\n};\n","import React, {Suspense} from 'react';\nimport {iconGridStyle} from '@common/ui/icon-picker/icon-grid-style';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {IconTree} from '@ui/icons/create-svg-icon';\n\nconst skeletons = [...Array(60).keys()];\n\nconst IconList = React.lazy(() => import('./icon-list'));\n\ninterface IconListProps {\n  onIconSelected: (icon: IconTree[] | null) => void;\n}\nexport default function IconPicker({onIconSelected}: IconListProps) {\n  const {trans} = useTrans();\n  const [value, setValue] = React.useState('');\n\n  return (\n    <div className=\"py-4\">\n      <TextField\n        className=\"mb-20\"\n        value={value}\n        onChange={e => {\n          setValue(e.target.value);\n        }}\n        placeholder={trans({message: 'Search icons...'})}\n      />\n      <AnimatePresence mode=\"wait\">\n        <Suspense\n          fallback={\n            <m.div {...opacityAnimation} className={iconGridStyle.grid}>\n              {skeletons.map((_, index) => (\n                <div className={iconGridStyle.button} key={index}>\n                  <Skeleton variant=\"rect\" />\n                </div>\n              ))}\n            </m.div>\n          }\n        >\n          <m.div {...opacityAnimation} className={iconGridStyle.grid}>\n            <IconList searchQuery={value} onIconSelected={onIconSelected} />\n          </m.div>\n        </Suspense>\n      </AnimatePresence>\n    </div>\n  );\n}\n","import React from 'react';\nimport IconPicker from './icon-picker';\nimport {Trans} from '@ui/i18n/trans';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\n\nexport function IconPickerDialog() {\n  return (\n    <Dialog size=\"w-850\" className=\"min-h-dialog\">\n      <DialogHeader>\n        <Trans message=\"Select icon\" />\n      </DialogHeader>\n      <DialogBody>\n        <IconPickerWrapper />\n      </DialogBody>\n    </Dialog>\n  );\n}\n\nfunction IconPickerWrapper() {\n  const {close} = useDialogContext();\n  return (\n    <IconPicker\n      onIconSelected={value => {\n        close(value);\n      }}\n    />\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {useValueLists} from '../../http/value-lists';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\nimport {Item} from '@ui/forms/listbox/item';\nimport {Fragment, useEffect, useMemo} from 'react';\nimport {\n  buildPermissionList,\n  prettyName,\n} from '@common/auth/ui/permission-selector';\nimport {Section} from '@ui/forms/listbox/section';\nimport {useFormContext} from 'react-hook-form';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {useAvailableRoutes} from '../appearance/sections/menus/hooks/available-routes';\nimport {ButtonBaseProps} from '@ui/buttons/button-base';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {IconPickerDialog} from '../../ui/icon-picker/icon-picker-dialog';\nimport {message} from '@ui/i18n/message';\nimport {usePrevious} from '@ui/utils/hooks/use-previous';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {MenuItemConfig} from '@common/menus/menu-config';\nimport {createSvgIconFromTree, IconTree} from '@ui/icons/create-svg-icon';\n\ninterface NameProps {\n  prefixName: (name: string) => string;\n}\n\ninterface MenuItemFormProps {\n  formPathPrefix?: string;\n  hideRoleAndPermissionFields?: boolean;\n}\nexport function MenuItemForm({\n  formPathPrefix,\n  hideRoleAndPermissionFields,\n}: MenuItemFormProps) {\n  const {trans} = useTrans();\n  const prefixName = (name: string): string => {\n    return formPathPrefix ? `${formPathPrefix}.${name}` : name;\n  };\n\n  return (\n    <Fragment>\n      <FormTextField\n        className=\"mb-20\"\n        name={prefixName('label')}\n        label={<Trans message=\"Label\" />}\n        placeholder={trans(message('No label...'))}\n        startAppend={<IconDialogTrigger prefixName={prefixName} />}\n      />\n      <DestinationSelector prefixName={prefixName} />\n      <TargetSelect prefixName={prefixName} />\n      {!hideRoleAndPermissionFields && (\n        <Fragment>\n          <RoleSelector prefixName={prefixName} />\n          <PermissionSelector prefixName={prefixName} />\n          <SubscriptionStatusSelector prefixName={prefixName} />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n}\n\ninterface IconDialogTriggerProps extends ButtonBaseProps, NameProps {}\nfunction IconDialogTrigger({\n  prefixName,\n  ...buttonProps\n}: IconDialogTriggerProps) {\n  const {watch, setValue} = useFormContext<MenuItemConfig>();\n  const fieldName = prefixName('icon') as 'icon';\n  const watchedItemIcon = watch(fieldName);\n  const Icon = watchedItemIcon && createSvgIconFromTree(watchedItemIcon);\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={(iconTree?: IconTree[] | null) => {\n        // null will be set explicitly if icon is cleared via icon picker\n        if (iconTree || iconTree === null) {\n          setValue(fieldName, iconTree, {\n            shouldDirty: true,\n          });\n        }\n      }}\n    >\n      <IconButton\n        className=\"text-muted icon-sm\"\n        variant=\"outline\"\n        size=\"md\"\n        {...buttonProps}\n      >\n        {Icon ? <Icon /> : <EditIcon />}\n      </IconButton>\n      <IconPickerDialog />\n    </DialogTrigger>\n  );\n}\n\nfunction DestinationSelector({prefixName}: NameProps) {\n  const form = useFormContext<MenuItemConfig>();\n  const currentType = form.watch(prefixName('type') as 'type');\n  const previousType = usePrevious(currentType);\n  const {data} = useValueLists(['menuItemCategories']);\n  const categories = data?.menuItemCategories || [];\n  const selectedCategory = categories.find(c => c.type === currentType);\n  const {trans} = useTrans();\n  const routeItems = useAvailableRoutes();\n\n  // clear \"action\" field when \"type\" field changes\n  useEffect(() => {\n    if (previousType && previousType !== currentType) {\n      form.setValue(prefixName('action') as 'action', '');\n    }\n  }, [currentType, previousType, form, prefixName]);\n\n  return (\n    <Fragment>\n      <FormSelect\n        className=\"mb-20\"\n        name={prefixName('type')}\n        selectionMode=\"single\"\n        label={<Trans message=\"Type\" />}\n      >\n        <Option value=\"link\">\n          <Trans message=\"Custom link\" />\n        </Option>\n        <Option value=\"route\">\n          <Trans message=\"Site page\" />\n        </Option>\n        {categories.map(category => (\n          <Option key={category.type} value={category.type}>\n            {category.name}\n          </Option>\n        ))}\n      </FormSelect>\n      {currentType === 'link' && (\n        <FormTextField\n          className=\"mb-20\"\n          required\n          type=\"url\"\n          name={prefixName('action')}\n          placeholder={trans({message: 'Enter a url...'})}\n          label={<Trans message=\"Url\" />}\n        />\n      )}\n      {currentType === 'route' && (\n        <FormSelect\n          className=\"mb-20\"\n          required\n          items={routeItems}\n          name={prefixName('action')}\n          label={<Trans message=\"Page\" />}\n          searchPlaceholder={trans(message('Search pages'))}\n          showSearchField\n          selectionMode=\"single\"\n        >\n          {item => (\n            <Item value={item.id} key={item.id}>\n              {item.label}\n            </Item>\n          )}\n        </FormSelect>\n      )}\n      {selectedCategory && (\n        <FormSelect\n          className=\"mb-20\"\n          required\n          items={selectedCategory.items}\n          name={prefixName('action')}\n          showSearchField\n          searchPlaceholder={trans(message('Search...'))}\n          selectionMode=\"single\"\n          label={<Trans message={selectedCategory.name} />}\n        >\n          {item => (\n            <Item value={item.action}>\n              <Trans message={item.label} />\n            </Item>\n          )}\n        </FormSelect>\n      )}\n    </Fragment>\n  );\n}\n\nfunction RoleSelector({prefixName}: NameProps) {\n  const {data} = useValueLists(['roles', 'permissions']);\n  const roles = data?.roles || [];\n  const {trans} = useTrans();\n\n  return (\n    <FormChipField\n      className=\"my-20\"\n      placeholder={trans({message: 'Add role...'})}\n      label={<Trans message=\"Only show if user has role\" />}\n      name={prefixName('roles')}\n      chipSize=\"sm\"\n      suggestions={roles}\n      valueKey=\"id\"\n      displayWith={c => roles.find(r => r.id === c.id)?.name}\n    >\n      {role => (\n        <Item value={role.id} key={role.id} capitalizeFirst>\n          <Trans message={role.name} />\n        </Item>\n      )}\n    </FormChipField>\n  );\n}\n\nfunction PermissionSelector({prefixName}: NameProps) {\n  const {data} = useValueLists(['roles', 'permissions']);\n  const {trans} = useTrans();\n\n  const groupedPermissions = useMemo(() => {\n    return buildPermissionList(data?.permissions || [], [], false);\n  }, [data?.permissions]);\n\n  return (\n    <FormChipField\n      label={<Trans message=\"Only show if user has permissions\" />}\n      placeholder={trans({message: 'Add permission...'})}\n      chipSize=\"sm\"\n      suggestions={groupedPermissions}\n      name={prefixName('permissions')}\n      valueKey=\"name\"\n    >\n      {({groupName, items}) => (\n        <Section label={prettyName(groupName)} key={groupName}>\n          {items.map(permission => (\n            <Item\n              key={permission.name}\n              value={permission.name}\n              description={<Trans message={permission.description} />}\n            >\n              <Trans message={permission.display_name || permission.name} />\n            </Item>\n          ))}\n        </Section>\n      )}\n    </FormChipField>\n  );\n}\n\nfunction SubscriptionStatusSelector({prefixName}: NameProps) {\n  const {billing} = useSettings();\n  if (!billing.enable) return null;\n  return (\n    <FormSelect\n      selectionMode=\"single\"\n      className=\"mt-20\"\n      label={<Trans message=\"Subscription status\" />}\n      name={prefixName('subscriptionStatus')}\n    >\n      <Item value=\"subscribed\">\n        <Trans message=\"Only show if user is subscribed\" />\n      </Item>\n      <Item value=\"unsubscribed\">\n        <Trans message=\"Only show if user is not subscribed\" />\n      </Item>\n      <Item value={null}>\n        <Trans message=\"Always show\" />\n      </Item>\n    </FormSelect>\n  );\n}\n\nfunction TargetSelect({prefixName}: NameProps) {\n  return (\n    <FormSelect\n      className=\"mt-20\"\n      selectionMode=\"single\"\n      name={prefixName('target')}\n      label={<Trans message=\"Open link in\" />}\n    >\n      <Option value=\"_self\">\n        <Trans message=\"Same window\" />\n      </Option>\n      <Option value=\"_blank\">\n        <Trans message=\"New window\" />\n      </Option>\n    </FormSelect>\n  );\n}\n","import {useFieldArray, useFormContext} from 'react-hook-form';\nimport {Fragment, useEffect} from 'react';\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\nimport {Button} from '@ui/buttons/button';\nimport {DeleteIcon} from '@ui/icons/material/Delete';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Trans} from '@ui/i18n/trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {MenuItemForm} from '@common/admin/menus/menu-item-form';\nimport {useParams} from 'react-router-dom';\nimport {MenuItemConfig} from '@common/menus/menu-config';\n\nexport function AppearanceMenuItemEditor() {\n  const {menuIndex, menuItemIndex} = useParams();\n  return (\n    <MenuItemEditor\n      itemsPath={`settings.menus.${menuIndex}.items`}\n      itemIndex={menuItemIndex!}\n    />\n  );\n}\n\ninterface Props {\n  itemsPath: string;\n  itemIndex: number | string;\n}\nexport function MenuItemEditor({itemsPath, itemIndex}: Props) {\n  const navigate = useNavigate();\n  const {getValues} = useFormContext();\n  const item = getValues(`${itemsPath}.${itemIndex}`);\n\n  // go to menu editor, if menu item can't be found\n  useEffect(() => {\n    if (!item) {\n      navigate(`..`, {relative: 'path', replace: true});\n    } else {\n      appearanceState().preview.setHighlight(\n        `[data-menu-item-id=\"${item.id}\"]`,\n      );\n    }\n  }, [navigate, item]);\n\n  // only render form when menu and item are available to avoid issues with hook form default values\n  if (!item) {\n    return null;\n  }\n\n  return <MenuItemEditorSection itemsPath={itemsPath} itemIndex={itemIndex} />;\n}\n\nfunction MenuItemEditorSection({itemsPath, itemIndex}: Props) {\n  return (\n    <Fragment>\n      <MenuItemForm formPathPrefix={`${itemsPath}.${itemIndex}`} />\n      <div className=\"mt-40 text-right\">\n        <DeleteItemTrigger itemsPath={itemsPath} itemIndex={itemIndex} />\n      </div>\n    </Fragment>\n  );\n}\n\nfunction DeleteItemTrigger({itemsPath, itemIndex}: Props) {\n  const navigate = useNavigate();\n  const {fields} = useFieldArray({\n    name: itemsPath,\n  });\n  const {setValue, getValues} = useFormContext();\n\n  const item = fields[+itemIndex] as MenuItemConfig;\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          if (itemIndex) {\n            const currentItems = getValues(itemsPath) as MenuItemConfig[];\n            setValue(\n              itemsPath,\n              currentItems.filter((_, i) => i !== +itemIndex),\n              {shouldDirty: true},\n            );\n            navigate(`..`, {relative: 'path', replace: true});\n          }\n        }\n      }}\n    >\n      <Button\n        variant=\"outline\"\n        color=\"danger\"\n        size=\"xs\"\n        startIcon={<DeleteIcon />}\n      >\n        <Trans message=\"Delete this item\" />\n      </Button>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Delete item\" />}\n        body={\n          <Trans\n            message=\"Are you sure you want to delete “:name“?\"\n            values={{name: item.label}}\n          />\n        }\n        confirm={<Trans message=\"Delete\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {AppearanceEditorValues} from '@common/admin/appearance/appearance-store';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {message} from '@ui/i18n/message';\nimport {DeepPartial} from 'utility-types';\nimport {FetchAppearanceValuesResponse} from '@common/admin/appearance/requests/use-appearance-editor-values';\n\nexport const saveAppearanceChangesMutationKey = ['appearance-editor-save'];\n\nexport function useSaveAppearanceChanges() {\n  return useMutation({\n    mutationKey: saveAppearanceChangesMutationKey,\n    mutationFn: (values: DeepPartial<AppearanceEditorValues>) => {\n      return saveChanges(values);\n    },\n    onSuccess: async response => {\n      queryClient.setQueryData(['admin/appearance/values'], response);\n      toast(message('Changes saved'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction saveChanges(changes: DeepPartial<AppearanceEditorValues>) {\n  return apiClient\n    .post<FetchAppearanceValuesResponse>(`admin/appearance`, {changes})\n    .then(r => r.data);\n}\n","import {useBlocker} from 'react-router-dom';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@ui/i18n/trans';\nimport {useEffect} from 'react';\n\ninterface Props {\n  isBlocked: boolean;\n  allowedPath?: string;\n}\nexport function BlockerDialog({isBlocked, allowedPath}: Props) {\n  const {state, reset, proceed} = useBlocker(({nextLocation}) => {\n    return (\n      isBlocked &&\n      // only block navigation if specified path is not within next location\n      (!allowedPath || !nextLocation.pathname.includes(allowedPath))\n    );\n  });\n\n  useEffect(() => {\n    const handleBeforeUnload = (e: BeforeUnloadEvent) => {\n      if (isBlocked) {\n        e.preventDefault();\n        e.returnValue = true;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\n  }, [isBlocked]);\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      isOpen={state === 'blocked'}\n      onClose={isConfirmed => {\n        if (state !== 'blocked') return;\n        if (isConfirmed) {\n          proceed();\n        } else {\n          reset();\n        }\n      }}\n    >\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"You have unsaved changes\" />}\n        body={\n          <Trans message=\"Your changes will be lost if you continue. Are you sure you want to discard them?\" />\n        }\n        close={<Trans message=\"Stay here\" />}\n        confirm={<Trans message=\"Discard changes\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {Fragment, ReactElement, ReactNode, useEffect} from 'react';\nimport {Form} from '@ui/forms/form';\nimport {UseFormReturn, useFormState} from 'react-hook-form';\nimport {\n  appearanceState,\n  useAppearanceStore,\n} from '@common/admin/appearance/appearance-store';\nimport {\n  saveAppearanceChangesMutationKey,\n  useSaveAppearanceChanges,\n} from '@common/admin/appearance/requests/use-save-appearance-editor-changes';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {Link, useLocation} from 'react-router-dom';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {useIsMutating} from '@tanstack/react-query';\nimport {BlockerDialog} from '@ui/overlays/dialog/blocker-dialog';\n\ninterface Props {\n  children: ReactNode;\n  breadcrumb: ReactElement;\n  form: UseFormReturn<any>;\n  blockerAllowedPath?: string;\n}\nexport function AppearanceEditorForm({\n  children,\n  breadcrumb,\n  form,\n  blockerAllowedPath,\n}: Props) {\n  const {isDirty} = useFormState({control: form.control});\n\n  useEffect(() => {\n    appearanceState().setIsDirty(isDirty);\n    return () => appearanceState().setIsDirty(false);\n  }, [isDirty]);\n\n  useEffect(() => {\n    const subscription = form.watch(values => {\n      appearanceState().preview.setValues(values);\n    });\n    return () => subscription.unsubscribe();\n  }, [form]);\n\n  const saveChanges = useSaveAppearanceChanges();\n  return (\n    <Fragment>\n      <AppearanceEditorLayout breadcrumb={breadcrumb}>\n        <FileUploadProvider>\n          <Form\n            className=\"h-full flex-auto\"\n            id=\"appearance-editor\"\n            form={form}\n            onSubmit={values => {\n              saveChanges.mutate(values, {\n                onSuccess: () => form.reset(values),\n              });\n            }}\n          >\n            {children}\n          </Form>\n        </FileUploadProvider>\n      </AppearanceEditorLayout>\n      <BlockerDialog isBlocked={isDirty} allowedPath={blockerAllowedPath} />\n    </Fragment>\n  );\n}\n\ninterface AppearanceEditorLayoutProps {\n  breadcrumb?: ReactNode;\n  children: ReactNode;\n}\nexport function AppearanceEditorLayout({\n  breadcrumb,\n  children,\n}: AppearanceEditorLayoutProps) {\n  return (\n    <div className=\"flex h-full flex-col\">\n      <AppearanceEditorHeader />\n      {breadcrumb}\n      <div className=\"flex-auto overflow-y-auto\">\n        <div className=\"flex h-full flex-col px-14 py-20\">{children}</div>\n      </div>\n    </div>\n  );\n}\n\nfunction AppearanceEditorHeader() {\n  const {state} = useLocation();\n  const isSaving =\n    useIsMutating({\n      mutationKey: saveAppearanceChangesMutationKey,\n    }) > 0;\n  const isDirty = useAppearanceStore(s => s.isDirty);\n  return (\n    <div className=\"flex h-50 flex-shrink-0 items-center border-b pr-10\">\n      <IconButton\n        border=\"border-r\"\n        className=\"text-muted\"\n        elementType={Link}\n        to={state?.prevPath || '/admin'}\n        replace\n      >\n        <CloseIcon />\n      </IconButton>\n      <div className=\"pl-10\">\n        <Trans message=\"Appearance editor\" />\n      </div>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        className=\"ml-auto block\"\n        disabled={!isDirty || isSaving}\n        type=\"submit\"\n        form=\"appearance-editor\"\n      >\n        {isDirty ? <Trans message=\"Save\" /> : <Trans message=\"Saved\" />}\n      </Button>\n    </div>\n  );\n}\n","import {useLocation, useMatches} from 'react-router-dom';\n\nexport function usePreviousPath() {\n  const location = useLocation();\n  return new URL('.', window.origin + location.pathname).pathname.replace(\n    /\\/$/,\n    '',\n  );\n}\n","import {Link} from 'react-router-dom';\nimport clsx from 'clsx';\nimport React, {Children, Fragment, ReactElement, ReactNode} from 'react';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport {Trans} from '@ui/i18n/trans';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\nimport {usePreviousPath} from '@common/ui/navigation/use-previous-path';\n\ninterface Props {\n  children: ReactNode;\n  backLink?: string;\n}\nexport function AppearanceEditorBreadcrumb({children, backLink}: Props) {\n  const childrenArray = Children.toArray(children) as ReactElement[];\n  const previousPath = usePreviousPath();\n\n  const categories = [<Trans key=\"mainLabel\" message=\"Customizing\" />];\n  if (childrenArray.length > 1) {\n    categories.push(childrenArray[0]);\n  }\n  const sections =\n    childrenArray.length > 1 ? childrenArray.slice(1) : childrenArray;\n\n  return (\n    <div className=\"flex h-60 flex-shrink-0 items-center border-b\">\n      <IconButton\n        iconSize=\"md\"\n        radius=\"rounded-none\"\n        className=\"h-full w-50 flex-shrink-0 text-muted\"\n        elementType={Link}\n        to={backLink ?? previousPath}\n      >\n        <KeyboardArrowLeftIcon />\n      </IconButton>\n      <div className=\"min-w-0 border-l p-10\">\n        <LabelList items={categories} className=\"text-xs text-muted\" />\n        <LabelList items={sections} isEmphasized className=\"mt-2 text-sm\" />\n      </div>\n    </div>\n  );\n}\n\ninterface LabelListProps {\n  items: ReactElement[];\n  className: string;\n  isEmphasized?: boolean;\n}\nfunction LabelList({items, className, isEmphasized}: LabelListProps) {\n  return (\n    <div className={clsx('flex items-center gap-4', className)}>\n      {items.map((item, index) => {\n        const isLast = items.length - 1 === index;\n        return (\n          <Fragment key={index}>\n            <div\n              className={clsx(\n                'min-w-0 overflow-hidden overflow-ellipsis whitespace-nowrap',\n                isLast && isEmphasized && 'text-primary',\n              )}\n            >\n              {item}\n            </div>\n            {!isLast &&\n              (isEmphasized ? (\n                <KeyboardArrowRightIcon\n                  className=\"flex-shrink-0 text-muted\"\n                  size=\"font-inherit\"\n                />\n              ) : (\n                <div>&bull;</div>\n              ))}\n          </Fragment>\n        );\n      })}\n    </div>\n  );\n}\n","import {appearanceState, useAppearanceStore} from '../appearance-store';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {ReactNode} from 'react';\nimport {Settings} from '@ui/settings/settings';\nimport {useForm} from 'react-hook-form';\nimport {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\n\ninterface Payload {\n  settings: {\n    branding: {\n      favicon: string;\n      logo_light: string;\n      logo_dark: string;\n      logo_light_mobile: string;\n      logo_dark_mobile: string;\n      site_description: string;\n    };\n  };\n  appearance: {\n    env: {\n      app_name: string;\n    };\n  };\n}\n\nexport function GeneralSection() {\n  const values = useAppearanceEditorValues();\n  const form = useForm<Payload>({\n    defaultValues: {\n      settings: {\n        branding: {\n          favicon: values.settings.branding.favicon,\n          logo_light: values.settings.branding.logo_light,\n          logo_dark: values.settings.branding.logo_dark,\n          logo_light_mobile: values.settings.branding.logo_light_mobile,\n          logo_dark_mobile: values.settings.branding.logo_dark_mobile,\n          site_description: values.settings.branding.site_description,\n        },\n      },\n      appearance: {\n        env: {\n          app_name: values.appearance.env.app_name,\n        },\n      },\n    },\n  });\n  return (\n    <AppearanceEditorForm\n      form={form}\n      breadcrumb={\n        <AppearanceEditorBreadcrumb>\n          <Trans message=\"General\" />\n        </AppearanceEditorBreadcrumb>\n      }\n    >\n      <BrandingImageSelector\n        label={<Trans message=\"Favicon\" />}\n        description={\n          <Trans message=\"This will generate different size favicons. Image should be at least 512x512 in size.\" />\n        }\n        type=\"favicon\"\n      />\n      <BrandingImageSelector\n        label={<Trans message=\"Light logo\" />}\n        description={<Trans message=\"Will be used on dark backgrounds.\" />}\n        type=\"logo_light\"\n      />\n      <BrandingImageSelector\n        label={<Trans message=\"Dark logo\" />}\n        description={\n          <Trans message=\"Will be used on light backgrounds. Will default to light logo if left empty.\" />\n        }\n        type=\"logo_dark\"\n      />\n      <BrandingImageSelector\n        label={<Trans message=\"Mobile light logo\" />}\n        description={\n          <Trans message=\"Will be used on light backgrounds on mobile. Will default to desktop logo if left empty.\" />\n        }\n        type=\"logo_light_mobile\"\n      />\n      <BrandingImageSelector\n        label={<Trans message=\"Mobile dark logo\" />}\n        description={\n          <Trans message=\"Will be used on dark backgrounds on mobile. Will default to desktop if left empty.\" />\n        }\n        type=\"logo_dark_mobile\"\n      />\n      <SiteNameTextField />\n      <SiteDescriptionTextArea />\n    </AppearanceEditorForm>\n  );\n}\n\ninterface ImageSelectorProps {\n  label: ReactNode;\n  description: ReactNode;\n  type: keyof Settings['branding'];\n}\nfunction BrandingImageSelector({label, description, type}: ImageSelectorProps) {\n  const defaultValue = useAppearanceStore(\n    s => s.defaults?.settings.branding[type],\n  );\n  return (\n    <FormImageSelector\n      name={`settings.branding.${type}`}\n      className=\"mb-30 border-b pb-30\"\n      label={label}\n      description={description}\n      diskPrefix=\"branding_media\"\n      defaultValue={defaultValue}\n      onChange={() => {\n        appearanceState().preview.setHighlight('[data-logo=\"navbar\"]');\n      }}\n    />\n  );\n}\nfunction SiteNameTextField() {\n  return (\n    <FormTextField\n      name=\"appearance.env.app_name\"\n      required\n      className=\"mt-20\"\n      label={<Trans message=\"Site name\" />}\n    />\n  );\n}\n\nfunction SiteDescriptionTextArea() {\n  return (\n    <FormTextField\n      name=\"settings.branding.site_description\"\n      className=\"mt-20\"\n      inputElementType=\"textarea\"\n      rows={4}\n      label={<Trans message=\"Site description\" />}\n    />\n  );\n}\n","export function randomNumber(min: number = 1, max: number = 10000) {\n  const randomBuffer = new Uint32Array(1);\n\n  window.crypto.getRandomValues(randomBuffer);\n\n  const number = randomBuffer[0] / (0xffffffff + 1);\n\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(number * (max - min + 1)) + min;\n}\n","import {NavLink, useNavigate} from 'react-router-dom';\nimport {Fragment, ReactNode} from 'react';\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {Trans} from '@ui/i18n/trans';\nimport {useFormContext} from 'react-hook-form';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {randomNumber} from '@ui/utils/string/random-number';\nimport {ThemeEditorFormValue} from '@common/admin/appearance/sections/themes/theme-editor-form';\n\ninterface Props {\n  type: string;\n  children?: ReactNode;\n  disabled?: boolean;\n}\nexport function ThemeList({type, children, disabled}: Props) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const {watch, getValues, setValue} = useFormContext<ThemeEditorFormValue>();\n\n  return (\n    <Fragment>\n      {children}\n      <div className=\"mb-20\">\n        <Button\n          size=\"xs\"\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          disabled={disabled}\n          onClick={() => {\n            const lightThemeColors =\n              appearanceState().defaults?.appearance.themes.light!;\n\n            const currentThemes = getValues('appearance.themes');\n\n            setValue(\n              'appearance.themes',\n              [\n                ...currentThemes,\n                {\n                  id: randomNumber(),\n                  name: trans(message('New theme')),\n                  values: lightThemeColors,\n                  type,\n                },\n              ],\n              {shouldDirty: true},\n            );\n\n            navigate(`${currentThemes.length}`);\n          }}\n        >\n          <Trans message=\"New theme\" />\n        </Button>\n      </div>\n      {watch('appearance.themes').map((field, index) => (\n        <AppearanceButton\n          key={field.id}\n          to={`${index}`}\n          elementType={NavLink}\n          disabled={disabled}\n        >\n          {field.name}\n        </AppearanceButton>\n      ))}\n    </Fragment>\n  );\n}\n","import React, {MutableRefObject, ReactNode, Suspense, useState} from 'react';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport type ReactAce from 'react-ace';\n\nconst AceEditor = React.lazy(() => import('./ace-editor'));\n\ninterface TextEditorSourcecodeDialogProps {\n  defaultValue: string;\n  mode?: 'css' | 'html' | 'php_laravel_blade';\n  title: ReactNode;\n  onSave?: (value?: string) => void;\n  isSaving?: boolean;\n  footerStartAction?: ReactNode;\n  beautify?: boolean;\n  editorRef?: MutableRefObject<ReactAce | null>;\n}\nexport function AceDialog({\n  defaultValue,\n  mode = 'html',\n  title,\n  onSave,\n  isSaving,\n  footerStartAction,\n  beautify,\n  editorRef,\n}: TextEditorSourcecodeDialogProps) {\n  const [value, setValue] = useState(defaultValue);\n  const [isValid, setIsValid] = useState<boolean>(true);\n\n  return (\n    <Dialog size=\"fullscreen\" className=\"h-full w-full\">\n      <DialogHeader>{title}</DialogHeader>\n      <DialogBody className=\"relative flex-auto\" padding=\"p-0\">\n        <Suspense\n          fallback={\n            <div className=\"flex h-400 w-full items-center justify-center\">\n              <ProgressCircle\n                aria-label=\"Loading editor...\"\n                isIndeterminate\n                size=\"md\"\n              />\n            </div>\n          }\n        >\n          <AceEditor\n            beautify={beautify}\n            mode={mode}\n            onChange={newValue => setValue(newValue)}\n            defaultValue={value || ''}\n            onIsValidChange={setIsValid}\n            editorRef={editorRef}\n          />\n        </Suspense>\n      </DialogBody>\n      <Footer\n        disabled={!isValid || isSaving}\n        value={value}\n        onSave={onSave}\n        startAction={footerStartAction}\n      />\n    </Dialog>\n  );\n}\n\ninterface FooterProps {\n  disabled: boolean | undefined;\n  value?: string;\n  onSave?: (value?: string) => void;\n  startAction?: ReactNode;\n}\nfunction Footer({disabled, value, onSave, startAction}: FooterProps) {\n  const {close} = useDialogContext();\n  return (\n    <DialogFooter dividerTop startAction={startAction}>\n      <Button onClick={() => close()}>\n        <Trans message=\"Cancel\" />\n      </Button>\n      <Button\n        disabled={disabled}\n        variant=\"flat\"\n        color=\"primary\"\n        onClick={() => {\n          if (onSave) {\n            onSave(value);\n          } else {\n            close(value);\n          }\n        }}\n      >\n        <Trans message=\"Save\" />\n      </Button>\n    </DialogFooter>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\n\nexport function useSeoTags(name: string | string[]) {\n  return useQuery({\n    queryKey: ['admin', 'seo-tags', name],\n    queryFn: () => fetchTags(name),\n  });\n}\n\nfunction fetchTags(name: string | string[]) {\n  return apiClient\n    .get<\n      Record<\n        string,\n        {\n          custom: string | null;\n          original: string;\n        }\n      >\n    >(`admin/appearance/seo-tags/${name}`)\n    .then(response => response.data);\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\n\ninterface Response extends BackendResponse {}\n\nexport function useUpdateSeoTags(name: string) {\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: (payload: {tags: string}) => updateTags(name, payload.tags),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: ['admin', 'seo-tags', name],\n      });\n      toast(message('Updated SEO tags'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateTags(name: string, tags: string): Promise<Response> {\n  return apiClient\n    .put(`admin/appearance/seo-tags/${name}`, {tags})\n    .then(r => r.data);\n}\n","import {Fragment, useRef} from 'react';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {AceDialog} from '@common/ace-editor/ace-dialog';\nimport mergedAppearanceConfig from '@common/admin/appearance/config/merged-appearance-config';\nimport {SeoSettingsSectionConfig} from '@common/admin/appearance/types/appearance-editor-config';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport {useSeoTags} from '@common/admin/appearance/sections/seo/use-seo-tags';\nimport {useUpdateSeoTags} from '@common/admin/appearance/sections/seo/use-update-seo-tags';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\nimport {Button} from '@ui/buttons/button';\nimport type ReactAce from 'react-ace';\nimport {AppearanceEditorLayout} from '@common/admin/appearance/appearance-editor-form';\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\n\nconst pages =\n  (\n    mergedAppearanceConfig.sections['seo-settings']\n      .config as SeoSettingsSectionConfig\n  )?.pages || [];\n\nconst names = pages.map(page => page.key);\n\nexport function SeoSection() {\n  const {isLoading} = useSeoTags(names);\n\n  return (\n    <AppearanceEditorLayout\n      breadcrumb={\n        <AppearanceEditorBreadcrumb>\n          <Trans message=\"SEO\" />\n        </AppearanceEditorBreadcrumb>\n      }\n    >\n      {isLoading ? (\n        <FullPageLoader />\n      ) : (\n        <Fragment>\n          {pages.map(page => (\n            <TagEditorTrigger\n              key={page.key}\n              label={page.label}\n              name={page.key}\n            />\n          ))}\n        </Fragment>\n      )}\n    </AppearanceEditorLayout>\n  );\n}\n\ninterface TagEditorTriggerProps {\n  label: MessageDescriptor;\n  name: string;\n}\nfunction TagEditorTrigger({label, name}: TagEditorTriggerProps) {\n  const {data, isLoading} = useSeoTags(names);\n\n  return (\n    <DialogTrigger type=\"modal\">\n      <AppearanceButton disabled={isLoading}>\n        <Trans {...label} />\n      </AppearanceButton>\n      {data ? <TagsEditorDialog name={name} value={data[name]} /> : null}\n    </DialogTrigger>\n  );\n}\n\ninterface TagsEditorDialogProps {\n  name: string;\n  value: {custom: string | null; original: string};\n}\nfunction TagsEditorDialog({name, value}: TagsEditorDialogProps) {\n  const {close} = useDialogContext();\n  const updateTags = useUpdateSeoTags(name);\n  const editorRef = useRef<ReactAce | null>(null);\n\n  const resetButton = (\n    <Button\n      variant=\"outline\"\n      color=\"primary\"\n      onClick={() => {\n        if (editorRef.current) {\n          editorRef.current.editor.setValue(value.original);\n        }\n      }}\n    >\n      <Trans message=\"Reset to original\" />\n    </Button>\n  );\n\n  return (\n    <AceDialog\n      mode=\"php_laravel_blade\"\n      title={<Trans message=\"Edit SEO meta tags\" />}\n      footerStartAction={resetButton}\n      editorRef={editorRef}\n      defaultValue={value.custom || value.original}\n      isSaving={updateTags.isPending}\n      beautify={false}\n      onSave={newValue => {\n        if (newValue != null) {\n          updateTags.mutate(\n            {tags: newValue},\n            {\n              onSuccess: () => close(),\n            },\n          );\n        }\n      }}\n    />\n  );\n}\n","import {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Trans} from '@ui/i18n/trans';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {\n  AppearanceEditorValues,\n  appearanceState,\n} from '@common/admin/appearance/appearance-store';\nimport {AceDialog} from '@common/ace-editor/ace-dialog';\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\nimport {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\n\ninterface FormValue {\n  appearance: {\n    custom_code: {\n      css: string;\n      html: string;\n    };\n  };\n}\n\nexport function CustomCodeSection() {\n  const values = useAppearanceEditorValues();\n  const form = useForm<FormValue>({\n    defaultValues: {\n      appearance: {\n        custom_code: {\n          css: values.appearance.custom_code.css,\n          html: values.appearance.custom_code.html,\n        },\n      },\n    },\n  });\n  return (\n    <AppearanceEditorForm\n      form={form}\n      breadcrumb={\n        <AppearanceEditorBreadcrumb>\n          <Trans message=\"Custom code\" />\n        </AppearanceEditorBreadcrumb>\n      }\n    >\n      <CustomCodeDialogTrigger mode=\"css\" />\n      <CustomCodeDialogTrigger mode=\"html\" />\n    </AppearanceEditorForm>\n  );\n}\n\ninterface CustomCodeDialogTriggerProps {\n  mode: 'html' | 'css';\n}\nfunction CustomCodeDialogTrigger({mode}: CustomCodeDialogTriggerProps) {\n  const {getValues} = useFormContext<AppearanceEditorValues>();\n  const {setValue} = useFormContext<AppearanceEditorValues>();\n\n  const title =\n    mode === 'html' ? (\n      <Trans message=\"Custom HTML & JavaScript\" />\n    ) : (\n      <Trans message=\"Custom CSS\" />\n    );\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={newValue => {\n        if (newValue != null) {\n          setValue(`appearance.custom_code.${mode}`, newValue, {\n            shouldDirty: true,\n          });\n          appearanceState().preview.setCustomCode(mode, newValue);\n        }\n      }}\n    >\n      <AppearanceButton>{title}</AppearanceButton>\n      <AceDialog\n        title={title}\n        defaultValue={getValues(`appearance.custom_code.${mode}`) || ''}\n        mode={mode}\n      />\n    </DialogTrigger>\n  );\n}\n","export default \"__VITE_ASSET__8acde003__\"","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {USER_MODEL} from '@ui/types/user';\nimport {SiteConfigContextValue} from '@common/core/settings/site-config-context';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const CustomPageDatatableFilters = (\n  config: SiteConfigContextValue,\n): BackendFilter[] => {\n  const dynamicFilters: BackendFilter[] =\n    config.customPages.types.length > 1\n      ? [\n          {\n            control: {\n              type: FilterControlType.Select,\n              defaultValue: 'default',\n              options: config.customPages.types.map(type => ({\n                value: type.type,\n                label: type.label,\n                key: type.type,\n              })),\n            },\n\n            key: 'type',\n            label: message('Type'),\n            description: message('Type of the page'),\n            defaultOperator: FilterOperator.eq,\n          },\n        ]\n      : [];\n\n  return [\n    {\n      key: 'user_id',\n      label: message('User'),\n      description: message('User page was created by'),\n      defaultOperator: FilterOperator.eq,\n      control: {\n        type: FilterControlType.SelectModel,\n        model: USER_MODEL,\n      },\n    },\n    ...dynamicFilters,\n    createdAtFilter({\n      description: message('Date page was created'),\n    }),\n    updatedAtFilter({\n      description: message('Date page was last updated'),\n    }),\n  ];\n};\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {CustomPage} from '@common/admin/custom-pages/custom-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {Link} from 'react-router-dom';\nimport {LinkStyle} from '@ui/buttons/external-link';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport React from 'react';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\n\nexport const CustomPageDatatableColumns: ColumnConfig<CustomPage>[] = [\n  {\n    key: 'slug',\n    allowsSorting: true,\n    width: 'flex-2 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Slug\" />,\n    body: page => (\n      <Link target=\"_blank\" to={`/pages/${page.slug}`} className={LinkStyle}>\n        {page.slug}\n      </Link>\n    ),\n  },\n  {\n    key: 'user_id',\n    allowsSorting: true,\n    width: 'flex-2 min-w-140',\n    header: () => <Trans message=\"Owner\" />,\n    body: page =>\n      page.user && (\n        <NameWithAvatar\n          image={page.user.image}\n          label={page.user.name}\n          description={page.user.email}\n        />\n      ),\n  },\n  {\n    key: 'type',\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Type\" />,\n    body: page => <Trans message={page.type} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: page => <FormattedDate date={page.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-84 flex-shrink-0',\n    visibleInMode: 'all',\n    body: page => (\n      <IconButton\n        size=\"md\"\n        className=\"text-muted\"\n        elementType={Link}\n        to={`${page.id}/edit`}\n      >\n        <EditIcon />\n      </IconButton>\n    ),\n  },\n];\n","import React, {useContext, useMemo} from 'react';\nimport {Link} from 'react-router-dom';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport articlesSvg from './articles.svg';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport {CustomPageDatatableFilters} from './custom-page-datatable-filters';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {CustomPageDatatableColumns} from '@common/admin/custom-pages/custom-page-datatable-columns';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\n\nexport function CustomPageDatablePage() {\n  const config = useContext(SiteConfigContext);\n  const filters = useMemo(() => {\n    return CustomPageDatatableFilters(config);\n  }, [config]);\n\n  return (\n    <DataTablePage\n      endpoint=\"custom-pages\"\n      title={<Trans message=\"Custom pages\" />}\n      filters={filters}\n      columns={CustomPageDatatableColumns}\n      queryParams={{with: 'user'}}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={articlesSvg}\n          title={<Trans message=\"No pages have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching pages\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <DataTableAddItemButton elementType={Link} to=\"new\">\n      <Trans message=\"New page\" />\n    </DataTableAddItemButton>\n  );\n}\n","import {SettingsNavItem} from '@common/admin/settings/settings-nav-config';\nimport {message} from '@ui/i18n/message';\n\nexport const AppSettingsNavConfig: SettingsNavItem[] = [\n  {\n    label: message('Local search'),\n    to: 'search',\n  },\n  {\n    label: message('Automation'),\n    to: 'providers',\n  },\n  {\n    label: message('Player'),\n    to: 'player',\n  },\n];\n","import {AppSettingsNavConfig} from '@app/admin/settings/app-settings-nav-config';\nimport {message} from '@ui/i18n/message';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\n\nexport interface SettingsNavItem {\n  label: MessageDescriptor;\n  to: string;\n  position?: number;\n}\n\nconst filteredSettingsNavConfig: (SettingsNavItem | false)[] = [\n  {label: message('General'), to: 'general', position: 1},\n  ...AppSettingsNavConfig,\n  getBootstrapData().settings.billing.integrated && {\n    label: message('Subscriptions'),\n    to: 'subscriptions',\n    position: 2,\n  },\n  {label: message('Localization'), to: 'localization', position: 3},\n  {\n    label: message('Authentication'),\n    to: 'authentication',\n    position: 4,\n  },\n  {label: message('Uploading'), to: 'uploading', position: 5},\n  {label: message('Outgoing email'), to: 'outgoing-email', position: 6},\n  {label: message('Cache'), to: 'cache', position: 7},\n  {label: message('Analytics'), to: 'analytics', position: 8},\n  {label: message('Logging'), to: 'logging', position: 9},\n  {label: message('Queue'), to: 'queue', position: 10},\n  {label: message('Recaptcha'), to: 'recaptcha', position: 11},\n  {label: message('GDPR'), to: 'gdpr', position: 12},\n  {\n    label: message('Menus'),\n    to: '/admin/appearance/menus',\n    position: 13,\n  },\n  {\n    label: message('Seo'),\n    to: '/admin/appearance/seo-settings',\n    position: 14,\n  },\n  {\n    label: message('Themes'),\n    to: '/admin/appearance/themes',\n    position: 15,\n  },\n].filter(Boolean);\n\nexport const SettingsNavConfig = filteredSettingsNavConfig as SettingsNavItem[];\n","import clsx from 'clsx';\nimport {NavLink, Outlet, useLocation, useNavigate} from 'react-router-dom';\nimport {SettingsNavConfig, SettingsNavItem} from './settings-nav-config';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {Option, Select} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {StaticPageTitle} from '../../seo/static-page-title';\nimport {useMemo} from 'react';\n\ninterface Props {\n  className?: string;\n  navConfig?: SettingsNavItem[];\n}\nexport function AdminSettingsPage({\n  className,\n  navConfig: propsNavConfig,\n}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n\n  const navConfig = useMemo(() => {\n    const config = propsNavConfig ?? SettingsNavConfig;\n    return config.sort((a, b) => (a.position ?? 0) - (b.position ?? 0));\n  }, [propsNavConfig]);\n\n  return (\n    <div\n      className={clsx(\n        className,\n        'container mx-auto min-h-full items-start gap-30 p-24 md:flex',\n      )}\n    >\n      <StaticPageTitle>\n        <Trans message=\"Settings\" />\n      </StaticPageTitle>\n      {isMobile ? (\n        <MobileNav navConfig={navConfig} />\n      ) : (\n        <DesktopNav navConfig={navConfig} />\n      )}\n      <div className=\"relative max-w-500 flex-auto md:px-30\">\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n\ninterface NavProps {\n  navConfig: SettingsNavItem[];\n}\nfunction MobileNav({navConfig}: NavProps) {\n  const {pathname} = useLocation();\n  const navigate = useNavigate();\n  const value = pathname.split('/').pop();\n\n  return (\n    <Select\n      minWidth=\"min-w-none\"\n      className=\"mb-24 w-full bg\"\n      selectionMode=\"single\"\n      selectedValue={value}\n      onSelectionChange={newPage => {\n        navigate(newPage as string, {state: {prevPath: pathname}});\n      }}\n    >\n      {navConfig.map(item => (\n        <Option key={item.to as string} value={item.to}>\n          <Trans {...item.label} />\n        </Option>\n      ))}\n    </Select>\n  );\n}\n\nfunction DesktopNav({navConfig}: NavProps) {\n  const {pathname} = useLocation();\n  return (\n    <div className=\"sticky top-24 w-240 flex-shrink-0\">\n      {navConfig.map(item => (\n        <NavLink\n          key={item.to as string}\n          to={item.to}\n          state={{prevPath: pathname}}\n          className={({isActive}) =>\n            clsx(\n              'mb-8 block whitespace-nowrap rounded-button p-14 text-sm transition-bg-color',\n              isActive\n                ? 'bg-primary/6 font-semibold text-primary'\n                : 'hover:bg-hover',\n            )\n          }\n        >\n          <Trans {...item.label} />\n        </NavLink>\n      ))}\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport function useGenerateSitemap() {\n  return useMutation({\n    mutationFn: () => generate(),\n    onSuccess: () => {\n      toast(message('Sitemap generated'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction generate(): Promise<Response> {\n  return apiClient.post('sitemap/generate').then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {FetchAdminSettingsResponse} from '@common/admin/settings/requests/use-admin-settings';\nimport {message} from '@ui/i18n/message';\n\nexport interface AdminSettingsWithFiles {\n  files?: Record<string, File>;\n  client?: Partial<AdminSettings['client']>;\n  server?: Partial<AdminSettings['server']>;\n}\n\nexport function useUpdateAdminSettings(\n  form: UseFormReturn<AdminSettingsWithFiles>,\n) {\n  return useMutation({\n    mutationFn: (props: AdminSettingsWithFiles) => {\n      // todo: test these after refactor\n      // if ((props.client as any)?.artistPage?.tabs) {\n      //   (props.client as any).artistPage.tabs = JSON.stringify(\n      //     (props.client as any).artistPage.tabs,\n      //   ) as any;\n      // }\n      // if ((props.client as any)?.title_page?.sections) {\n      //   (props.client as any).title_page.sections = JSON.stringify(\n      //     (props.client as any).title_page.sections,\n      //   ) as any;\n      // }\n      // if ((props.client as any)?.publish?.default_credentials) {\n      //   (props.client as any).publish.default_credentials = JSON.stringify(\n      //     (props.client as any).publish.default_credentials,\n      //   ) as any;\n      // }\n\n      return updateAdminSettings(props);\n    },\n    onSuccess: response => {\n      toast(message('Settings updated'), {\n        position: 'bottom-right',\n      });\n      return queryClient.setQueryData(['fetchAdminSettings'], response);\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction updateAdminSettings({client, server, files}: AdminSettingsWithFiles) {\n  const formData = new FormData();\n  if (client) {\n    formData.set('client', JSON.stringify(client));\n  }\n  if (server) {\n    formData.set('server', JSON.stringify(server));\n  }\n  Object.entries(files || {}).forEach(([key, file]) => {\n    formData.set(key, file);\n  });\n  return apiClient\n    .post<FetchAdminSettingsResponse>('settings', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n    .then(r => r.data);\n}\n","export function SettingsSeparator() {\n  return <div className=\"bg-divider-lighter my-30 h-1\" />;\n}\n","import React from 'react';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\nimport {m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\n\nexport function SettingsFormLoadingIndicator() {\n  return (\n    <m.div className=\"text-sm\" {...opacityAnimation}>\n      <div>\n        <Skeleton className=\"mb-4 max-w-140\" />\n        <Skeleton variant=\"rect\" size=\"h-42 w-full\" />\n        <div className=\"mt-10 flex items-center gap-8\">\n          <Skeleton variant=\"rect\" size=\"h-20 w-20\" />\n          <Skeleton className=\"max-w-64 text-xs\" />\n        </div>\n      </div>\n      <SettingsSeparator />\n      <div>\n        <Skeleton className=\"mb-4 max-w-140\" />\n        <Skeleton variant=\"rect\" size=\"h-42 w-full\" />\n        <Skeleton className=\"mt-10 max-w-4/5 text-xs\" />\n      </div>\n      <SettingsSeparator />\n      <div>\n        <Skeleton className=\"mb-4 max-w-140\" />\n        <Skeleton variant=\"rect\" size=\"h-42 w-full\" />\n        <Skeleton className=\"mt-10 max-w-[90%] text-xs\" />\n      </div>\n      <div>\n        <div className=\"mt-20 flex items-center gap-12\">\n          <Skeleton variant=\"rect\" size=\"h-20 w-40\" radius=\"rounded-full\" />\n          <Skeleton className=\"max-w-140\" />\n        </div>\n        <Skeleton className=\"mt-10 max-w-240 text-xs\" />\n      </div>\n      <SettingsSeparator />\n      <div>\n        <Skeleton variant=\"rect\" size=\"h-30 w-132\" radius=\"rounded-button\" />\n        <div className=\"mt-14\">\n          <Skeleton className=\"max-w-240\" />\n          <Skeleton className=\"max-w-384\" />\n        </div>\n      </div>\n      <div className=\"mt-40\">\n        <Skeleton variant=\"rect\" size=\"h-36 w-132\" radius=\"rounded-button\" />\n      </div>\n    </m.div>\n  );\n}\n","import {FieldErrors, UseFormReturn, useFormState} from 'react-hook-form';\nimport {Fragment, ReactNode} from 'react';\nimport {Form} from '@ui/forms/form';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {useUpdateAdminSettings} from '@common/admin/settings/requests/use-update-admin-settings';\nimport {BlockerDialog} from '@ui/overlays/dialog/blocker-dialog';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {useAdminSettings} from '@common/admin/settings/requests/use-admin-settings';\nimport {SettingsFormLoadingIndicator} from '@common/admin/settings/form/settings-form-loading-indicator';\n\ninterface Props {\n  form: UseFormReturn<any>;\n  children: ReactNode;\n}\nexport function AdminSettingsForm({children, form}: Props) {\n  const updateSettings = useUpdateAdminSettings(form);\n  const {isDirty} = useFormState({control: form.control});\n\n  return (\n    <m.section key=\"settings-form\" {...opacityAnimation}>\n      <Form\n        form={form}\n        onBeforeSubmit={() => {\n          // clear group errors, because hook form won't automatically\n          // clear errors that are not bound to a specific form field\n          const errors = form.formState.errors as FieldErrors<object>;\n          const keys = Object.keys(errors).filter(key => {\n            return key.endsWith('_group');\n          });\n          form.clearErrors(keys as any);\n        }}\n        onSubmit={values => {\n          updateSettings.mutate(values, {onSuccess: () => form.reset(values)});\n        }}\n      >\n        {children}\n        <div className=\"mt-40\">\n          <Button\n            type=\"submit\"\n            variant=\"flat\"\n            color=\"primary\"\n            startIcon={\n              updateSettings.isPending ? (\n                <ProgressCircle size=\"xs\" isIndeterminate />\n              ) : null\n            }\n            disabled={updateSettings.isPending || !isDirty}\n          >\n            <Trans message=\"Save changes\" />\n          </Button>\n        </div>\n      </Form>\n      <BlockerDialog isBlocked={isDirty} />\n    </m.section>\n  );\n}\n\ninterface AdminSettingsPageHeaderProps {\n  children: (data: AdminSettings) => ReactNode;\n  title: ReactNode;\n  description: ReactNode;\n  headerMargin?: string;\n  // this will be used if settings page needs to load some additional data before showing\n  isLoading?: boolean;\n}\nexport function AdminSettingsLayout({\n  title,\n  description,\n  headerMargin = 'mb-40',\n  children,\n  isLoading,\n}: AdminSettingsPageHeaderProps) {\n  const {data} = useAdminSettings();\n  return (\n    <Fragment>\n      <div className={headerMargin}>\n        <h2 className=\"mb-4 text-xl\">{title}</h2>\n        <div className=\"text-sm text-muted\">{description}</div>\n      </div>\n      <AnimatePresence initial={false} mode=\"wait\">\n        {data && !isLoading ? (\n          children(data)\n        ) : (\n          <SettingsFormLoadingIndicator key=\"settings-skeleton\" />\n        )}\n      </AnimatePresence>\n    </Fragment>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const LinkIcon = createSvgIcon(\n  <path d=\"M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5zm-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-2zm-3-4h8v2H8z\" />\n, 'LinkOutlined');\n","import clsx from 'clsx';\nimport {LinkIcon} from '@ui/icons/material/Link';\nimport {ExternalLink} from '@ui/buttons/external-link';\nimport {Trans} from '@ui/i18n/trans';\nimport {useSettings} from '@ui/settings/use-settings';\n\ninterface LearnMoreLinkProps {\n  link: string;\n  className?: string;\n}\nexport function LearnMoreLink({link, className}: LearnMoreLinkProps) {\n  const {site} = useSettings();\n  if (site.hide_docs_button) {\n    return null;\n  }\n  return (\n    <div className={clsx('flex items-center gap-8', className)}>\n      <LinkIcon size=\"sm\" />\n      <ExternalLink href={link}>\n        <Trans message=\"Learn more\" />\n      </ExternalLink>\n    </div>\n  );\n}\n","import {useAdminSettings} from '../requests/use-admin-settings';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {Button} from '@ui/buttons/button';\nimport {ExternalLink} from '@ui/buttons/external-link';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {Fragment, useContext} from 'react';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {useValueLists} from '@common/http/value-lists';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {AdminSettingsWithFiles} from '@common/admin/settings/requests/use-update-admin-settings';\nimport {useGenerateSitemap} from '@common/admin/settings/requests/use-generate-sitemap';\nimport {useBootstrapDataStore} from '@ui/bootstrap-data/bootstrap-data-store';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\n\nexport function GeneralSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"General\" />}\n      description={\n        <Trans message=\"Configure site url, homepage, theme and other general settings.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        homepage: {\n          type: data.client.homepage?.type ?? 'landingPage',\n          value: data.client.homepage?.value ?? '',\n        },\n        themes: {\n          default_id: data.client.themes?.default_id\n            ? parseInt(data.client.themes.default_id as string)\n            : 0,\n          user_change: data.client.themes?.user_change ?? false,\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <SiteUrlSection />\n      <SettingsSeparator />\n      <HomepageSection />\n      <SettingsSeparator />\n      <ThemeSection />\n      <SettingsSeparator />\n      <SitemapSection />\n    </AdminSettingsForm>\n  );\n}\n\nfunction SiteUrlSection() {\n  const {data} = useAdminSettings();\n\n  if (!data) return null;\n\n  let append = null;\n  const server = data!.server;\n  const isInvalid = server.newAppUrl && server.newAppUrl !== server.app_url;\n  if (isInvalid) {\n    append = (\n      <div className=\"mt-20 text-sm text-danger\">\n        <Trans\n          values={{\n            baseUrl: server.app_url,\n            currentUrl: server.newAppUrl,\n            b: chunks => <b>{chunks}</b>,\n          }}\n          message=\"Base site url is set as <b>:baseUrl</b> in configuration, but current url is <b>:currentUrl</b>. It is recommended to set the primary url you want to use in configuration file and then redirect all other url versions to this primary version via cpanel or .htaccess file.\"\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <TextField\n        readOnly\n        invalid={!!isInvalid}\n        value={server.app_url}\n        label={<Trans message=\"Primary site url\" />}\n        description={\n          <LearnMoreLink link=\"https://marina.moda\" />\n        }\n      />\n      {append}\n    </Fragment>\n  );\n}\n\nfunction HomepageSection() {\n  const {watch} = useFormContext<AdminSettingsWithFiles>();\n  const {homepage} = useContext(SiteConfigContext);\n  const {data} = useValueLists(['menuItemCategories']);\n  const selectedType = watch('client.homepage.type');\n\n  return (\n    <div>\n      <FormSelect\n        name=\"client.homepage.type\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Site home page\" />}\n        description={\n          <Trans message=\"Which page should be used as site homepage.\" />\n        }\n      >\n        {homepage.options.map(option => (\n          <Option key={option.value} value={option.value}>\n            <Trans {...option.label} />\n          </Option>\n        ))}\n        {data?.menuItemCategories?.map(category => (\n          <Option key={category.type} value={category.type}>\n            {category.name}\n          </Option>\n        ))}\n      </FormSelect>\n      {data?.menuItemCategories?.map(category => {\n        return selectedType === category.type ? (\n          <FormSelect\n            className=\"mt-24\"\n            name=\"client.homepage.value\"\n            key={category.name}\n            selectionMode=\"single\"\n            label={\n              <Trans message=\"Homepage :name\" values={{name: category.name}} />\n            }\n          >\n            {category.items.map(item => (\n              <Option key={item.label} value={`${item.model_id}`}>\n                {item.label}\n              </Option>\n            ))}\n          </FormSelect>\n        ) : null;\n      })}\n    </div>\n  );\n}\n\nfunction ThemeSection() {\n  const themes = useBootstrapDataStore(s => s.data.themes);\n  return (\n    <Fragment>\n      <FormSelect\n        className=\"mb-20\"\n        name=\"client.themes.default_id\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Default site theme\" />}\n        description={\n          <Trans message=\"Which theme to use for users that have not chosen a theme manually.\" />\n        }\n      >\n        <Option value={0}>\n          <Trans message=\"System\" />\n        </Option>\n        {themes.map(theme => (\n          <Option key={theme.id} value={theme.id}>\n            {theme.name}\n          </Option>\n        ))}\n      </FormSelect>\n      <FormSwitch\n        name=\"client.themes.user_change\"\n        description={\n          <Trans message=\"Allow users to manually change site theme.\" />\n        }\n      >\n        <Trans message=\"Allow theme change\" />\n      </FormSwitch>\n    </Fragment>\n  );\n}\n\nfunction SitemapSection() {\n  const generateSitemap = useGenerateSitemap();\n  const {base_url} = useSettings();\n\n  const url = `${base_url}/storage/sitemaps/sitemap-index.xml`;\n  const link = <ExternalLink href={url}>{url}</ExternalLink>;\n\n  return (\n    <>\n      <Button\n        variant=\"outline\"\n        size=\"xs\"\n        color=\"primary\"\n        disabled={generateSitemap.isPending}\n        onClick={() => {\n          generateSitemap.mutate();\n        }}\n      >\n        <Trans message=\"Generate sitemap\" />\n      </Button>\n      <div className=\"mt-14 text-sm text-muted\">\n        <Trans\n          message=\"Once generated, sitemap url will be: :url\"\n          values={{\n            url: link,\n          }}\n        />\n      </div>\n    </>\n  );\n}\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const ColorIcon = createSvgIcon(\n  <path\n    stroke=\"#E0E0E0\"\n    d=\"M24,44c-7.168,0-13-5.816-13-12.971C11,24,24,4,24,4s13,20,13,27.029C37,38.184,31.168,44,24,44z\"\n  />,\n);\n","import {parseColor} from '@react-stately/color';\n\nexport function colorToThemeValue(color: string): string {\n  return parseColor(color)\n    .toString('rgb')\n    .replace('rgb(', '')\n    .replace(')', '')\n    .replace(/, ?/g, ' ');\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const TuneIcon = createSvgIcon(\n  <path d=\"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\" />\n, 'TuneOutlined');\n","import {useForm, useFormContext} from 'react-hook-form';\nimport {useEffect} from 'react';\nimport {TuneIcon} from '@ui/icons/material/Tune';\nimport {Button} from '@ui/buttons/button';\nimport {CssTheme} from '@ui/themes/css-theme';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {AppearanceEditorValues} from '../../appearance-store';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\nimport {Form} from '@ui/forms/form';\nimport {useParams} from 'react-router-dom';\n\nexport function ThemeSettingsDialogTrigger() {\n  const {getValues, setValue} = useFormContext<AppearanceEditorValues>();\n  const {themeIndex} = useParams();\n  const theme = getValues(`appearance.themes.${+themeIndex!}`);\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={(value?: CssTheme) => {\n        if (!value) return;\n\n        getValues('appearance.themes').forEach((currentTheme, index) => {\n          // update changed theme\n          if (currentTheme.id === value.id) {\n            setValue(`appearance.themes.${index}`, value, {\n              shouldDirty: true,\n            });\n            return;\n          }\n\n          // unset \"default_light\" and \"default_dark\" on other themes\n          if (value.default_light) {\n            setValue(\n              `appearance.themes.${index}`,\n              {...currentTheme, default_light: false},\n              {shouldDirty: true},\n            );\n            return;\n          }\n          if (value.default_dark) {\n            setValue(\n              `appearance.themes.${index}`,\n              {...currentTheme, default_dark: false},\n              {shouldDirty: true},\n            );\n            return;\n          }\n        });\n      }}\n    >\n      <Button\n        size=\"xs\"\n        variant=\"outline\"\n        color=\"primary\"\n        startIcon={<TuneIcon />}\n      >\n        <Trans message=\"Settings\" />\n      </Button>\n      <SettingsDialog theme={theme} />\n    </DialogTrigger>\n  );\n}\n\ninterface SettingsDialogProps {\n  theme: CssTheme;\n}\nfunction SettingsDialog({theme}: SettingsDialogProps) {\n  const form = useForm<CssTheme>({defaultValues: theme});\n  const {close, formId} = useDialogContext();\n\n  useEffect(() => {\n    const subscription = form.watch((value, {name}) => {\n      // theme can only be set as either light or dark default\n      if (name === 'default_light' && value.default_light) {\n        form.setValue('default_dark', false);\n      }\n      if (name === 'default_dark' && value.default_dark) {\n        form.setValue('default_light', false);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [form]);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Update settings\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            close(values);\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-30\"\n            autoFocus\n          />\n          <FormSwitch\n            name=\"is_dark\"\n            className=\"mb-20 border-b pb-20\"\n            description={\n              <Trans message=\"Whether this theme has light text on dark background.\" />\n            }\n          >\n            <Trans message=\"Dark theme\" />\n          </FormSwitch>\n          <FormSwitch\n            name=\"default_light\"\n            className=\"mb-30\"\n            description={\n              <Trans message=\"When light mode is selected, this theme will be used.\" />\n            }\n          >\n            <Trans message=\"Default for light mode\" />\n          </FormSwitch>\n          <FormSwitch\n            name=\"default_dark\"\n            description={\n              <Trans message=\"When dark mode is selected, this theme will be used.\" />\n            }\n          >\n            <Trans message=\"Default for dark mode\" />\n          </FormSwitch>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={!form.formState.isDirty}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const RestartAltIcon = createSvgIcon(\n  <path d=\"M6 13c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91zm14 0c0-4.42-3.58-8-8-8-.06 0-.12.01-.18.01l1.09-1.09L11.5 2.5 8 6l3.5 3.5 1.41-1.41-1.08-1.08c.06 0 .12-.01.17-.01 3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93z\" />\n, 'RestartAltOutlined');\n","import {Fragment, useState} from 'react';\nimport {DeleteIcon} from '@ui/icons/material/Delete';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\nimport {RestartAltIcon} from '@ui/icons/material/RestartAlt';\nimport {AppearanceEditorValues, appearanceState} from '../../appearance-store';\nimport {toast} from '@ui/toast/toast';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {message} from '@ui/i18n/message';\nimport {Trans} from '@ui/i18n/trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {useFormContext} from 'react-hook-form';\nimport {useParams} from 'react-router-dom';\n\nexport function ThemeMoreOptionsButton() {\n  const navigate = useNavigate();\n  const {themeIndex} = useParams();\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\n  const {setValue, getValues} = useFormContext<AppearanceEditorValues>();\n\n  const deleteTheme = () => {\n    if (getValues('appearance.themes').length <= 1) {\n      toast.danger(message('At least one theme is required'));\n      return;\n    }\n    if (themeIndex) {\n      navigate('..', {relative: 'path', replace: true});\n      setValue(\n        'appearance.themes',\n        getValues('appearance.themes').filter((_, i) => i !== +themeIndex),\n        {shouldDirty: true},\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <MenuTrigger\n        onItemSelected={key => {\n          if (key === 'delete') {\n            setConfirmDialogOpen(true);\n          } else if (key === 'reset') {\n            const path =\n              `appearance.themes.${+themeIndex!}` as 'appearance.themes.0';\n            const defaultColors = getValues(`${path}.is_dark`)\n              ? appearanceState().defaults!.appearance.themes.dark\n              : appearanceState().defaults!.appearance.themes.light;\n\n            Object.entries(defaultColors).forEach(([colorName, themeValue]) => {\n              appearanceState().preview.setThemeValue(colorName, themeValue);\n            });\n            appearanceState().preview.setThemeFont(null);\n\n            setValue(`${path}.values`, defaultColors, {\n              shouldDirty: true,\n            });\n            setValue(`${path}.font`, undefined, {\n              shouldDirty: true,\n            });\n          }\n        }}\n      >\n        <IconButton size=\"md\" className=\"text-muted\">\n          <MoreVertIcon />\n        </IconButton>\n        <Menu>\n          <MenuItem value=\"reset\" startIcon={<RestartAltIcon />}>\n            <Trans message=\"Reset colors\" />\n          </MenuItem>\n          <MenuItem value=\"delete\" startIcon={<DeleteIcon />}>\n            <Trans message=\"Delete\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={confirmDialogOpen}\n        onClose={isConfirmed => {\n          if (isConfirmed) {\n            deleteTheme();\n          }\n          setConfirmDialogOpen(false);\n        }}\n      >\n        <ConfirmationDialog\n          isDanger\n          title={<Trans message=\"Delete theme\" />}\n          body={<Trans message=\"Are you sure you want to delete this theme?\" />}\n          confirm={<Trans message=\"Delete\" />}\n        />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import e,{useRef as r,useMemo as t,useEffect as n,useState as o,useCallback as a,useLayoutEffect as l}from\"react\";function u(){return(u=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function c(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r.indexOf(t=a[n])>=0||(o[t]=e[t]);return o}function i(e){var t=r(e),n=r(function(e){t.current&&t.current(e)});return t.current=e,n.current}var s=function(e,r,t){return void 0===r&&(r=0),void 0===t&&(t=1),e>t?t:e<r?r:e},f=function(e){return\"touches\"in e},v=function(e){return e&&e.ownerDocument.defaultView||self},d=function(e,r,t){var n=e.getBoundingClientRect(),o=f(r)?function(e,r){for(var t=0;t<e.length;t++)if(e[t].identifier===r)return e[t];return e[0]}(r.touches,t):r;return{left:s((o.pageX-(n.left+v(e).pageXOffset))/n.width),top:s((o.pageY-(n.top+v(e).pageYOffset))/n.height)}},h=function(e){!f(e)&&e.preventDefault()},m=e.memo(function(o){var a=o.onMove,l=o.onKey,s=c(o,[\"onMove\",\"onKey\"]),m=r(null),g=i(a),p=i(l),b=r(null),_=r(!1),x=t(function(){var e=function(e){h(e),(f(e)?e.touches.length>0:e.buttons>0)&&m.current?g(d(m.current,e,b.current)):t(!1)},r=function(){return t(!1)};function t(t){var n=_.current,o=v(m.current),a=t?o.addEventListener:o.removeEventListener;a(n?\"touchmove\":\"mousemove\",e),a(n?\"touchend\":\"mouseup\",r)}return[function(e){var r=e.nativeEvent,n=m.current;if(n&&(h(r),!function(e,r){return r&&!f(e)}(r,_.current)&&n)){if(f(r)){_.current=!0;var o=r.changedTouches||[];o.length&&(b.current=o[0].identifier)}n.focus(),g(d(n,r,b.current)),t(!0)}},function(e){var r=e.which||e.keyCode;r<37||r>40||(e.preventDefault(),p({left:39===r?.05:37===r?-.05:0,top:40===r?.05:38===r?-.05:0}))},t]},[p,g]),C=x[0],E=x[1],H=x[2];return n(function(){return H},[H]),e.createElement(\"div\",u({},s,{onTouchStart:C,onMouseDown:C,className:\"react-colorful__interactive\",ref:m,onKeyDown:E,tabIndex:0,role:\"slider\"}))}),g=function(e){return e.filter(Boolean).join(\" \")},p=function(r){var t=r.color,n=r.left,o=r.top,a=void 0===o?.5:o,l=g([\"react-colorful__pointer\",r.className]);return e.createElement(\"div\",{className:l,style:{top:100*a+\"%\",left:100*n+\"%\"}},e.createElement(\"div\",{className:\"react-colorful__pointer-fill\",style:{backgroundColor:t}}))},b=function(e,r,t){return void 0===r&&(r=0),void 0===t&&(t=Math.pow(10,r)),Math.round(t*e)/t},_={grad:.9,turn:360,rad:360/(2*Math.PI)},x=function(e){return L(C(e))},C=function(e){return\"#\"===e[0]&&(e=e.substring(1)),e.length<6?{r:parseInt(e[0]+e[0],16),g:parseInt(e[1]+e[1],16),b:parseInt(e[2]+e[2],16),a:4===e.length?b(parseInt(e[3]+e[3],16)/255,2):1}:{r:parseInt(e.substring(0,2),16),g:parseInt(e.substring(2,4),16),b:parseInt(e.substring(4,6),16),a:8===e.length?b(parseInt(e.substring(6,8),16)/255,2):1}},E=function(e,r){return void 0===r&&(r=\"deg\"),Number(e)*(_[r]||1)},H=function(e){var r=/hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i.exec(e);return r?N({h:E(r[1],r[2]),s:Number(r[3]),l:Number(r[4]),a:void 0===r[5]?1:Number(r[5])/(r[6]?100:1)}):{h:0,s:0,v:0,a:1}},M=H,N=function(e){var r=e.s,t=e.l;return{h:e.h,s:(r*=(t<50?t:100-t)/100)>0?2*r/(t+r)*100:0,v:t+r,a:e.a}},w=function(e){return K(I(e))},y=function(e){var r=e.s,t=e.v,n=e.a,o=(200-r)*t/100;return{h:b(e.h),s:b(o>0&&o<200?r*t/100/(o<=100?o:200-o)*100:0),l:b(o/2),a:b(n,2)}},q=function(e){var r=y(e);return\"hsl(\"+r.h+\", \"+r.s+\"%, \"+r.l+\"%)\"},k=function(e){var r=y(e);return\"hsla(\"+r.h+\", \"+r.s+\"%, \"+r.l+\"%, \"+r.a+\")\"},I=function(e){var r=e.h,t=e.s,n=e.v,o=e.a;r=r/360*6,t/=100,n/=100;var a=Math.floor(r),l=n*(1-t),u=n*(1-(r-a)*t),c=n*(1-(1-r+a)*t),i=a%6;return{r:b(255*[n,u,l,l,c,n][i]),g:b(255*[c,n,n,u,l,l][i]),b:b(255*[l,l,c,n,n,u][i]),a:b(o,2)}},O=function(e){var r=/hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i.exec(e);return r?A({h:E(r[1],r[2]),s:Number(r[3]),v:Number(r[4]),a:void 0===r[5]?1:Number(r[5])/(r[6]?100:1)}):{h:0,s:0,v:0,a:1}},j=O,z=function(e){var r=/rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i.exec(e);return r?L({r:Number(r[1])/(r[2]?100/255:1),g:Number(r[3])/(r[4]?100/255:1),b:Number(r[5])/(r[6]?100/255:1),a:void 0===r[7]?1:Number(r[7])/(r[8]?100:1)}):{h:0,s:0,v:0,a:1}},B=z,D=function(e){var r=e.toString(16);return r.length<2?\"0\"+r:r},K=function(e){var r=e.r,t=e.g,n=e.b,o=e.a,a=o<1?D(b(255*o)):\"\";return\"#\"+D(r)+D(t)+D(n)+a},L=function(e){var r=e.r,t=e.g,n=e.b,o=e.a,a=Math.max(r,t,n),l=a-Math.min(r,t,n),u=l?a===r?(t-n)/l:a===t?2+(n-r)/l:4+(r-t)/l:0;return{h:b(60*(u<0?u+6:u)),s:b(a?l/a*100:0),v:b(a/255*100),a:o}},A=function(e){return{h:b(e.h),s:b(e.s),v:b(e.v),a:b(e.a,2)}},S=e.memo(function(r){var t=r.hue,n=r.onChange,o=g([\"react-colorful__hue\",r.className]);return e.createElement(\"div\",{className:o},e.createElement(m,{onMove:function(e){n({h:360*e.left})},onKey:function(e){n({h:s(t+360*e.left,0,360)})},\"aria-label\":\"Hue\",\"aria-valuenow\":b(t),\"aria-valuemax\":\"360\",\"aria-valuemin\":\"0\"},e.createElement(p,{className:\"react-colorful__hue-pointer\",left:t/360,color:q({h:t,s:100,v:100,a:1})})))}),T=e.memo(function(r){var t=r.hsva,n=r.onChange,o={backgroundColor:q({h:t.h,s:100,v:100,a:1})};return e.createElement(\"div\",{className:\"react-colorful__saturation\",style:o},e.createElement(m,{onMove:function(e){n({s:100*e.left,v:100-100*e.top})},onKey:function(e){n({s:s(t.s+100*e.left,0,100),v:s(t.v-100*e.top,0,100)})},\"aria-label\":\"Color\",\"aria-valuetext\":\"Saturation \"+b(t.s)+\"%, Brightness \"+b(t.v)+\"%\"},e.createElement(p,{className:\"react-colorful__saturation-pointer\",top:1-t.v/100,left:t.s/100,color:q(t)})))}),F=function(e,r){if(e===r)return!0;for(var t in e)if(e[t]!==r[t])return!1;return!0},P=function(e,r){return e.replace(/\\s/g,\"\")===r.replace(/\\s/g,\"\")},X=function(e,r){return e.toLowerCase()===r.toLowerCase()||F(C(e),C(r))};function Y(e,t,l){var u=i(l),c=o(function(){return e.toHsva(t)}),s=c[0],f=c[1],v=r({color:t,hsva:s});n(function(){if(!e.equal(t,v.current.color)){var r=e.toHsva(t);v.current={hsva:r,color:t},f(r)}},[t,e]),n(function(){var r;F(s,v.current.hsva)||e.equal(r=e.fromHsva(s),v.current.color)||(v.current={hsva:s,color:r},u(r))},[s,e,u]);var d=a(function(e){f(function(r){return Object.assign({},r,e)})},[]);return[s,d]}var R,V=\"undefined\"!=typeof window?l:n,$=function(){return R||(\"undefined\"!=typeof __webpack_nonce__?__webpack_nonce__:void 0)},G=function(e){R=e},J=new Map,Q=function(e){V(function(){var r=e.current?e.current.ownerDocument:document;if(void 0!==r&&!J.has(r)){var t=r.createElement(\"style\");t.innerHTML='.react-colorful{position:relative;display:flex;flex-direction:column;width:200px;height:200px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.react-colorful__saturation{position:relative;flex-grow:1;border-color:transparent;border-bottom:12px solid #000;border-radius:8px 8px 0 0;background-image:linear-gradient(0deg,#000,transparent),linear-gradient(90deg,#fff,hsla(0,0%,100%,0))}.react-colorful__alpha-gradient,.react-colorful__pointer-fill{content:\"\";position:absolute;left:0;top:0;right:0;bottom:0;pointer-events:none;border-radius:inherit}.react-colorful__alpha-gradient,.react-colorful__saturation{box-shadow:inset 0 0 0 1px rgba(0,0,0,.05)}.react-colorful__alpha,.react-colorful__hue{position:relative;height:24px}.react-colorful__hue{background:linear-gradient(90deg,red 0,#ff0 17%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,red)}.react-colorful__last-control{border-radius:0 0 8px 8px}.react-colorful__interactive{position:absolute;left:0;top:0;right:0;bottom:0;border-radius:inherit;outline:none;touch-action:none}.react-colorful__pointer{position:absolute;z-index:1;box-sizing:border-box;width:28px;height:28px;transform:translate(-50%,-50%);background-color:#fff;border:2px solid #fff;border-radius:50%;box-shadow:0 2px 4px rgba(0,0,0,.2)}.react-colorful__interactive:focus .react-colorful__pointer{transform:translate(-50%,-50%) scale(1.1)}.react-colorful__alpha,.react-colorful__alpha-pointer{background-color:#fff;background-image:url(\\'data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill-opacity=\".05\"><path d=\"M8 0h8v8H8zM0 8h8v8H0z\"/></svg>\\')}.react-colorful__saturation-pointer{z-index:3}.react-colorful__hue-pointer{z-index:2}',J.set(r,t);var n=$();n&&t.setAttribute(\"nonce\",n),r.head.appendChild(t)}},[])},U=function(t){var n=t.className,o=t.colorModel,a=t.color,l=void 0===a?o.defaultColor:a,i=t.onChange,s=c(t,[\"className\",\"colorModel\",\"color\",\"onChange\"]),f=r(null);Q(f);var v=Y(o,l,i),d=v[0],h=v[1],m=g([\"react-colorful\",n]);return e.createElement(\"div\",u({},s,{ref:f,className:m}),e.createElement(T,{hsva:d,onChange:h}),e.createElement(S,{hue:d.h,onChange:h,className:\"react-colorful__last-control\"}))},W={defaultColor:\"000\",toHsva:x,fromHsva:function(e){return w({h:e.h,s:e.s,v:e.v,a:1})},equal:X},Z=function(r){return e.createElement(U,u({},r,{colorModel:W}))},ee=function(r){var t=r.className,n=r.hsva,o=r.onChange,a={backgroundImage:\"linear-gradient(90deg, \"+k(Object.assign({},n,{a:0}))+\", \"+k(Object.assign({},n,{a:1}))+\")\"},l=g([\"react-colorful__alpha\",t]),u=b(100*n.a);return e.createElement(\"div\",{className:l},e.createElement(\"div\",{className:\"react-colorful__alpha-gradient\",style:a}),e.createElement(m,{onMove:function(e){o({a:e.left})},onKey:function(e){o({a:s(n.a+e.left)})},\"aria-label\":\"Alpha\",\"aria-valuetext\":u+\"%\",\"aria-valuenow\":u,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\"},e.createElement(p,{className:\"react-colorful__alpha-pointer\",left:n.a,color:k(n)})))},re=function(t){var n=t.className,o=t.colorModel,a=t.color,l=void 0===a?o.defaultColor:a,i=t.onChange,s=c(t,[\"className\",\"colorModel\",\"color\",\"onChange\"]),f=r(null);Q(f);var v=Y(o,l,i),d=v[0],h=v[1],m=g([\"react-colorful\",n]);return e.createElement(\"div\",u({},s,{ref:f,className:m}),e.createElement(T,{hsva:d,onChange:h}),e.createElement(S,{hue:d.h,onChange:h}),e.createElement(ee,{hsva:d,onChange:h,className:\"react-colorful__last-control\"}))},te={defaultColor:\"0001\",toHsva:x,fromHsva:w,equal:X},ne=function(r){return e.createElement(re,u({},r,{colorModel:te}))},oe={defaultColor:{h:0,s:0,l:0,a:1},toHsva:N,fromHsva:y,equal:F},ae=function(r){return e.createElement(re,u({},r,{colorModel:oe}))},le={defaultColor:\"hsla(0, 0%, 0%, 1)\",toHsva:H,fromHsva:k,equal:P},ue=function(r){return e.createElement(re,u({},r,{colorModel:le}))},ce={defaultColor:{h:0,s:0,l:0},toHsva:function(e){return N({h:e.h,s:e.s,l:e.l,a:1})},fromHsva:function(e){return{h:(r=y(e)).h,s:r.s,l:r.l};var r},equal:F},ie=function(r){return e.createElement(U,u({},r,{colorModel:ce}))},se={defaultColor:\"hsl(0, 0%, 0%)\",toHsva:M,fromHsva:q,equal:P},fe=function(r){return e.createElement(U,u({},r,{colorModel:se}))},ve={defaultColor:{h:0,s:0,v:0,a:1},toHsva:function(e){return e},fromHsva:A,equal:F},de=function(r){return e.createElement(re,u({},r,{colorModel:ve}))},he={defaultColor:\"hsva(0, 0%, 0%, 1)\",toHsva:O,fromHsva:function(e){var r=A(e);return\"hsva(\"+r.h+\", \"+r.s+\"%, \"+r.v+\"%, \"+r.a+\")\"},equal:P},me=function(r){return e.createElement(re,u({},r,{colorModel:he}))},ge={defaultColor:{h:0,s:0,v:0},toHsva:function(e){return{h:e.h,s:e.s,v:e.v,a:1}},fromHsva:function(e){var r=A(e);return{h:r.h,s:r.s,v:r.v}},equal:F},pe=function(r){return e.createElement(U,u({},r,{colorModel:ge}))},be={defaultColor:\"hsv(0, 0%, 0%)\",toHsva:j,fromHsva:function(e){var r=A(e);return\"hsv(\"+r.h+\", \"+r.s+\"%, \"+r.v+\"%)\"},equal:P},_e=function(r){return e.createElement(U,u({},r,{colorModel:be}))},xe={defaultColor:{r:0,g:0,b:0,a:1},toHsva:L,fromHsva:I,equal:F},Ce=function(r){return e.createElement(re,u({},r,{colorModel:xe}))},Ee={defaultColor:\"rgba(0, 0, 0, 1)\",toHsva:z,fromHsva:function(e){var r=I(e);return\"rgba(\"+r.r+\", \"+r.g+\", \"+r.b+\", \"+r.a+\")\"},equal:P},He=function(r){return e.createElement(re,u({},r,{colorModel:Ee}))},Me={defaultColor:{r:0,g:0,b:0},toHsva:function(e){return L({r:e.r,g:e.g,b:e.b,a:1})},fromHsva:function(e){return{r:(r=I(e)).r,g:r.g,b:r.b};var r},equal:F},Ne=function(r){return e.createElement(U,u({},r,{colorModel:Me}))},we={defaultColor:\"rgb(0, 0, 0)\",toHsva:B,fromHsva:function(e){var r=I(e);return\"rgb(\"+r.r+\", \"+r.g+\", \"+r.b+\")\"},equal:P},ye=function(r){return e.createElement(U,u({},r,{colorModel:we}))},qe=/^#?([0-9A-F]{3,8})$/i,ke=function(r){var t=r.color,l=void 0===t?\"\":t,s=r.onChange,f=r.onBlur,v=r.escape,d=r.validate,h=r.format,m=r.process,g=c(r,[\"color\",\"onChange\",\"onBlur\",\"escape\",\"validate\",\"format\",\"process\"]),p=o(function(){return v(l)}),b=p[0],_=p[1],x=i(s),C=i(f),E=a(function(e){var r=v(e.target.value);_(r),d(r)&&x(m?m(r):r)},[v,m,d,x]),H=a(function(e){d(e.target.value)||_(v(l)),C(e)},[l,v,d,C]);return n(function(){_(v(l))},[l,v]),e.createElement(\"input\",u({},g,{value:h?h(b):b,spellCheck:\"false\",onChange:E,onBlur:H}))},Ie=function(e){return\"#\"+e},Oe=function(r){var t=r.prefixed,n=r.alpha,o=c(r,[\"prefixed\",\"alpha\"]),l=a(function(e){return e.replace(/([^0-9A-F]+)/gi,\"\").substring(0,n?8:6)},[n]),i=a(function(e){return function(e,r){var t=qe.exec(e),n=t?t[1].length:0;return 3===n||6===n||!!r&&4===n||!!r&&8===n}(e,n)},[n]);return e.createElement(ke,u({},o,{escape:l,format:t?Ie:void 0,process:Ie,validate:i}))};export{ne as HexAlphaColorPicker,Oe as HexColorInput,Z as HexColorPicker,ie as HslColorPicker,fe as HslStringColorPicker,ae as HslaColorPicker,ue as HslaStringColorPicker,pe as HsvColorPicker,_e as HsvStringColorPicker,de as HsvaColorPicker,me as HsvaStringColorPicker,Ne as RgbColorPicker,ye as RgbStringColorPicker,Ce as RgbaColorPicker,He as RgbaStringColorPicker,G as setNonce};\n//# sourceMappingURL=index.module.js.map\n","import {message} from '@ui/i18n/message';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\n\nexport const ColorPresets: {\n  color: string;\n  name: MessageDescriptor;\n  foreground?: string;\n}[] = [\n  {\n    color: 'rgb(255, 255, 255)',\n    name: message('White'),\n  },\n  {\n    color: 'rgb(239,245,245)',\n    name: message('Solitude'),\n  },\n  {\n    color: 'rgb(245,213,174)',\n    name: message('Wheat'),\n  },\n  {\n    color: 'rgb(253,227,167)',\n    name: message('Cape Honey'),\n  },\n  {\n    color: 'rgb(242,222,186)',\n    name: message('Milk punch'),\n  },\n  {\n    color: 'rgb(97,118,75)',\n    name: message('Dingy'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(4, 147, 114)',\n    name: message('Aquamarine'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(222,245,229)',\n    name: message('Cosmic Latte'),\n  },\n  {\n    color: 'rgb(233,119,119)',\n    name: message('Geraldine'),\n    foreground: 'rgb(90,14,14)',\n  },\n  {\n    color: 'rgb(247,164,164)',\n    name: message('Sundown'),\n  },\n  {\n    color: 'rgb(30,139,195)',\n    name: message('Pelorous'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(142,68,173)',\n    name: message('Deep Lilac'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(108,74,182)',\n    name: message('Blue marguerite'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(139,126,116)',\n    name: message('Americano'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(0,0,0)',\n    name: message('Black'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(64,66,88)',\n    name: message('Blue zodiac'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n  {\n    color: 'rgb(101,100,124)',\n    name: message('Comet'),\n    foreground: 'rgb(255, 255, 255)',\n  },\n];\n","import React from 'react';\nimport clsx from 'clsx';\nimport {ButtonBase} from '@ui/buttons/button-base';\n\ntype Props = {\n  onChange?: (e: string) => void;\n  value?: string;\n  colors: string[];\n};\nexport function ColorSwatch({onChange, value, colors}: Props) {\n  const presetButtons = colors.map(color => {\n    const isSelected = value === color;\n    return (\n      <ButtonBase\n        key={color}\n        onClick={() => {\n          onChange?.(color);\n        }}\n        className={clsx(\n          'relative block flex-shrink-0 w-26 h-26 border rounded',\n          isSelected && 'shadow-md'\n        )}\n        style={{backgroundColor: color}}\n      >\n        {isSelected && (\n          <span className=\"absolute inset-0 m-auto rounded-full w-8 h-8 bg-white\" />\n        )}\n      </ButtonBase>\n    );\n  });\n\n  return <div className=\"flex flex-wrap gap-6\">{presetButtons}</div>;\n}\n","import {HexColorInput, HexColorPicker} from 'react-colorful';\nimport React, {useState} from 'react';\nimport {parseColor} from '@react-stately/color';\nimport {ColorPresets} from '@ui/color-picker/color-presets';\nimport {getInputFieldClassNames} from '@ui/forms/input-field/get-input-field-class-names';\nimport {ColorSwatch} from '@ui/color-picker/color-swatch';\n\nconst DefaultPresets = ColorPresets.map(({color}) => color).slice(0, 14);\n\ntype Props = {\n  defaultValue?: string;\n  onChange?: (e: string) => void;\n  colorPresets?: string[];\n  showInput?: boolean;\n};\nexport function ColorPicker({\n  defaultValue,\n  onChange,\n  colorPresets,\n  showInput,\n}: Props) {\n  const [color, setColor] = useState<string | undefined>(defaultValue);\n\n  const presets: string[] = colorPresets || DefaultPresets;\n\n  const style = getInputFieldClassNames({size: 'sm'});\n\n  return (\n    <div>\n      <HexColorPicker\n        className=\"!w-auto\"\n        color={color}\n        onChange={newColor => {\n          onChange?.(newColor);\n          setColor(newColor);\n        }}\n      />\n      <div className=\"px-12 py-20\">\n        {presets && (\n          <ColorSwatch\n            colors={presets}\n            onChange={newColor => {\n              if (newColor) {\n                const hex = parseColor(newColor).toString('hex');\n                onChange?.(hex);\n                setColor(hex);\n              }\n            }}\n            value={color}\n          />\n        )}\n        {showInput && (\n          <div className=\"pt-20\">\n            <HexColorInput\n              autoComplete=\"off\"\n              role=\"textbox\"\n              autoCorrect=\"off\"\n              spellCheck=\"false\"\n              required\n              aria-label=\"Hex color\"\n              prefixed\n              className={style.input}\n              color={color}\n              onChange={newColor => {\n                onChange?.(newColor);\n                setColor(newColor);\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import {ColorPicker} from './color-picker';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {Trans} from '@ui/i18n/trans';\n\ninterface ColorPickerDialogProps {\n  hideFooter?: boolean;\n  showInput?: boolean;\n}\nexport function ColorPickerDialog({\n  hideFooter = false,\n  showInput = true,\n}: ColorPickerDialogProps) {\n  const {close, value, setValue, initialValue} = useDialogContext<\n    string | null\n  >();\n  // todo: remove this once pixie and bedrive are refactored to use dialogTrigger currentValue (use \"currentValue\" for defaultValue as well)\n  //const initialValue = useRef(defaultValue);\n\n  return (\n    <Dialog size=\"2xs\">\n      <ColorPicker\n        showInput={showInput}\n        defaultValue={initialValue ? initialValue : ''}\n        onChange={newValue => setValue(newValue)}\n      />\n      {!hideFooter && (\n        <DialogFooter dividerTop>\n          <Button variant=\"text\" size=\"xs\" onClick={() => close()}>\n            <Trans message=\"Cancel\" />\n          </Button>\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"xs\"\n            onClick={() => close(value)}\n          >\n            <Trans message=\"Apply\" />\n          </Button>\n        </DialogFooter>\n      )}\n    </Dialog>\n  );\n}\n","import {message} from '@ui/i18n/message';\nimport {useParams} from 'react-router-dom';\nimport {useFormContext} from 'react-hook-form';\nimport {AppearanceEditorValues} from '@common/admin/appearance/appearance-store';\nimport {Menu, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\nimport clsx from 'clsx';\nimport {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\n\nconst navbarColorMap = [\n  {\n    label: message('Accent'),\n    value: 'primary',\n    bgColor: 'bg-primary',\n    previewBgColor: 'text-primary',\n  },\n  {\n    label: message('Background'),\n    value: 'bg',\n    bgColor: 'bg-background',\n    previewBgColor: 'text-background',\n  },\n  {\n    label: message('Background alt'),\n    value: 'bg-alt',\n    bgColor: 'bg-alt',\n    previewBgColor: 'text-background-alt',\n  },\n  {\n    label: message('Transparent'),\n    value: 'transparent',\n    bgColor: 'bg-transparent',\n    previewBgColor: 'text-transparent',\n  },\n];\n\nexport function NavbarColorPicker() {\n  const {themeIndex} = useParams();\n  const {watch, setValue} = useFormContext<AppearanceEditorValues>();\n  const key =\n    `appearance.themes.${themeIndex!}.values.--be-navbar-color` as 'appearance.themes.1.values.--be-navbar-color';\n  const selectedValue = watch(key);\n  const previewColor = navbarColorMap.find(({value}) => value === selectedValue)\n    ?.previewBgColor;\n  return (\n    <MenuTrigger\n      placement=\"right\"\n      selectionMode=\"single\"\n      selectedValue={selectedValue}\n      onSelectionChange={value => {\n        setValue(key, value as string, {shouldDirty: true});\n      }}\n    >\n      <AppearanceButton\n        startIcon={\n          <ColorIcon\n            viewBox=\"0 0 48 48\"\n            className={clsx('icon-lg', previewColor)}\n          />\n        }\n      >\n        <Trans message=\"Navbar\" />\n      </AppearanceButton>\n      <Menu>\n        {navbarColorMap.map(({label, value, bgColor}) => (\n          <Item\n            key={value}\n            value={value}\n            startIcon={\n              <div className={clsx('h-20 w-20 rounded border', bgColor)} />\n            }\n          >\n            <Trans {...label} />\n          </Item>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface Props {\n  children: ReactNode;\n  marginTop?: string;\n}\nexport function AppearanceSectionTitle({children, marginTop = 'mt-22'}: Props) {\n  return (\n    <div className={clsx('mb-6 text-sm font-semibold', marginTop)}>\n      {children}\n    </div>\n  );\n}\n","import {Link, useNavigate, useParams} from 'react-router-dom';\nimport {Fragment, ReactNode, useEffect, useState} from 'react';\nimport {\n  AppearanceEditorValues,\n  appearanceState,\n  previewAppIsLoaded,\n} from '@common/admin/appearance/appearance-store';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\nimport {CssTheme} from '@ui/themes/css-theme';\nimport {colorToThemeValue} from '@ui/themes/utils/color-to-theme-value';\nimport {ThemeSettingsDialogTrigger} from '@common/admin/appearance/sections/themes/theme-settings-dialog-trigger';\nimport {ThemeMoreOptionsButton} from '@common/admin/appearance/sections/themes/theme-more-options-button';\nimport {ColorPickerDialog} from '@ui/color-picker/color-picker-dialog';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {useFormContext} from 'react-hook-form';\nimport {Trans} from '@ui/i18n/trans';\nimport {NavbarColorPicker} from '@common/admin/appearance/sections/themes/navbar-color-picker';\nimport {message} from '@ui/i18n/message';\nimport {themeValueToHex} from '@ui/themes/utils/theme-value-to-hex';\nimport {AppearanceSectionTitle} from '@common/admin/appearance/appearance-section-title';\n\nconst colorList = [\n  {\n    label: message('Background'),\n    key: '--be-background',\n  },\n  {\n    label: message('Background alt'),\n    key: '--be-background-alt',\n  },\n  {\n    label: message('Foreground'),\n    key: '--be-foreground-base',\n  },\n  {\n    label: message('Accent light'),\n    key: '--be-primary-light',\n  },\n  {\n    label: message('Accent'),\n    key: '--be-primary',\n  },\n  {\n    label: message('Accent dark'),\n    key: '--be-primary-dark',\n  },\n  {\n    label: message('Text on accent'),\n    key: '--be-on-primary',\n  },\n  {\n    label: message('Chip'),\n    key: '--be-background-chip',\n  },\n];\n\nexport function ThemeEditor() {\n  const navigate = useNavigate();\n  const {themeIndex} = useParams();\n  const {getValues, watch} = useFormContext<AppearanceEditorValues>();\n\n  const theme = getValues(`appearance.themes.${+themeIndex!}`);\n  const selectedFont = watch(`appearance.themes.${+themeIndex!}.font.family`);\n\n  // go to theme list, if theme can't be found\n  useEffect(() => {\n    if (!theme) {\n      navigate('..', {relative: 'path', replace: true});\n    }\n  }, [navigate, theme]);\n\n  // set this theme as active in preview iframe\n  useEffect(() => {\n    let isAborted = false;\n    if (theme?.id) {\n      previewAppIsLoaded.then(() => {\n        if (isAborted) return;\n        appearanceState().preview.setActiveTheme(theme.id);\n      });\n    }\n    return () => {\n      isAborted = true;\n      appearanceState().preview.setActiveTheme(null);\n    };\n  }, [theme?.id]);\n\n  if (!theme) return null;\n\n  return (\n    <Fragment>\n      <div className=\"mb-20 flex items-center justify-between gap-10\">\n        <ThemeSettingsDialogTrigger />\n        <ThemeMoreOptionsButton />\n      </div>\n      <div>\n        <AppearanceButton\n          elementType={Link}\n          to=\"font\"\n          description={selectedFont ? selectedFont : <Trans message=\"System\" />}\n        >\n          <Trans message=\"Font\" />\n        </AppearanceButton>\n        <AppearanceButton elementType={Link} to=\"radius\">\n          <Trans message=\"Rounding\" />\n        </AppearanceButton>\n        <AppearanceSectionTitle>\n          <Trans message=\"Colors\" />\n        </AppearanceSectionTitle>\n        <NavbarColorPicker />\n        {colorList.map(color => (\n          <ColorPickerTrigger\n            key={color.key}\n            colorName={color.key}\n            label={<Trans {...color.label} />}\n            initialThemeValue={theme.values[color.key]}\n            theme={theme}\n          />\n        ))}\n      </div>\n    </Fragment>\n  );\n}\n\ninterface ColorPickerTriggerProps {\n  label: ReactNode;\n  theme: CssTheme;\n  colorName: string;\n  initialThemeValue: string;\n}\nfunction ColorPickerTrigger({\n  label,\n  theme,\n  colorName,\n  initialThemeValue,\n}: ColorPickerTriggerProps) {\n  const {setValue} = useFormContext<AppearanceEditorValues>();\n  const {themeIndex} = useParams();\n  const [selectedThemeValue, setSelectedThemeValue] =\n    useState<string>(initialThemeValue);\n\n  // set color as css variable in preview and on button preview, but not in appearance values\n  // this way color change can be canceled when color picker is closed and applied explicitly via apply button\n  const selectThemeValue = (themeValue: string) => {\n    setSelectedThemeValue(themeValue);\n    appearanceState().preview.setThemeValue(colorName, themeValue);\n  };\n\n  useEffect(() => {\n    // need to update the color here so changes via \"reset colors\" button are reflected\n    setSelectedThemeValue(initialThemeValue);\n  }, [initialThemeValue]);\n\n  return (\n    <DialogTrigger\n      value={themeValueToHex(selectedThemeValue)}\n      type=\"popover\"\n      placement=\"right\"\n      offset={10}\n      onValueChange={newColor => {\n        selectThemeValue(colorToThemeValue(newColor));\n      }}\n      onClose={(newColor, {valueChanged, initialValue}) => {\n        if (newColor && valueChanged) {\n          setValue(\n            `appearance.themes.${+themeIndex!}.values.${colorName}`,\n            colorToThemeValue(newColor),\n            {shouldDirty: true},\n          );\n        } else {\n          // reset to initial value, if apply button was not clicked\n          selectThemeValue(initialValue);\n        }\n      }}\n    >\n      <AppearanceButton\n        className=\"capitalize\"\n        startIcon={\n          <ColorIcon\n            viewBox=\"0 0 48 48\"\n            className=\"icon-lg\"\n            style={{fill: `rgb(${selectedThemeValue})`}}\n          />\n        }\n      >\n        {label}\n      </AppearanceButton>\n      <ColorPickerDialog />\n    </DialogTrigger>\n  );\n}\n","import {ReactNode, useEffect, useRef} from 'react';\nimport {useFormContext} from 'react-hook-form';\nimport clsx from 'clsx';\n\ninterface Props {\n  children: (isInvalid: boolean) => ReactNode;\n  name: string;\n  separatorBottom?: boolean;\n  separatorTop?: boolean;\n}\nexport function SettingsErrorGroup({\n  children,\n  name,\n  separatorBottom = true,\n  separatorTop = true,\n}: Props) {\n  const {\n    formState: {errors},\n  } = useFormContext<Record<string, string>>();\n\n  const ref = useRef<HTMLDivElement>(null);\n  const error = errors[name];\n\n  useEffect(() => {\n    if (error) {\n      ref.current?.scrollIntoView({behavior: 'smooth'});\n    }\n  }, [error]);\n\n  return (\n    <div\n      className={clsx(\n        separatorBottom && 'border-b mb-20 pb-20',\n        separatorTop && 'border-t mt-20 pt-20',\n        error && 'border-y-error'\n      )}\n      ref={ref}\n    >\n      {children(!!error)}\n      {error && (\n        <div\n          className=\"text-danger text-sm mt-20\"\n          dangerouslySetInnerHTML={{__html: error.message!}}\n        />\n      )}\n    </div>\n  );\n}\n","import {useController} from 'react-hook-form';\nimport React, {useMemo} from 'react';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  ChipField,\n  ChipValue,\n} from '@ui/forms/input-field/chip-field/chip-field';\nimport {FormChipFieldProps} from '@ui/forms/input-field/chip-field/form-chip-field';\n\nexport function JsonChipField({children, ...props}: FormChipFieldProps<any>) {\n  const {\n    field: {onChange, onBlur, value = [], ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const arrayValue = useMemo(() => {\n    const mixedValue = value as string | string[];\n    return typeof mixedValue === 'string' ? JSON.parse(mixedValue) : mixedValue;\n  }, [value]);\n\n  const formProps: Partial<FormChipFieldProps<ChipValue>> = {\n    onChange,\n    onBlur,\n    value: arrayValue,\n    invalid,\n    errorMessage: error?.message,\n  };\n\n  return (\n    <ChipField valueKey=\"name\" ref={ref} {...mergeProps(formProps, props)} />\n  );\n}\n","import {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {Trans} from '@ui/i18n/trans';\nimport {Tabs} from '@ui/tabs/tabs';\nimport {TabList} from '@ui/tabs/tab-list';\nimport {Tab} from '@ui/tabs/tab';\nimport {TabPanel, TabPanels} from '@ui/tabs/tab-panels';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport React, {Fragment} from 'react';\nimport {JsonChipField} from '@common/admin/settings/form/json-chip-field';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\n\nexport function SubscriptionSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Subscriptions\" />}\n      description={\n        <Trans message=\"Configure gateway integration, accepted cards, invoices and other related settings.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const {trans} = useTrans();\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        billing: {\n          enable: data.client.billing?.enable ?? false,\n          accepted_cards: data.client.billing?.accepted_cards ?? [],\n          paypal_test_mode: data.client.billing?.paypal_test_mode ?? false,\n          paypal: {\n            enable: data.client.billing?.paypal?.enable ?? false,\n          },\n          stripe: {\n            enable: data.client.billing?.stripe?.enable ?? false,\n          },\n          invoice: {\n            address: data.client.billing?.invoice?.address ?? '',\n            notes: data.client.billing?.invoice?.notes ?? '',\n          },\n        },\n      },\n      server: {\n        paypal_client_id: data.server?.paypal_client_id ?? '',\n        paypal_secret: data.server?.paypal_secret ?? '',\n        paypal_webhook_id: data.server?.paypal_webhook_id ?? '',\n        stripe_key: data.server?.stripe_key ?? '',\n        stripe_secret: data.server?.stripe_secret ?? '',\n        stripe_webhook_secret: data.server?.stripe_webhook_secret ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <Tabs>\n        <TabList>\n          <Tab>\n            <Trans message=\"General\" />\n          </Tab>\n          <Tab>\n            <Trans message=\"Invoices\" />\n          </Tab>\n        </TabList>\n        <TabPanels className=\"pt-30\">\n          <TabPanel>\n            <FormSwitch\n              name=\"client.billing.enable\"\n              description={\n                <Trans message=\"Enable or disable all subscription related functionality across the site.\" />\n              }\n            >\n              <Trans message=\"Enable subscriptions\" />\n            </FormSwitch>\n            <SettingsSeparator />\n            <PaypalSection />\n            <StripeSection />\n            <SettingsSeparator />\n            <JsonChipField\n              label={<Trans message=\"Accepted cards\" />}\n              name=\"client.billing.accepted_cards\"\n              placeholder={trans({message: 'Add new card...'})}\n            />\n          </TabPanel>\n          <TabPanel>\n            <FormTextField\n              inputElementType=\"textarea\"\n              rows={5}\n              label={<Trans message=\"Invoice address\" />}\n              name=\"client.billing.invoice.address\"\n              className=\"mb-30\"\n            />\n            <FormTextField\n              inputElementType=\"textarea\"\n              rows={5}\n              label={<Trans message=\"Invoice notes\" />}\n              description={\n                <Trans message=\"Default notes to show under `notes` section of user invoice. Optional.\" />\n              }\n              name=\"client.billing.invoice.notes\"\n            />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </AdminSettingsForm>\n  );\n}\n\nfunction PaypalSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const paypalIsEnabled = watch('client.billing.paypal.enable');\n  return (\n    <div className=\"mb-30\">\n      <FormSwitch\n        name=\"client.billing.paypal.enable\"\n        description={\n          <div>\n            <Trans message=\"Enable PayPal payment gateway integration.\" />\n            <LearnMoreLink\n              className=\"mt-6\"\n              link=\"https://marina.moda\"\n            />\n          </div>\n        }\n      >\n        <Trans message=\"PayPal gateway\" />\n      </FormSwitch>\n      {paypalIsEnabled ? (\n        <SettingsErrorGroup name=\"paypal_group\">\n          {isInvalid => (\n            <Fragment>\n              <FormTextField\n                name=\"server.paypal_client_id\"\n                label={<Trans message=\"PayPal Client ID\" />}\n                required\n                invalid={isInvalid}\n                className=\"mb-20\"\n              />\n              <FormTextField\n                name=\"server.paypal_secret\"\n                label={<Trans message=\"PayPal Secret\" />}\n                required\n                invalid={isInvalid}\n                className=\"mb-20\"\n              />\n              <FormTextField\n                name=\"server.paypal_webhook_id\"\n                label={<Trans message=\"PayPal Webhook ID\" />}\n                required\n                invalid={isInvalid}\n                className=\"mb-20\"\n              />\n              <FormSwitch\n                name=\"client.billing.paypal_test_mode\"\n                invalid={isInvalid}\n                description={\n                  <div>\n                    <Trans message=\"Allows testing PayPal payments with sandbox accounts.\" />\n                  </div>\n                }\n              >\n                <Trans message=\"PayPal test mode\" />\n              </FormSwitch>\n            </Fragment>\n          )}\n        </SettingsErrorGroup>\n      ) : null}\n    </div>\n  );\n}\n\nfunction StripeSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const stripeEnabled = watch('client.billing.stripe.enable');\n  return (\n    <Fragment>\n      <FormSwitch\n        name=\"client.billing.stripe.enable\"\n        description={\n          <div>\n            <Trans message=\"Enable Stripe payment gateway integration.\" />\n            <LearnMoreLink\n              className=\"mt-6\"\n              link=\"https://marina.moda\"\n            />\n          </div>\n        }\n      >\n        <Trans message=\"Stripe gateway\" />\n      </FormSwitch>\n      {stripeEnabled ? (\n        <SettingsErrorGroup name=\"stripe_group\" separatorBottom={false}>\n          {isInvalid => (\n            <Fragment>\n              <FormTextField\n                name=\"server.stripe_key\"\n                label={<Trans message=\"Stripe publishable key\" />}\n                required\n                className=\"mb-20\"\n                invalid={isInvalid}\n              />\n              <FormTextField\n                name=\"server.stripe_secret\"\n                label={<Trans message=\"Stripe secret key\" />}\n                required\n                className=\"mb-20\"\n                invalid={isInvalid}\n              />\n              <FormTextField\n                name=\"server.stripe_webhook_secret\"\n                label={<Trans message=\"Stripe webhook signing secret\" />}\n                className=\"mb-20\"\n                invalid={isInvalid}\n              />\n            </Fragment>\n          )}\n        </SettingsErrorGroup>\n      ) : null}\n    </Fragment>\n  );\n}\n","import {FormSelect, Option} from '@ui/forms/select/select';\nimport {FetchValueListsResponse, useValueLists} from '@common/http/value-lists';\nimport {Section} from '@ui/forms/listbox/section';\nimport {FormRadio} from '@ui/forms/radio-group/radio';\nimport {FormRadioGroup} from '@ui/forms/radio-group/radio-group';\nimport {DateFormatPresets, FormattedDate} from '@ui/i18n/formatted-date';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {Trans} from '@ui/i18n/trans';\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport React from 'react';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {useForm} from 'react-hook-form';\n\nexport function LocalizationSettings() {\n  const optionQuery = useValueLists(['timezones', 'localizations']);\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Localization\" />}\n      description={\n        <Trans message=\"Configure global date, time and language settings.\" />\n      }\n      isLoading={optionQuery.isLoading}\n    >\n      {data => (\n        <Form\n          data={data}\n          timezones={optionQuery.data!.timezones}\n          localizations={optionQuery.data!.localizations}\n        />\n      )}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n  timezones: FetchValueListsResponse['timezones'];\n  localizations: FetchValueListsResponse['localizations'];\n}\nfunction Form({data, timezones, localizations}: FormProps) {\n  const today = useCurrentDateTime();\n  const {trans} = useTrans();\n\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        dates: {\n          default_timezone: data.client.dates.default_timezone ?? 'auto',\n          format: data.client.dates.format ?? 'auto',\n        },\n        locale: {\n          default: data.client.locale?.default ?? 'auto',\n        },\n        i18n: {\n          enable: data.client.i18n.enable ?? true,\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <FormSelect\n        className=\"mb-30\"\n        required\n        name=\"client.dates.default_timezone\"\n        showSearchField\n        selectionMode=\"single\"\n        label={<Trans message=\"Default timezone\" />}\n        searchPlaceholder={trans(message('Search timezones'))}\n        description={\n          <Trans message=\"Which timezone should be selected by default for new users and guests.\" />\n        }\n      >\n        <Option key=\"auto\" value=\"auto\">\n          <Trans message=\"Auto\" />\n        </Option>\n        {Object.entries(timezones!).map(([groupName, timezones]) => (\n          <Section key={groupName} label={groupName}>\n            {timezones.map(timezone => (\n              <Option key={timezone.value} value={timezone.value}>\n                {timezone.text}\n              </Option>\n            ))}\n          </Section>\n        ))}\n      </FormSelect>\n      <FormSelect\n        name=\"client.locale.default\"\n        className=\"mb-30\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Default language\" />}\n        description={\n          <Trans message=\"Which localization should be selected by default for new users and guests.\" />\n        }\n      >\n        <Option key=\"auto\" value=\"auto\">\n          <Trans message=\"Auto\" />\n        </Option>\n        {localizations!.map(locale => (\n          <Option key={locale.language} value={locale.language} capitalizeFirst>\n            {locale.name}\n          </Option>\n        ))}\n      </FormSelect>\n      <FormRadioGroup\n        required\n        className=\"mb-30\"\n        size=\"sm\"\n        name=\"client.dates.format\"\n        orientation=\"vertical\"\n        label={<Trans message=\"Date verbosity\" />}\n        description={\n          <Trans message=\"Default verbosity for all dates displayed across the site. Month/day order and separators will be adjusted automatically, based on user's locale.\" />\n        }\n      >\n        <FormRadio key=\"auto\" value=\"auto\">\n          <Trans message=\"Auto\" />\n        </FormRadio>\n        {Object.entries(DateFormatPresets).map(([format, options]) => (\n          <FormRadio key={format} value={format}>\n            <FormattedDate date={today} options={options} />\n          </FormRadio>\n        ))}\n      </FormRadioGroup>\n      <FormSwitch\n        name=\"client.i18n.enable\"\n        description={\n          <Trans message=\"If disabled, site will always be shown in default language and user will not be able to change their locale.\" />\n        }\n      >\n        <Trans message=\"Enable translations\" />\n      </FormSwitch>\n    </AdminSettingsForm>\n  );\n}\n","import {useForm, useFormContext} from 'react-hook-form';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {Button} from '@ui/buttons/button';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\n\nexport function AuthenticationSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Authentication\" />}\n      description={\n        <Trans message=\"Configure registration, social login and related 3rd party integrations.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        require_email_confirmation:\n          data.client?.require_email_confirmation ?? false,\n        registration: {\n          disable: data.client.registration?.disable ?? false,\n        },\n        social: {\n          requireAccount: data.client.social?.requireAccount ?? false,\n          compact_buttons: data.client.social?.compact_buttons ?? false,\n          envato: {\n            enable: data.client.social?.envato?.enable ?? false,\n          },\n          google: {\n            enable: data.client.social?.google?.enable ?? false,\n          },\n          facebook: {\n            enable: data.client.social?.facebook?.enable ?? false,\n          },\n          twitter: {\n            enable: data.client.social?.twitter?.enable ?? false,\n          },\n        },\n        single_device_login: data.client.single_device_login ?? false,\n        auth: {\n          domain_blacklist: data.client.auth?.domain_blacklist ?? '',\n        },\n      },\n      server: {\n        envato_id: data.server?.envato_id ?? '',\n        envato_secret: data.server?.envato_secret ?? '',\n        envato_personal_token: data.server?.envato_personal_token ?? '',\n        google_id: data.server?.google_id ?? '',\n        google_secret: data.server?.google_secret ?? '',\n        facebook_id: data.server?.facebook_id ?? '',\n        facebook_secret: data.server?.facebook_secret ?? '',\n        twitter_id: data.server?.twitter_id ?? '',\n        twitter_secret: data.server?.twitter_secret ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <EmailConfirmationSection />\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.registration.disable\"\n        description={\n          <Trans message=\"All registration related functionality will be disabled and hidden from users.\" />\n        }\n      >\n        <Trans message=\"Disable registration\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.social.requireAccount\"\n        description={\n          <Trans message=\"If enabled, user will only be able to login via particular social site, if they have connected it from their account settings page.\" />\n        }\n      >\n        <Trans message=\"Social login requires existing account\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.single_device_login\"\n        description={\n          <Trans message=\"Only allow one device to be logged into user account at the same time.\" />\n        }\n      >\n        <Trans message=\"Single device login\" />\n      </FormSwitch>\n      <FormSwitch\n        name=\"client.social.compact_buttons\"\n        description={\n          <Trans message=\"Use compact design for social login buttons.\" />\n        }\n      >\n        <Trans message=\"Compact buttons\" />\n      </FormSwitch>\n      <EnvatoSection />\n      <GoogleSection />\n      <FacebookSection />\n      <TwitterSection />\n      <SettingsSeparator />\n      <FormTextField\n        inputElementType=\"textarea\"\n        rows={3}\n        className=\"mt-24\"\n        name=\"client.auth.domain_blacklist\"\n        label={<Trans message=\"Domain blacklist\" />}\n        description={\n          <Trans message=\"Comma separated list of domains. Users will not be able to register or login using any email adress from specified domains.\" />\n        }\n      />\n    </AdminSettingsForm>\n  );\n}\n\nexport function MailNotSetupWarning() {\n  const {watch} = useFormContext<AdminSettings>();\n  const mailSetup = watch('server.mail_setup');\n  if (mailSetup) return null;\n\n  return (\n    <p className=\"mt-10 rounded-panel border p-10 text-sm text-danger\">\n      <Trans\n        message=\"Outgoing mail method needs to be setup before enabling this setting. <a>Fix now</a>\"\n        values={{\n          a: text => (\n            <Button\n              elementType={Link}\n              variant=\"outline\"\n              size=\"xs\"\n              display=\"flex\"\n              className=\"mt-10 max-w-max\"\n              to=\"/admin/settings/outgoing-email\"\n            >\n              {text}\n            </Button>\n          ),\n        }}\n      />\n    </p>\n  );\n}\n\nfunction EmailConfirmationSection() {\n  return (\n    <FormSwitch\n      className=\"mb-30\"\n      name=\"client.require_email_confirmation\"\n      description={\n        <Fragment>\n          <Trans message=\"Require newly registered users to validate their email address before being able to login.\" />\n          <MailNotSetupWarning />\n        </Fragment>\n      }\n    >\n      <Trans message=\"Require email confirmation\" />\n    </FormSwitch>\n  );\n}\n\nfunction EnvatoSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const settings = useSettings();\n  const envatoLoginEnabled = watch('client.social.envato.enable');\n\n  if (!(settings as any).envato?.enable) return null;\n\n  return (\n    <SettingsErrorGroup separatorBottom={false} name=\"envato_group\">\n      {isInvalid => (\n        <>\n          <FormSwitch\n            invalid={isInvalid}\n            name=\"client.social.envato.enable\"\n            description={\n              <Trans message=\"Enable logging into the site via envato.\" />\n            }\n          >\n            <Trans message=\"Envato login\" />\n          </FormSwitch>\n          {!!envatoLoginEnabled && (\n            <>\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.envato_id\"\n                label={<Trans message=\"Envato ID\" />}\n                required\n              />\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.envato_secret\"\n                label={<Trans message=\"Envato secret\" />}\n                required\n              />\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.envato_personal_token\"\n                label={<Trans message=\"Envato personal token\" />}\n                required\n              />\n            </>\n          )}\n        </>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n\nfunction GoogleSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const googleLoginEnabled = watch('client.social.google.enable');\n\n  return (\n    <SettingsErrorGroup name=\"google_group\">\n      {isInvalid => (\n        <>\n          <FormSwitch\n            invalid={isInvalid}\n            name=\"client.social.google.enable\"\n            description={\n              <Trans message=\"Enable logging into the site via google.\" />\n            }\n          >\n            <Trans message=\"Google login\" />\n          </FormSwitch>\n          {!!googleLoginEnabled && (\n            <>\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.google_id\"\n                label={<Trans message=\"Google client ID\" />}\n                required\n              />\n              <FormTextField\n                className=\"mt-30\"\n                name=\"server.google_secret\"\n                label={<Trans message=\"Google client secret\" />}\n                required\n              />\n            </>\n          )}\n        </>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n\nfunction FacebookSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const facebookLoginEnabled = watch('client.social.facebook.enable');\n\n  return (\n    <SettingsErrorGroup name=\"facebook_group\" separatorTop={false}>\n      {isInvalid => (\n        <>\n          <FormSwitch\n            invalid={isInvalid}\n            name=\"client.social.facebook.enable\"\n            description={\n              <Trans message=\"Enable logging into the site via facebook.\" />\n            }\n          >\n            <Trans message=\"Facebook login\" />\n          </FormSwitch>\n          {!!facebookLoginEnabled && (\n            <>\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.facebook_id\"\n                label={<Trans message=\"Facebook app ID\" />}\n                required\n              />\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.facebook_secret\"\n                label={<Trans message=\"Facebook app secret\" />}\n                required\n              />\n            </>\n          )}\n        </>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n\nfunction TwitterSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const twitterLoginEnabled = watch('client.social.twitter.enable');\n\n  return (\n    <SettingsErrorGroup\n      name=\"twitter_group\"\n      separatorTop={false}\n      separatorBottom={false}\n    >\n      {isInvalid => (\n        <>\n          <FormSwitch\n            invalid={isInvalid}\n            name=\"client.social.twitter.enable\"\n            description={\n              <Trans message=\"Enable logging into the site via twitter.\" />\n            }\n          >\n            <Trans message=\"Twitter login\" />\n          </FormSwitch>\n          {!!twitterLoginEnabled && (\n            <>\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.twitter_id\"\n                label={<Trans message=\"Twitter ID\" />}\n                required\n              />\n              <FormTextField\n                invalid={isInvalid}\n                className=\"mt-30\"\n                name=\"server.twitter_secret\"\n                label={<Trans message=\"Twitter secret\" />}\n                required\n              />\n            </>\n          )}\n        </>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n","export const spaceUnits = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];\n","export type SpaceUnit = 'KB' | 'MB' | 'GB' | 'TB' | 'PB';\n\nexport function convertToBytes(value: number, unit: SpaceUnit): number {\n  if (value == null) return 0;\n  switch (unit) {\n    case 'KB':\n      return value * 1024;\n    case 'MB':\n      return value * 1024 ** 2;\n    case 'GB':\n      return value * 1024 ** 3;\n    case 'TB':\n      return value * 1024 ** 4;\n    case 'PB':\n      return value * 1024 ** 5;\n    default:\n      return value;\n  }\n}\n","import {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {useEffect, useState} from 'react';\nimport memoize from 'nano-memoize';\nimport {\n  FormTextFieldProps,\n  TextField,\n  TextFieldProps,\n} from '@ui/forms/input-field/text-field/text-field';\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\nimport {Option, Select} from '@ui/forms/select/select';\nimport {spaceUnits} from '@ui/utils/files/space-units';\nimport {convertToBytes, SpaceUnit} from '@ui/utils/files/convert-to-bytes';\n\n// 99TB\nconst MaxValue = 108851651149824;\n\nexport const FormFileSizeField = React.forwardRef<\n  HTMLDivElement,\n  FormTextFieldProps\n>(({name, ...props}, ref) => {\n  const {\n    field: {\n      onChange: setByteValue,\n      onBlur,\n      value: byteValue = '',\n      ref: inputRef,\n    },\n    fieldState: {invalid, error},\n  } = useController({\n    name,\n  });\n\n  const [liveValue, setLiveValue] = useState<number | string>('');\n  const [unit, setUnit] = useState<SpaceUnit | string>('MB');\n\n  useEffect(() => {\n    if (byteValue == null || byteValue === '') {\n      setLiveValue('');\n      return;\n    }\n    const {amount, unit: newUnit} = fromBytes({\n      bytes: Math.min(byteValue, MaxValue),\n    });\n    setUnit(newUnit || 'MB');\n    setLiveValue(Number.isNaN(amount) ? '' : amount);\n  }, [byteValue, unit]);\n\n  const formProps: TextFieldProps = {\n    onChange: e => {\n      const value = parseInt(e.target.value);\n      if (Number.isNaN(value)) {\n        setByteValue(value);\n      } else {\n        const newBytes = convertToBytes(\n          parseInt(e.target.value),\n          unit as SpaceUnit,\n        );\n        setByteValue(newBytes);\n      }\n    },\n    onBlur,\n    value: liveValue,\n    invalid,\n    errorMessage: error?.message,\n    inputRef,\n  };\n\n  const unitSelect = (\n    <Select\n      minWidth=\"min-w-80\"\n      selectionMode=\"single\"\n      selectedValue={unit}\n      disabled={!byteValue}\n      inputRadius=\"rounded-l-none rounded-r-input\"\n      onSelectionChange={newUnit => {\n        const newBytes = convertToBytes(\n          (liveValue || 0) as number,\n          newUnit as SpaceUnit,\n        );\n        setByteValue(newBytes);\n      }}\n    >\n      {spaceUnits.slice(0, 5).map(u => (\n        <Option value={u} key={u}>\n          {u === 'B' ? 'Bytes' : u}\n        </Option>\n      ))}\n    </Select>\n  );\n\n  return (\n    <TextField\n      {...mergeProps(formProps, props)}\n      type=\"number\"\n      ref={ref}\n      endAppend={unitSelect}\n    />\n  );\n});\n\nconst fromBytes = memoize(\n  ({bytes}: {bytes: number}): {amount: number | string; unit: SpaceUnit} => {\n    const pretty = prettyBytes(bytes);\n    if (!pretty) return {amount: '', unit: 'MB'};\n    let amount = parseInt(pretty.split(' ')[0]);\n    // get rid of any punctuation\n    amount = Math.round(amount);\n    return {amount, unit: pretty.split(' ')[1] as SpaceUnit};\n  },\n);\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchMaxServerUploadSizeResponse extends BackendResponse {\n  maxSize: string;\n}\n\nfunction fetchMaxServerUploadSize(): Promise<FetchMaxServerUploadSizeResponse> {\n  return apiClient\n    .get('uploads/server-max-file-size')\n    .then(response => response.data);\n}\n\nexport function useMaxServerUploadSize() {\n  return useQuery({\n    queryKey: ['MaxServerUploadSize'],\n    queryFn: () => fetchMaxServerUploadSize(),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  refreshToken: string;\n}\n\ninterface Payload {\n  app_key: string;\n  app_secret: string;\n  access_code: string;\n}\n\nexport function useGenerateDropboxRefreshToken() {\n  return useMutation({\n    mutationFn: (props: Payload) => generateToken(props),\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction generateToken(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('settings/uploading/dropbox-refresh-token', payload)\n    .then(r => r.data);\n}\n","import {Fragment} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {CredentialFormProps} from '../uploading-settings';\nimport {Button} from '@ui/buttons/button';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {AdminSettings} from '../../../admin-settings';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useGenerateDropboxRefreshToken} from './use-generate-dropbox-refresh-token';\n\nexport function DropboxForm({isInvalid}: CredentialFormProps) {\n  const {watch, setValue} = useFormContext<AdminSettings>();\n  const appKey = watch('server.storage_dropbox_app_key');\n  const appSecret = watch('server.storage_dropbox_app_secret');\n\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-20\"\n        name=\"server.storage_dropbox_app_key\"\n        label={<Trans message=\"Dropbox application key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-20\"\n        name=\"server.storage_dropbox_app_secret\"\n        label={<Trans message=\"Dropbox application secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-20\"\n        name=\"server.storage_dropbox_refresh_token\"\n        label={<Trans message=\"Dropbox refresh token\" />}\n        required\n      />\n      <DialogTrigger\n        type=\"modal\"\n        onClose={refreshToken => {\n          if (refreshToken) {\n            setValue('server.storage_dropbox_refresh_token', refreshToken);\n          }\n        }}\n      >\n        <Button\n          variant=\"outline\"\n          color=\"primary\"\n          size=\"xs\"\n          disabled={!appKey || !appSecret}\n        >\n          <Trans message=\"Get dropbox refresh token\" />\n        </Button>\n        <DropboxRefreshTokenDialog appKey={appKey!} appSecret={appSecret!} />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n\ninterface DropboxRefreshTokenDialogProps {\n  appKey: string;\n  appSecret: string;\n}\nfunction DropboxRefreshTokenDialog({\n  appKey,\n  appSecret,\n}: DropboxRefreshTokenDialogProps) {\n  const form = useForm<{accessCode: string}>();\n  const {formId, close} = useDialogContext();\n  const generateRefreshToken = useGenerateDropboxRefreshToken();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Connected dropbox account\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={data => {\n            generateRefreshToken.mutate(\n              {\n                app_key: appKey,\n                app_secret: appSecret,\n                access_code: data.accessCode,\n              },\n              {\n                onSuccess: response => {\n                  close(response.refreshToken);\n                },\n              },\n            );\n          }}\n        >\n          <div className=\"mb-20 border-b pb-20\">\n            <div className=\"mb-10 text-sm text-muted\">\n              <Trans message=\"Click the 'get access code' button to get dropbox access code, then paste it into the field below.\" />\n            </div>\n            <Button\n              variant=\"outline\"\n              color=\"primary\"\n              size=\"xs\"\n              elementType=\"a\"\n              target=\"_blank\"\n              href={`https://www.dropbox.com/oauth2/authorize?client_id=${appKey}&token_access_type=offline&response_type=code`}\n            >\n              <Trans message=\"Get access code\" />\n            </Button>\n          </div>\n          <FormTextField\n            name=\"accessCode\"\n            label={<Trans message=\"Dropbox access code\" />}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          form={formId}\n          type=\"submit\"\n          disabled={!appKey || !appSecret || generateRefreshToken.isPending}\n        >\n          <Trans message=\"Connect\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {message} from '@ui/i18n/message';\nimport {toast} from '@ui/toast/toast';\n\ninterface Response extends BackendResponse {}\n\nexport function useUploadS3Cors() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: () => uploadCors(),\n    onSuccess: () => {\n      toast(trans(message('CORS file updated')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction uploadCors(): Promise<Response> {\n  return apiClient.post('s3/cors/upload').then(r => r.data);\n}\n","import {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {Trans} from '@ui/i18n/trans';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {FormRadioGroup} from '@ui/forms/radio-group/radio-group';\nimport {FormRadio} from '@ui/forms/radio-group/radio';\nimport {FormFileSizeField} from '@common/uploads/components/file-size-field';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\nimport {JsonChipField} from '@common/admin/settings/form/json-chip-field';\nimport {message} from '@ui/i18n/message';\nimport {useMaxServerUploadSize} from '@common/admin/settings/pages/uploading-settings/max-server-upload-size';\nimport {SectionHelper} from '@common/ui/other/section-helper';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {DropboxForm} from '@common/admin/settings/pages/uploading-settings/dropbox-form/dropbox-form';\nimport React, {Fragment} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useUploadS3Cors} from '@common/admin/settings/pages/uploading-settings/use-upload-s3-cors';\nimport {useAdminSettings} from '@common/admin/settings/requests/use-admin-settings';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {Button} from '@ui/buttons/button';\nimport {Item} from '@ui/forms/listbox/item';\n\nexport function UploadingSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Uploading\" />}\n      description={\n        <Trans message=\"Configure size and type of files that users are able to upload. This will affect all uploads across the site.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const {trans} = useTrans();\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        uploads: {\n          max_size: data.client.uploads.max_size ?? 0,\n          chunk_size: data.client.uploads.chunk_size ?? 0,\n          available_space: data.client.uploads.available_space ?? 0,\n          allowed_extensions: data.client.uploads.allowed_extensions ?? [],\n          blocked_extensions: data.client.uploads.blocked_extensions ?? [],\n          s3_direct_upload: data.client.uploads.s3_direct_upload ?? false,\n        },\n      },\n      server: {\n        static_file_delivery: data.server.static_file_delivery ?? '',\n        uploads_disk_driver: data.server.uploads_disk_driver ?? 'local',\n        public_disk_driver: data.server.public_disk_driver ?? 'local',\n\n        // s3\n        storage_s3_key: data.server.storage_s3_key ?? '',\n        storage_s3_secret: data.server.storage_s3_secret ?? '',\n        storage_s3_region: data.server.storage_s3_region ?? '',\n        storage_s3_bucket: data.server.storage_s3_bucket ?? '',\n        storage_s3_endpoint: data.server.storage_s3_endpoint ?? '',\n\n        // digitalocean spaces\n        storage_digitalocean_key: data.server.storage_digitalocean_key ?? '',\n        storage_digitalocean_secret:\n          data.server.storage_digitalocean_secret ?? '',\n        storage_digitalocean_region:\n          data.server.storage_digitalocean_region ?? '',\n        storage_digitalocean_bucket:\n          data.server.storage_digitalocean_bucket ?? '',\n\n        // backblaze\n        storage_backblaze_key: data.server.storage_backblaze_key ?? '',\n        storage_backblaze_secret: data.server.storage_backblaze_secret ?? '',\n        storage_backblaze_region: data.server.storage_backblaze_region ?? '',\n        storage_backblaze_bucket: data.server.storage_backblaze_bucket ?? '',\n\n        // ftp\n        storage_ftp_host: data.server.storage_ftp_host ?? '',\n        storage_ftp_username: data.server.storage_ftp_username ?? '',\n        storage_ftp_password: data.server.storage_ftp_password ?? '',\n        storage_ftp_root: data.server.storage_ftp_root ?? '',\n        storage_ftp_port: data.server.storage_ftp_port ?? '21',\n        storage_ftp_passive: data.server.storage_ftp_passive ?? false,\n        storage_ftp_ssl: data.server.storage_ftp_ssl ?? false,\n\n        // dropbox\n        storage_dropbox_app_key: data.server.storage_dropbox_app_key ?? '',\n        storage_dropbox_app_secret:\n          data.server.storage_dropbox_app_secret ?? '',\n        storage_dropbox_refresh_token:\n          data.server.storage_dropbox_refresh_token ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <PrivateUploadSection />\n      <PublicUploadSection />\n      <CredentialsSection />\n      <SettingsErrorGroup name=\"static_delivery_group\">\n        {isInvalid => (\n          <FormRadioGroup\n            invalid={isInvalid}\n            size=\"sm\"\n            name=\"server.static_file_delivery\"\n            orientation=\"vertical\"\n            label={<Trans message=\"File delivery optimization\" />}\n            description={\n              <Trans message=\"Both X-Sendfile and X-Accel need to be enabled on the server first. When enabled, it will reduce server memory and CPU usage when previewing or downloading files, especially for large files.\" />\n            }\n          >\n            <FormRadio value=\"\">\n              <Trans message=\"None\" />\n            </FormRadio>\n            <FormRadio value=\"xsendfile\">\n              <Trans message=\"X-Sendfile (Apache)\" />\n            </FormRadio>\n            <FormRadio value=\"xaccel\">\n              <Trans message=\"X-Accel (Nginx)\" />\n            </FormRadio>\n          </FormRadioGroup>\n        )}\n      </SettingsErrorGroup>\n      <FormFileSizeField\n        className=\"mb-30\"\n        name=\"client.uploads.chunk_size\"\n        min={1}\n        label={<Trans message=\"Chunk size\" />}\n        placeholder=\"Infinity\"\n        description={\n          <Trans message=\"Size (in bytes) for each file chunk. It should only be changed if there is a maximum upload size on your server or proxy (for example cloudflare). If chunk size is larger then limit on the server, uploads will fail.\" />\n        }\n      />\n      <MaxUploadSizeSection />\n      <SettingsSeparator />\n      <FormFileSizeField\n        min={1}\n        name=\"client.uploads.max_size\"\n        className=\"mb-30\"\n        label={<Trans message=\"Maximum file size\" />}\n        description={\n          <Trans message=\"Maximum size (in bytes) for a single file user can upload.\" />\n        }\n      />\n      <FormFileSizeField\n        min={1}\n        name=\"client.uploads.available_space\"\n        className=\"mb-30\"\n        label={<Trans message=\"Available space\" />}\n        description={\n          <Trans message=\"Disk space (in bytes) each user uploads are allowed to take up. This can be overridden per user.\" />\n        }\n      />\n      <JsonChipField\n        name=\"client.uploads.allowed_extensions\"\n        className=\"mb-30\"\n        label={<Trans message=\"Allowed extensions\" />}\n        placeholder={trans(message('Add extension...'))}\n        description={\n          <Trans message=\"List of allowed file types (jpg, mp3, pdf etc.). Leave empty to allow all file types.\" />\n        }\n      />\n      <JsonChipField\n        name=\"client.uploads.blocked_extensions\"\n        label={<Trans message=\"Blocked extensions\" />}\n        placeholder={trans(message('Add extension...'))}\n        description={\n          <Trans message=\"Prevent uploading of these file types, even if they are allowed above.\" />\n        }\n      />\n    </AdminSettingsForm>\n  );\n}\n\nfunction MaxUploadSizeSection() {\n  const {data} = useMaxServerUploadSize();\n  return (\n    <SectionHelper\n      color=\"warning\"\n      description={\n        <Trans\n          message=\"Maximum upload size on your server currently is set to <b>:size</b>\"\n          values={{size: data?.maxSize, b: chunks => <b>{chunks}</b>}}\n        />\n      }\n    />\n  );\n}\n\nfunction PrivateUploadSection() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n  const isEnabled = watch('server.uploads_disk_driver');\n\n  if (!isEnabled) return null;\n\n  return (\n    <FormSelect\n      className=\"mb-30\"\n      selectionMode=\"single\"\n      name=\"server.uploads_disk_driver\"\n      label={<Trans message=\"User Uploads Storage Method\" />}\n      description={\n        <Trans message=\"Where should user private file uploads be stored.\" />\n      }\n      onSelectionChange={() => {\n        clearErrors();\n      }}\n    >\n      <Item value=\"local\">\n        <Trans message=\"Local Disk (Default)\" />\n      </Item>\n      <Item value=\"ftp\">FTP</Item>\n      <Item value=\"digitalocean_s3\">DigitalOcean Spaces</Item>\n      <Item value=\"backblaze_s3\">Backblaze</Item>\n      <Item value=\"s3\">Amazon S3 (Or compatible service)</Item>\n      <Item value=\"dropbox\">Dropbox</Item>\n      <Item value=\"rackspace\">Rackspace</Item>\n    </FormSelect>\n  );\n}\n\nfunction PublicUploadSection() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n  const isEnabled = watch('server.public_disk_driver');\n\n  if (!isEnabled) return null;\n\n  return (\n    <FormSelect\n      label={<Trans message=\"Public Uploads Storage Method\" />}\n      selectionMode=\"single\"\n      name=\"server.public_disk_driver\"\n      description={\n        <Trans message=\"Where should user public uploads (like avatars) be stored.\" />\n      }\n      onSelectionChange={() => {\n        clearErrors();\n      }}\n    >\n      <Item value=\"local\">\n        <Trans message=\"Local Disk (Default)\" />\n      </Item>\n      <Item value=\"s3\">Amazon S3</Item>\n      <Item value=\"ftp\">FTP</Item>\n      <Item value=\"digitalocean_s3\">DigitalOcean Spaces</Item>\n      <Item value=\"backblaze_s3\">Backblaze</Item>\n    </FormSelect>\n  );\n}\n\nfunction CredentialsSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const drives = [\n    watch('server.uploads_disk_driver'),\n    watch('server.public_disk_driver'),\n  ];\n\n  if (drives[0] === 'local' && drives[1] === 'local') {\n    return null;\n  }\n\n  return (\n    <SettingsErrorGroup separatorBottom={false} name=\"storage_group\">\n      {isInvalid => {\n        if (drives.includes('s3')) {\n          return <S3Form isInvalid={isInvalid} />;\n        }\n        if (drives.includes('ftp')) {\n          return <FtpForm isInvalid={isInvalid} />;\n        }\n        if (drives.includes('dropbox')) {\n          return <DropboxForm isInvalid={isInvalid} />;\n        }\n        if (drives.includes('digitalocean_s3')) {\n          return <DigitalOceanForm isInvalid={isInvalid} />;\n        }\n        if (drives.includes('backblaze_s3')) {\n          return <BackblazeForm isInvalid={isInvalid} />;\n        }\n      }}\n    </SettingsErrorGroup>\n  );\n}\n\nexport interface CredentialFormProps {\n  isInvalid: boolean;\n}\nfunction S3Form({isInvalid}: CredentialFormProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_s3_key\"\n        label={<Trans message=\"Amazon S3 key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_s3_secret\"\n        label={<Trans message=\"Amazon S3 secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_s3_region\"\n        label={<Trans message=\"Amazon S3 region\" />}\n        placeholder=\"us-east-1\"\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_s3_bucket\"\n        label={<Trans message=\"Amazon S3 bucket\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        name=\"server.storage_s3_endpoint\"\n        label={<Trans message=\"Amazon S3 endpoint\" />}\n        description={\n          <Trans message=\"Only change endpoint if you are using another S3 compatible storage service.\" />\n        }\n      />\n      <S3DirectUploadField invalid={isInvalid} />\n    </Fragment>\n  );\n}\n\nfunction DigitalOceanForm({isInvalid}: CredentialFormProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_digitalocean_key\"\n        label={<Trans message=\"DigitalOcean key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_digitalocean_secret\"\n        label={<Trans message=\"DigitalOcean secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_digitalocean_region\"\n        label={<Trans message=\"DigitalOcean region\" />}\n        pattern=\"[a-z0-9\\-]+\"\n        placeholder=\"us-east-1\"\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_digitalocean_bucket\"\n        label={<Trans message=\"DigitalOcean bucket\" />}\n        required\n      />\n      <S3DirectUploadField invalid={isInvalid} />\n    </Fragment>\n  );\n}\n\nfunction BackblazeForm({isInvalid}: CredentialFormProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_backblaze_key\"\n        label={<Trans message=\"Backblaze KeyID\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_backblaze_secret\"\n        label={<Trans message=\"Backblaze applicationKey\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_backblaze_region\"\n        label={<Trans message=\"Backblaze Region\" />}\n        pattern=\"[a-z0-9\\-]+\"\n        placeholder=\"us-west-002\"\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_backblaze_bucket\"\n        label={<Trans message=\"Backblaze bucket name\" />}\n        required\n      />\n      <S3DirectUploadField invalid={isInvalid} />\n    </Fragment>\n  );\n}\n\ninterface S3DirectUploadFieldProps {\n  invalid: boolean;\n}\nfunction S3DirectUploadField({invalid}: S3DirectUploadFieldProps) {\n  const uploadCors = useUploadS3Cors();\n  const {data: defaultSettings} = useAdminSettings();\n\n  const s3DriverEnabled =\n    defaultSettings?.server.uploads_disk_driver?.endsWith('s3') ||\n    defaultSettings?.server.public_disk_driver?.endsWith('s3');\n\n  return (\n    <Fragment>\n      <FormSwitch\n        className=\"mt-30\"\n        invalid={invalid}\n        name=\"client.uploads.s3_direct_upload\"\n        description={\n          <div>\n            <p>\n              <Trans message=\"Upload files directly from the browser to s3 without going through the server. It will save on server bandwidth and should result in faster upload times. This should be enabled, unless storage provider does not support multipart uploads.\" />\n            </p>\n            <p className=\"mt-10\">\n              <Trans message=\"If s3 provider is not configured to allow uploads from browser, this can be done automatically via CORS button below, when valid credentials are saved.\" />\n            </p>\n          </div>\n        }\n      >\n        <Trans message=\"Direct upload\" />\n      </FormSwitch>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        size=\"xs\"\n        className=\"mt-20\"\n        onClick={() => {\n          uploadCors.mutate();\n        }}\n        disabled={!s3DriverEnabled || uploadCors.isPending}\n      >\n        <Trans message=\"Configure CORS\" />\n      </Button>\n    </Fragment>\n  );\n}\n\nfunction FtpForm({isInvalid}: CredentialFormProps) {\n  return (\n    <>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_host\"\n        label={<Trans message=\"FTP hostname\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_username\"\n        label={<Trans message=\"FTP username\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_password\"\n        label={<Trans message=\"FTP password\" />}\n        type=\"password\"\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_root\"\n        label={<Trans message=\"FTP directory\" />}\n        placeholder=\"/\"\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.storage_ftp_port\"\n        label={<Trans message=\"FTP port\" />}\n        type=\"number\"\n        min={0}\n        placeholder=\"21\"\n      />\n      <FormSwitch\n        invalid={isInvalid}\n        name=\"server.storage_ftp_passive\"\n        className=\"mb-30\"\n      >\n        <Trans message=\"Passive\" />\n      </FormSwitch>\n      <FormSwitch invalid={isInvalid} name=\"server.storage_ftp_ssl\">\n        <Trans message=\"SSL\" />\n      </FormSwitch>\n    </>\n  );\n}\n","import {Fragment} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\n\nexport interface MailgunCredentialsProps {\n  isInvalid: boolean;\n}\nexport function MailgunCredentials({isInvalid}: MailgunCredentialsProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mailgun_domain\"\n        label={<Trans message=\"Mailgun domain\" />}\n        description={\n          <Trans message=\"Usually the domain of your site (site.com)\" />\n        }\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mailgun_secret\"\n        label={<Trans message=\"Mailgun API key\" />}\n        description={<Trans message=\"Should start with `key-`\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        name=\"server.mailgun_endpoint\"\n        label={<Trans message=\"Mailgun endpoint\" />}\n        description={\n          <Trans message=\"Can be left empty, if your mailgun account is in the US region.\" />\n        }\n        placeholder=\"api.eu.mailgun.net\"\n      />\n    </Fragment>\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\n\nexport interface SmtpCredentialsProps {\n  isInvalid: boolean;\n}\nexport function SmtpCredentials({isInvalid}: SmtpCredentialsProps) {\n  return (\n    <>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mail_host\"\n        label={<Trans message=\"SMTP host\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mail_username\"\n        label={<Trans message=\"SMTP username\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        type=\"password\"\n        name=\"server.mail_password\"\n        label={<Trans message=\"SMTP password\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        type=\"number\"\n        name=\"server.mail_port\"\n        label={<Trans message=\"SMTP port\" />}\n      />\n      <FormSelect\n        selectionMode=\"single\"\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.mail_encryption\"\n        label={<Trans message=\"SMTP encryption\" />}\n      >\n        <Item value=\"\">\n          <Trans message=\"None\" />\n        </Item>\n        <Item value=\"tls\">\n          <Trans message=\"TLS\" />\n        </Item>\n        <Item value=\"ssl\">\n          <Trans message=\"SSL\" />\n        </Item>\n      </FormSelect>\n    </>\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {Fragment} from 'react';\n\nexport interface SesCredentialsProps {\n  isInvalid: boolean;\n}\nexport function SesCredentials({isInvalid}: SesCredentialsProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.ses_key\"\n        label={<Trans message=\"SES key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.ses_secret\"\n        label={<Trans message=\"SES secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        name=\"server.ses_region\"\n        label={<Trans message=\"SES region\" />}\n        placeholder=\"us-east-1\"\n        required\n      />\n    </Fragment>\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\n\nexport interface PostmarkCredentialsProps {\n  isInvalid: boolean;\n}\nexport function PostmarkCredentials({isInvalid}: PostmarkCredentialsProps) {\n  return (\n    <FormTextField\n      invalid={isInvalid}\n      name=\"server.postmark_token\"\n      label={<Trans message=\"Postmark token\" />}\n      required\n    />\n  );\n}\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const GmailIcon = createSvgIcon(\n  [\n    <path\n      key=\"0\"\n      fill=\"#4caf50\"\n      d=\"M45,16.2l-5,2.75l-5,4.75L35,40h7c1.657,0,3-1.343,3-3V16.2z\"\n    />,\n    <path\n      key=\"1\"\n      fill=\"#1e88e5\"\n      d=\"M3,16.2l3.614,1.71L13,23.7V40H6c-1.657,0-3-1.343-3-3V16.2z\"\n    />,\n    <polygon\n      key=\"2\"\n      fill=\"#e53935\"\n      points=\"35,11.2 24,19.45 13,11.2 12,17 13,23.7 24,31.95 35,23.7 36,17\"\n    />,\n    <path\n      key=\"3\"\n      fill=\"#c62828\"\n      d=\"M3,12.298V16.2l10,7.5V11.2L9.876,8.859C9.132,8.301,8.228,8,7.298,8h0C4.924,8,3,9.924,3,12.298z\"\n    />,\n    <path\n      key=\"4\"\n      fill=\"#fbc02d\"\n      d=\"M45,12.298V16.2l-10,7.5V11.2l3.124-2.341C38.868,8.301,39.772,8,40.702,8h0 C43.076,8,45,9.924,45,12.298z\"\n    />,\n  ],\n  'Gmail',\n  '0 0 48 48',\n);\n","import {useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '../../admin-settings';\nimport {useSocialLogin} from '@common/auth/requests/use-social-login';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Button} from '@ui/buttons/button';\nimport {GmailIcon} from './gmail-icon';\nimport {Trans} from '@ui/i18n/trans';\nimport {Fragment} from 'react';\n\nexport function ConnectGmailPanel() {\n  const {watch, setValue} = useFormContext<AdminSettings>();\n  const {connectSocial} = useSocialLogin();\n  const connectedEmail = watch('server.connectedGmailAccount');\n\n  const handleGmailConnect = async () => {\n    const e = await connectSocial('secure/settings/mail/gmail/connect');\n    if (e?.status === 'SUCCESS') {\n      const email = (e.callbackData as any).profile.email;\n      setValue('server.connectedGmailAccount', email);\n      toast(message('Connected gmail account: :email', {values: {email}}));\n    }\n  };\n\n  const connectButton = (\n    <Button\n      variant=\"outline\"\n      color=\"primary\"\n      startIcon={<GmailIcon />}\n      onClick={() => handleGmailConnect()}\n    >\n      <Trans message=\"Connect gmail account\" />\n    </Button>\n  );\n\n  const reconnectPanel = (\n    <div className=\"flex items-center gap-14 rounded border bg-alt px-14 py-6 text-sm\">\n      <GmailIcon size=\"lg\" />\n      {connectedEmail}\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        className=\"ml-auto\"\n        onClick={() => handleGmailConnect()}\n      >\n        <Trans message=\"Reconnect\" />\n      </Button>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <div className=\"mb-6 text-sm\">\n        <Trans message=\"Gmail account\" />\n      </div>\n      {connectedEmail ? reconnectPanel : connectButton}\n    </Fragment>\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {ComponentType, Fragment} from 'react';\nimport {MailgunCredentials} from './mailgun-credentials';\nimport {SmtpCredentials} from './smtp-credentials';\nimport {SesCredentials} from './ses-credentials';\nimport {PostmarkCredentials} from './postmark-credentials';\nimport {ConnectGmailPanel} from './connect-gmail-panel';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\n\nexport function OutgoingMailGroup() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n\n  const selectedDriver = watch('server.mail_driver');\n  const credentialForms: ComponentType<{isInvalid: boolean}>[] = [];\n\n  if (selectedDriver === 'mailgun') {\n    credentialForms.push(MailgunCredentials);\n  }\n  if (selectedDriver === 'smtp') {\n    credentialForms.push(SmtpCredentials);\n  }\n  if (selectedDriver === 'ses') {\n    credentialForms.push(SesCredentials);\n  }\n  if (selectedDriver === 'postmark') {\n    credentialForms.push(PostmarkCredentials);\n  }\n  if (selectedDriver === 'gmailApi') {\n    credentialForms.push(ConnectGmailPanel);\n  }\n\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"mail_group\"\n    >\n      {isInvalid => (\n        <Fragment>\n          <FormSelect\n            onSelectionChange={() => {\n              clearErrors();\n            }}\n            invalid={isInvalid}\n            selectionMode=\"single\"\n            name=\"server.mail_driver\"\n            label={<Trans message=\"Outgoing mail method\" />}\n            description={\n              <div>\n                <Trans message=\"Which method should be used for sending outgoing application emails (like registration confirmation)\" />\n                <LearnMoreLink\n                  className=\"mt-8\"\n                  link=\"https://marina.moda\"\n                />\n              </div>\n            }\n          >\n            <Option value=\"mailgun\">Mailgun</Option>\n            <Option value=\"gmailApi\">Gmail Api</Option>\n            <Option value=\"smtp\">SMTP</Option>\n            <Option value=\"postmark\">Postmark</Option>\n            <Option value=\"ses\">Ses (Amazon Simple Email Service)</Option>\n            <Option value=\"sendmail\">SendMail</Option>\n            <Option value=\"log\">Log (Email will be saved to error log)</Option>\n          </FormSelect>\n          {credentialForms.length ? (\n            <div className=\"mt-30\">\n              {credentialForms.map((CredentialsForm, index) => (\n                <CredentialsForm key={index} isInvalid={isInvalid} />\n              ))}\n            </div>\n          ) : null}\n        </Fragment>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {ExternalLink} from '@ui/buttons/external-link';\nimport {SectionHelper} from '@common/ui/other/section-helper';\nimport {Trans} from '@ui/i18n/trans';\nimport {OutgoingMailGroup} from './outgoing-mail-group';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\nimport React from 'react';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {useForm} from 'react-hook-form';\n\nexport function OutgoingEmailSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Outgoing email settings\" />}\n      description={\n        <Trans message=\"Change outgoing email handlers, email credentials and other related settings.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      server: {\n        mail_from_address: data.server.mail_from_address ?? '',\n        mail_from_name: data.server.mail_from_name ?? '',\n        mail_driver: data.server.mail_driver ?? '',\n        mailgun_domain: data.server.mailgun_domain ?? '',\n        mailgun_secret: data.server.mailgun_secret ?? '',\n        mailgun_endpoint: data.server.mailgun_endpoint ?? '',\n        mail_host: data.server.mail_host ?? '',\n        mail_username: data.server.mail_username ?? '',\n        mail_password: data.server.mail_password ?? '',\n        mail_port: data.server.mail_port ?? '',\n        mail_encryption: data.server.mail_encryption ?? '',\n        ses_key: data.server.ses_key ?? '',\n        ses_secret: data.server.ses_secret ?? '',\n        ses_region: data.server.ses_region ?? '',\n        postmark_token: data.server.postmark_token ?? '',\n        connectedGmailAccount: data.server.connectedGmailAccount ?? '',\n      },\n      client: {\n        mail: {\n          contact_page_address: data.client.mail?.contact_page_address ?? '',\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <FormTextField\n        id=\"outgoing-emails\"\n        className=\"mb-30\"\n        type=\"email\"\n        name=\"server.mail_from_address\"\n        label={<Trans message=\"From address\" />}\n        description={\n          <Trans message=\"All outgoing application emails will be sent from this email address.\" />\n        }\n        required\n      />\n      <ContactAddressSection />\n      <FormTextField\n        className=\"mb-30\"\n        name=\"server.mail_from_name\"\n        label={<Trans message=\"From name\" />}\n        description={\n          <Trans message=\"All outgoing application emails will be sent using this name.\" />\n        }\n        required\n      />\n      <SectionHelper\n        color=\"warning\"\n        description={\n          <Trans message=\"Your selected mail method must be authorized to send emails using this address and name.\" />\n        }\n      />\n      <SettingsSeparator />\n      <OutgoingMailGroup />\n    </AdminSettingsForm>\n  );\n}\n\nfunction ContactAddressSection() {\n  const {base_url} = useSettings();\n  const contactPageUrl = `${base_url}/contact`;\n  const link = (\n    <ExternalLink href={contactPageUrl}>{contactPageUrl}</ExternalLink>\n  );\n  return (\n    <FormTextField\n      className=\"mb-30\"\n      type=\"email\"\n      name=\"client.mail.contact_page_address\"\n      label={<Trans message=\"Contact page address\" />}\n      description={\n        <Trans\n          values={{\n            contactPageUrl: link,\n          }}\n          message=\"Where emails from :contactPageUrl page should be sent to.\"\n        />\n      }\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {message} from '@ui/i18n/message';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nfunction clearCache(): Promise<Response> {\n  return apiClient.post('cache/flush').then(r => r.data);\n}\n\nexport function useClearCache() {\n  return useMutation({\n    mutationFn: () => clearCache(),\n    onSuccess: () => {\n      toast(message('Cache cleared'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useForm, useFormContext} from 'react-hook-form';\nimport React, {ComponentType, Fragment} from 'react';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {useClearCache} from '@common/admin/settings/pages/cache-settings/clear-cache';\nimport {Button} from '@ui/buttons/button';\nimport {SectionHelper} from '@common/ui/other/section-helper';\nimport {Trans} from '@ui/i18n/trans';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\n\nexport function CacheSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Cache settings\" />}\n      description={\n        <Trans message=\"Select cache provider and manually clear cache.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const clearCache = useClearCache();\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      server: {\n        cache_driver: data.server.cache_driver ?? 'file',\n        memcached_host: data.server.memcached_host ?? '',\n        memcached_port: data.server.memcached_port ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <CacheSelect />\n      <Button\n        type=\"button\"\n        variant=\"outline\"\n        size=\"xs\"\n        color=\"primary\"\n        disabled={clearCache.isPending}\n        onClick={() => clearCache.mutate()}\n      >\n        <Trans message=\"Clear cache\" />\n      </Button>\n      <SectionHelper\n        color=\"warning\"\n        className=\"mt-30\"\n        description={\n          <Trans\n            message={\n              '\"File\" is the best option for most cases and should not be changed, unless you are familiar with another cache method and have it set up on the server already.'\n            }\n          />\n        }\n      />\n    </AdminSettingsForm>\n  );\n}\n\nfunction CacheSelect() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n  const cacheDriver = watch('server.cache_driver');\n\n  let CredentialSection: ComponentType<CredentialProps> | null = null;\n  if (cacheDriver === 'memcached') {\n    CredentialSection = MemcachedCredentials;\n  }\n\n  return (\n    <SettingsErrorGroup separatorTop={false} name=\"cache_group\">\n      {isInvalid => {\n        return (\n          <>\n            <FormSelect\n              invalid={isInvalid}\n              onSelectionChange={() => clearErrors()}\n              selectionMode=\"single\"\n              name=\"server.cache_driver\"\n              label={<Trans message=\"Cache method\" />}\n              description={\n                <Trans message=\"Which method should be used for storing and retrieving cached items.\" />\n              }\n            >\n              <Option value=\"file\">\n                <Trans message=\"File (Default)\" />\n              </Option>\n              <Option value=\"array\">\n                <Trans message=\"None\" />\n              </Option>\n              <Option value=\"apc\">APC</Option>\n              <Option value=\"memcached\">Memcached</Option>\n              <Option value=\"redis\">Redis</Option>\n            </FormSelect>\n            {CredentialSection && (\n              <div className=\"mt-30\">\n                <CredentialSection isInvalid={isInvalid} />\n              </div>\n            )}\n          </>\n        );\n      }}\n    </SettingsErrorGroup>\n  );\n}\n\ninterface CredentialProps {\n  isInvalid: boolean;\n}\nfunction MemcachedCredentials({isInvalid}: CredentialProps) {\n  return (\n    <>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.memcached_host\"\n        label={<Trans message=\"Memcached host\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        type=\"number\"\n        name=\"server.memcached_port\"\n        label={<Trans message=\"Memcached port\" />}\n        required\n      />\n    </>\n  );\n}\n","import {useForm, useFormContext} from 'react-hook-form';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {SectionHelper} from '@common/ui/other/section-helper';\nimport {ExternalLink} from '@ui/buttons/external-link';\nimport {Trans} from '@ui/i18n/trans';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport React from 'react';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\n\nexport function LoggingSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Error logging\" />}\n      description={\n        <Trans message=\"Configure site error logging and related 3rd party integrations.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      server: {\n        sentry_dsn: data.server.sentry_dsn ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <SentrySection />\n      <SectionHelper\n        className=\"mt-30\"\n        color=\"positive\"\n        description={\n          <Trans\n            values={{\n              a: parts => (\n                <ExternalLink href=\"https://sentry.io\">{parts}</ExternalLink>\n              ),\n            }}\n            message=\"<a>Sentry</a> integration provides real-time error tracking and helps identify and fix issues when site is in production.\"\n          />\n        }\n      />\n    </AdminSettingsForm>\n  );\n}\n\nfunction SentrySection() {\n  const {clearErrors} = useFormContext();\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"logging_group\"\n    >\n      {isInvalid => {\n        return (\n          <FormTextField\n            onChange={() => clearErrors()}\n            invalid={isInvalid}\n            name=\"server.sentry_dsn\"\n            type=\"url\"\n            minLength={30}\n            label={<Trans message=\"Sentry DSN\" />}\n          />\n        );\n      }}\n    </SettingsErrorGroup>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\n\ninterface Response extends BackendResponse {\n  failedJobs: number;\n  jobsPerMinute: number;\n  pausedMasters: number;\n  periods: {\n    failedJobs: number;\n    recentJobs: number;\n  };\n  processes: number;\n  queueWithMaxRuntime?: string;\n  queueWithMaxThroughput?: string;\n  recentJobs: number;\n  status: 'running' | 'inactive' | 'paused';\n}\n\nexport function useQueueStats() {\n  return useQuery({\n    queryKey: ['queue-stats'],\n    queryFn: () => fetchStats(),\n    refetchInterval: 5000, // Poll every 5s\n  });\n}\n\nfunction fetchStats() {\n  return apiClient\n    .get<Response>('horizon/api/stats')\n    .then(response => response.data);\n}\n","import {useForm, useFormContext} from 'react-hook-form';\nimport React, {ComponentType, Fragment} from 'react';\nimport {AdminSettings} from '../admin-settings';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {useQueueStats} from '@common/admin/settings/requests/use-queue-stats';\nimport clsx from 'clsx';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {Button} from '@ui/buttons/button';\nimport {OpenInNewIcon} from '@ui/icons/material/OpenInNew';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\n\nexport function QueueSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Queue\" />}\n      description={\n        <Fragment>\n          <Trans message=\"Queues allow to defer time consuming tasks, such as sending an email, until a later time. They are fully optional and do not provide any additional functionality.\" />\n          <LearnMoreLink\n            className=\"mt-6 text-sm\"\n            link=\"https://marina.moda\"\n          />\n        </Fragment>\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      server: {\n        queue_driver: data.server.queue_driver ?? 'sync',\n        sqs_queue_key: data.server.sqs_queue_key ?? '',\n        sqs_queue_secret: data.server.sqs_queue_secret ?? '',\n        sqs_queue_prefix: data.server.sqs_queue_prefix ?? '',\n        sqs_queue_name: data.server.sqs_queue_name ?? '',\n        sqs_queue_region: data.server.sqs_queue_region ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <StatusWidget />\n      <DriverSection />\n    </AdminSettingsForm>\n  );\n}\n\nfunction StatusWidget() {\n  const {base_url} = useSettings();\n  const {watch} = useFormContext<AdminSettings>();\n  const {data} = useQueueStats();\n  const selectedDriver = watch('server.queue_driver');\n  const status = data?.status;\n\n  if (selectedDriver === 'sync') {\n    return null;\n  }\n\n  return (\n    <div className=\"mb-30 flex h-32 items-center justify-between gap-14\">\n      {status && (\n        <Fragment>\n          <div\n            className={clsx(\n              'min-w-108 flex w-max items-center gap-8 rounded-button px-10 py-4 text-sm capitalize',\n              status === 'running' && 'bg-positive-lighter',\n              status === 'inactive' && 'bg-danger-lighter',\n              status === 'paused' && 'bg-chip',\n            )}\n          >\n            <div\n              className={clsx(\n                'h-10 w-10 rounded-full',\n                status === 'running' && 'bg-positive',\n                status === 'inactive' && 'bg-danger',\n                status === 'paused' && 'bg-chip',\n              )}\n            />\n            <Trans message={`Worker ${status}`} />\n          </div>\n          <Button\n            variant=\"outline\"\n            size=\"xs\"\n            elementType=\"a\"\n            href={`${base_url}/horizon`}\n            target=\"_blank\"\n            endIcon={<OpenInNewIcon />}\n          >\n            <Trans message=\"Monitor\" />\n          </Button>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nfunction DriverSection() {\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\n  const queueDriver = watch('server.queue_driver');\n\n  let CredentialSection: ComponentType<CredentialProps> | null = null;\n  if (queueDriver === 'sqs') {\n    CredentialSection = SqsCredentials;\n  }\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"queue_group\"\n    >\n      {isInvalid => {\n        return (\n          <>\n            <FormSelect\n              invalid={isInvalid}\n              onSelectionChange={() => {\n                clearErrors();\n              }}\n              selectionMode=\"single\"\n              name=\"server.queue_driver\"\n              label={<Trans message=\"Queue method\" />}\n              required\n            >\n              <Option value=\"sync\">\n                <Trans message=\"None (Default)\" />\n              </Option>\n              <Option value=\"beanstalkd\">Beanstalkd</Option>\n              <Option value=\"database\">\n                <Trans message=\"Database\" />\n              </Option>\n              <Option value=\"sqs\">\n                <Trans message=\"SQS (Amazon simple queue service)\" />\n              </Option>\n              <Option value=\"redis\">Redis</Option>\n            </FormSelect>\n            {CredentialSection && (\n              <div className=\"mt-30\">\n                <CredentialSection isInvalid={isInvalid} />\n              </div>\n            )}\n          </>\n        );\n      }}\n    </SettingsErrorGroup>\n  );\n}\n\ninterface CredentialProps {\n  isInvalid: boolean;\n}\nfunction SqsCredentials({isInvalid}: CredentialProps) {\n  return (\n    <>\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_key\"\n        label={<Trans message=\"SQS queue key\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_secret\"\n        label={<Trans message=\"SQS queue secret\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_prefix\"\n        label={<Trans message=\"SQS queue prefix\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_name\"\n        label={<Trans message=\"SQS queue name\" />}\n        required\n      />\n      <FormTextField\n        invalid={isInvalid}\n        className=\"mb-30\"\n        name=\"server.sqs_queue_region\"\n        label={<Trans message=\"SQS queue region\" />}\n        required\n      />\n    </>\n  );\n}\n","import {useForm, useFormContext, useWatch} from 'react-hook-form';\nimport React, {ComponentType, Fragment} from 'react';\nimport {AdminSettings} from '../admin-settings';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\n\nexport function WebsocketSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Websockets\" />}\n      description={\n        <Fragment>\n          <Trans message=\"Configure websockets provider responsible for all realtime functionality on the site.\" />\n          <LearnMoreLink\n            className=\"mt-6 text-sm\"\n            link=\"https://marina.moda\"\n          />\n        </Fragment>\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      server: {\n        broadcast_driver: data.server.broadcast_driver ?? 'null',\n\n        // pusher\n        pusher_app_id: data.server.pusher_app_id ?? '',\n        pusher_app_key: data.server.pusher_app_key ?? '',\n        pusher_app_secret: data.server.pusher_app_secret ?? '',\n        pusher_app_cluster: data.server.pusher_app_cluster ?? '',\n\n        // reverb\n        reverb_app_id: data.server.reverb_app_id ?? '',\n        reverb_app_key: data.server.reverb_app_key ?? '',\n        reverb_app_secret: data.server.reverb_app_secret ?? '',\n        reverb_host: data.server.reverb_host ?? '',\n        reverb_port: data.server.reverb_port ?? '',\n        reverb_scheme: data.server.reverb_scheme ?? 'https',\n\n        // ably\n        ably_app_id: data.server.ably_app_id ?? '',\n        ably_app_key: data.server.ably_app_key ?? '',\n        ably_app_secret: data.server.ably_app_secret ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <DriverSection />\n    </AdminSettingsForm>\n  );\n}\n\nfunction DriverSection() {\n  const {clearErrors, control} = useFormContext<AdminSettings>();\n  const driver = useWatch({\n    control,\n    name: 'server.broadcast_driver',\n  });\n\n  let CredentialSection: ComponentType<CredentialsProps> | null = null;\n  if (driver === 'pusher') {\n    CredentialSection = PusherFields;\n  } else if (driver === 'ably') {\n    CredentialSection = AblyFields;\n  }\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"queue_group\"\n    >\n      {isInvalid => (\n        <Fragment>\n          <FormSelect\n            invalid={isInvalid}\n            onSelectionChange={() => clearErrors()}\n            selectionMode=\"single\"\n            name=\"server.broadcast_driver\"\n            label={<Trans message=\"Websockets provider\" />}\n            required\n          >\n            <Option value=\"null\">\n              <Trans message=\"None (Disabled)\" />\n            </Option>\n            <Option value=\"reverb\">Local</Option>\n            <Option value=\"pusher\">Pusher</Option>\n            <Option value=\"ably\">\n              <Trans message=\"Ably\" />\n            </Option>\n          </FormSelect>\n          {CredentialSection && (\n            <div className=\"mt-30\">\n              <CredentialSection isInvalid={isInvalid} />\n            </div>\n          )}\n        </Fragment>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n\ninterface CredentialsProps {\n  isInvalid: boolean;\n}\nfunction PusherFields({isInvalid}: CredentialsProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"server.pusher_app_id\"\n        label={<Trans message=\"Pusher app ID\" />}\n        className=\"mb-30\"\n        required\n      />\n      <FormTextField\n        name=\"server.pusher_app_key\"\n        label={<Trans message=\"Pusher app key\" />}\n        className=\"mb-30\"\n        required\n      />\n      <FormTextField\n        name=\"server.pusher_app_secret\"\n        label={<Trans message=\"Pusher app secret\" />}\n        className=\"mb-30\"\n        required\n      />\n      <FormTextField\n        name=\"server.pusher_app_cluster\"\n        label={<Trans message=\"Pusher app cluster\" />}\n        className=\"mb-30\"\n        placeholder=\"mt1\"\n        required\n      />\n    </Fragment>\n  );\n}\n\nfunction AblyFields({isInvalid}: CredentialsProps) {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"server.ably_app_id\"\n        label={<Trans message=\"Ably app ID\" />}\n        className=\"mb-30\"\n        required\n      />\n      <FormTextField\n        name=\"server.ably_app_key\"\n        label={<Trans message=\"Ably app key\" />}\n        className=\"mb-30\"\n        required\n      />\n      <FormTextField\n        name=\"server.ably_app_secret\"\n        label={<Trans message=\"Ably app secret\" />}\n        className=\"mb-30\"\n        required\n      />\n    </Fragment>\n  );\n}\n","import {useForm, useFormContext} from 'react-hook-form';\nimport React, {Fragment, useContext} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {Trans} from '@ui/i18n/trans';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\n\nexport function RecaptchaSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Recaptcha\" />}\n      description={\n        <Trans message=\"Configure google recaptcha integration and credentials.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const {settings} = useContext(SiteConfigContext);\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        recaptcha: {\n          enable: {\n            link_creation:\n              data.client.recaptcha?.enable?.link_creation ?? false,\n            contact: data.client.recaptcha?.enable?.contact ?? false,\n            register: data.client.recaptcha?.enable?.register ?? false,\n          },\n          site_key: data.client.recaptcha?.site_key ?? '',\n          secret_key: data.client.recaptcha?.secret_key ?? '',\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      {settings?.showRecaptchaLinkSwitch && (\n        <FormSwitch\n          className=\"mb-30\"\n          name=\"client.recaptcha.enable.link_creation\"\n          description={\n            <Trans message=\"Enable recaptcha integration when creating links from homepage or user dashboard.\" />\n          }\n        >\n          <Trans message=\"Link creation\" />\n        </FormSwitch>\n      )}\n      <FormSwitch\n        className=\"mb-30\"\n        name=\"client.recaptcha.enable.contact\"\n        description={\n          <Trans\n            message={'Enable recaptcha integration for \"contact us\" page.'}\n          />\n        }\n      >\n        <Trans message=\"Contact page\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-30\"\n        name=\"client.recaptcha.enable.register\"\n        description={\n          <Trans message=\"Enable recaptcha integration for registration page.\" />\n        }\n      >\n        <Trans message=\"Registration page\" />\n      </FormSwitch>\n      <RecaptchaSection />\n    </AdminSettingsForm>\n  );\n}\n\nfunction RecaptchaSection() {\n  const {clearErrors} = useFormContext();\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"recaptcha_group\"\n    >\n      {isInvalid => {\n        return (\n          <>\n            <FormTextField\n              className=\"mb-30\"\n              onChange={() => {\n                clearErrors();\n              }}\n              invalid={isInvalid}\n              name=\"client.recaptcha.site_key\"\n              label={<Trans message=\"Recaptcha v3 site key\" />}\n            />\n            <FormTextField\n              onChange={() => {\n                clearErrors();\n              }}\n              invalid={isInvalid}\n              name=\"client.recaptcha.secret_key\"\n              label={<Trans message=\"Recaptcha v3 secret key\" />}\n            />\n          </>\n        );\n      }}\n    </SettingsErrorGroup>\n  );\n}\n","import React, {ChangeEventHandler} from 'react';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {useController} from 'react-hook-form';\nimport clsx from 'clsx';\nimport {BaseFieldProps} from './base-field-props';\nimport {useField} from './use-field';\nimport {getInputFieldClassNames} from './get-input-field-class-names';\nimport {Field} from './field';\nimport {TextFieldProps} from './text-field/text-field';\n\nexport interface FileFieldProps\n  extends Omit<BaseFieldProps, 'type'> {\n  onChange?: ChangeEventHandler<'input'>;\n  accept?: string;\n}\nexport const FileField = React.forwardRef<HTMLInputElement, FileFieldProps>(\n  (props, ref) => {\n    const inputRef = useObjectRef(ref);\n\n    const {fieldProps, inputProps} = useField({...props, focusRef: inputRef});\n\n    const inputFieldClassNames = getInputFieldClassNames(props);\n\n    return (\n      <Field ref={ref} fieldClassNames={inputFieldClassNames} {...fieldProps}>\n        <input\n          type=\"file\"\n          ref={inputRef}\n          {...inputProps as any}\n          className={clsx(\n            inputFieldClassNames.input,\n            'py-8',\n            'file:bg-primary file:text-on-primary file:border-none file:rounded file:text-sm file:font-semibold file:px-10 file:h-24 file:mr-10'\n          )}\n        />\n      </Field>\n    );\n  }\n);\n\nexport interface FormFileFieldProps extends FileFieldProps {\n  name: string;\n}\nexport function FormFileField({name, ...props}: FormFileFieldProps) {\n  const {\n    field: {onChange, onBlur, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name,\n  });\n\n  const [value, setValue] = React.useState('');\n\n  const formProps: TextFieldProps = {\n    onChange: e => {\n      onChange(e.target.files?.[0]);\n      setValue(e.target.value);\n    },\n    onBlur,\n    value,\n    invalid,\n    errorMessage: error?.message,\n  };\n\n  return <FileField ref={ref} {...mergeProps(formProps, props)} />;\n}\n","import {useForm, useFormContext} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormFileField} from '@ui/forms/input-field/file-field';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {Fragment} from 'react';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\n\nexport function ReportsSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Analytics\" />}\n      description={\n        <Trans message=\"Configure google analytics integration and credentials.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      files: {\n        certificate: '',\n      },\n      server: {\n        analytics_property_id: data.server.analytics_property_id ?? '',\n      },\n      client: {\n        analytics: {\n          tracking_code: data.client.analytics?.tracking_code ?? '',\n          gchart_api_key: data.client.analytics?.gchart_api_key ?? '',\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <AnalyticsSection />\n    </AdminSettingsForm>\n  );\n}\n\nfunction AnalyticsSection() {\n  const {clearErrors} = useFormContext();\n  return (\n    <SettingsErrorGroup\n      separatorTop={false}\n      separatorBottom={false}\n      name=\"analytics_group\"\n    >\n      {isInvalid => (\n        <Fragment>\n          <FormFileField\n            className=\"mb-30\"\n            onChange={() => clearErrors()}\n            invalid={isInvalid}\n            name=\"files.certificate\"\n            accept=\".json\"\n            label={<Trans message=\"Google service account key file (.json)\" />}\n          />\n          <FormTextField\n            className=\"mb-30\"\n            onChange={() => clearErrors()}\n            invalid={isInvalid}\n            name=\"server.analytics_property_id\"\n            type=\"number\"\n            label={<Trans message=\"Google analytics property ID\" />}\n          />\n          <FormTextField\n            className=\"mb-30\"\n            onChange={() => clearErrors()}\n            invalid={isInvalid}\n            name=\"client.analytics.tracking_code\"\n            placeholder=\"G-******\"\n            min=\"1\"\n            max=\"20\"\n            description={\n              <Trans message=\"Google analytics measurement ID only, not the whole javascript snippet.\" />\n            }\n            label={<Trans message=\"Google tag manager measurement ID\" />}\n          />\n          <FormTextField\n            name=\"client.analytics.gchart_api_key\"\n            label={<Trans message=\"Google maps javascript API key\" />}\n            description={\n              <Trans message=\"Only required in order to show world geochart on integrated analytics pages.\" />\n            }\n          />\n        </Fragment>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n","import {Chip} from '@ui/forms/input-field/chip-field/chip';\nimport React, {ReactElement, useState} from 'react';\nimport {useUploadAvatar} from '@common/auth/ui/account-settings/avatar/upload-avatar';\nimport {useRemoveAvatar} from '@common/auth/ui/account-settings/avatar/remove-avatar';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ImageSelector} from '@common/uploads/components/image-selector';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {User} from '@ui/types/user';\nimport {Trans} from '@ui/i18n/trans';\nimport {ErrorOutlineIcon} from '@ui/icons/material/ErrorOutline';\n\ninterface Props {\n  user: User;\n  badge?: ReactElement;\n}\nexport function UpdateUserPageHeader({user, badge}: Props) {\n  const isSuspended = user.banned_at !== null;\n  const banReason = user.bans?.[0]?.comment;\n  return (\n    <div className=\"container mx-auto mb-44 mt-38 px-24\">\n      <div className=\"flex gap-32\">\n        <div className=\"relative\">\n          <AvatarSelector user={user} />\n          <div className=\"absolute right-0 top-2\">{badge}</div>\n        </div>\n        <div>\n          {!!user.roles.length && (\n            <Chip radius=\"rounded-panel\" size=\"sm\" className=\"mb-6 w-max\">\n              {user.roles[0].name}\n            </Chip>\n          )}\n          <h1 className=\"text-2xl font-semibold\">{user.name}</h1>\n          <div className=\"mt-4 text-sm text-muted\">{user.email}</div>\n        </div>\n      </div>\n      {isSuspended && (\n        <div className=\"mt-24 flex w-max items-center gap-8 rounded-panel bg-danger-lighter px-10 py-6 text-sm text-danger-darker\">\n          <ErrorOutlineIcon size=\"sm\" />\n          {banReason ? (\n            <Trans message=\"Suspended: :reason\" values={{reason: banReason}} />\n          ) : (\n            <Trans message=\"Suspended\" />\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface AvatarManagerProps {\n  user: User;\n}\n\nfunction AvatarSelector({user}: AvatarManagerProps) {\n  const uploadAvatar = useUploadAvatar({user});\n  const removeAvatar = useRemoveAvatar({user});\n  const [value, setValue] = useState(user.image);\n  return (\n    <FileUploadProvider>\n      <ImageSelector\n        value={value}\n        diskPrefix=\"avatars\"\n        variant=\"avatar\"\n        stretchPreview\n        previewSize=\"w-90 h-90\"\n        placeholderIcon={\n          <Avatar label={user.name} size=\"w-full h-full text-2xl\" circle />\n        }\n        showRemoveButton\n        onChange={url => {\n          const onSuccess = {\n            onSuccess: () => setValue(url),\n          };\n          if (url) {\n            uploadAvatar.mutate({url}, onSuccess);\n          } else {\n            removeAvatar.mutate(undefined, onSuccess);\n          }\n        }}\n      />\n    </FileUploadProvider>\n  );\n}\n","import {useLocation} from 'react-router-dom';\nimport {useState} from 'react';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\n\nexport interface UrlBackedTabConfig {\n  uri: string;\n  label: MessageDescriptor;\n}\n\nexport function useUrlBackedTabs(config: UrlBackedTabConfig[]) {\n  const {pathname} = useLocation();\n  const tabName = pathname.split('/').pop();\n  return useState(() => {\n    const index = config.findIndex(tab => tab.uri === tabName);\n    return index === -1 ? 0 : index;\n  });\n}\n","import {Tabs} from '@ui/tabs/tabs';\nimport {TabList} from '@ui/tabs/tab-list';\nimport {Tab} from '@ui/tabs/tab';\nimport {Link, Outlet} from 'react-router-dom';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {useMemo} from 'react';\nimport {User} from '@ui/types/user';\nimport {\n  UrlBackedTabConfig,\n  useUrlBackedTabs,\n} from '@common/http/use-url-backed-tabs';\nimport {message} from '@ui/i18n/message';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useSettings} from '@ui/settings/use-settings';\n\nexport const updateUserPageTabs: UrlBackedTabConfig[] = [\n  {uri: 'details', label: message('Details')},\n  {uri: 'permissions', label: message('Roles & permissions')},\n  {uri: 'security', label: message('Security')},\n  {uri: 'date', label: message('Date & time')},\n  {uri: 'api', label: message('API')},\n];\n\ninterface Props {\n  tabs: UrlBackedTabConfig[];\n  user: User;\n}\nexport function UpdateUserPageTabs({user, tabs}: Props) {\n  const {user: authUser, hasPermission} = useAuth();\n  const {api} = useSettings();\n  const apiEnabled = api?.integrated && hasPermission('api.access');\n  const filteredTabs = useMemo(() => {\n    return tabs.filter(tab => {\n      if (tab.uri === 'api' && !apiEnabled) {\n        return false;\n      }\n      if (tab.uri === 'security' && user.id !== authUser?.id) {\n        return false;\n      }\n      return true;\n    });\n  }, [user.id, authUser?.id, apiEnabled, tabs]);\n\n  const [activeTab, setActiveTab] = useUrlBackedTabs(filteredTabs);\n\n  return (\n    <div className=\"container mx-auto px-24\">\n      <Tabs\n        selectedTab={activeTab}\n        onTabChange={setActiveTab}\n        overflow=\"overflow-visible\"\n      >\n        <TabList className=\"mb-24\">\n          {filteredTabs.map(tab => (\n            <Tab key={tab.uri} elementType={Link} to={tab.uri}>\n              <Trans {...tab.label} />\n            </Tab>\n          ))}\n        </TabList>\n        <Outlet context={user} />\n      </Tabs>\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\nexport function useDeleteUser() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: {userId: number}) => deleteUser(payload.userId),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('users'),\n      });\n      toast(trans(message('User deleted')));\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction deleteUser(userId: string | number) {\n  return apiClient.delete<Response>(`users/${userId}`).then(r => r.data);\n}\n","import {Menu, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {Button} from '@ui/buttons/button';\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\nimport {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\nimport React, {Fragment, ReactNode, useState} from 'react';\nimport {BanUserDialog} from '@common/admin/users/ban-user-dialog';\nimport {openDialog} from '@ui/overlays/store/dialog-store';\nimport {User} from '@ui/types/user';\nimport {useUnbanUser} from '@common/admin/users/requests/use-unban-user';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteUser} from '@common/admin/users/requests/use-delete-user';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\n\ninterface Props {\n  user: User;\n  children?: ReactNode;\n}\nexport function UpdateUserPageActions({user, children}: Props) {\n  const unban = useUnbanUser(user.id);\n  const isSuspended = user.banned_at !== null;\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  return (\n    <Fragment>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={deleteDialogOpen}\n        onOpenChange={setDeleteDialogOpen}\n      >\n        <DeleteUserDialog userId={user.id} />\n      </DialogTrigger>\n      <MenuTrigger>\n        <Button\n          className=\"ml-auto\"\n          variant=\"outline\"\n          size=\"sm\"\n          endIcon={<KeyboardArrowDownIcon />}\n        >\n          <Trans message=\"Actions\" />\n        </Button>\n        <Menu>\n          {children}\n          <Item\n            value=\"toggleSuspension\"\n            onSelected={() => {\n              if (isSuspended) {\n                unban.mutate();\n              } else {\n                openDialog(BanUserDialog, {user});\n              }\n            }}\n          >\n            {isSuspended ? (\n              <Trans message=\"Unsuspend user\" />\n            ) : (\n              <Trans message=\"Suspend user\" />\n            )}\n          </Item>\n          <Item\n            value=\"delete\"\n            onSelected={() => {\n              setDeleteDialogOpen(true);\n            }}\n          >\n            <Trans message=\"Delete user\" />\n          </Item>\n        </Menu>\n      </MenuTrigger>\n    </Fragment>\n  );\n}\n\ninterface DeleteUserDialogProps {\n  userId: number;\n}\nexport function DeleteUserDialog({userId}: DeleteUserDialogProps) {\n  const deleteUser = useDeleteUser();\n  const {close} = useDialogContext();\n  const navigate = useNavigate();\n  return (\n    <ConfirmationDialog\n      isDanger\n      isLoading={deleteUser.isPending}\n      title={<Trans message=\"Delete user\" />}\n      confirm={<Trans message=\"Delete\" />}\n      body={<Trans message=\"Are you sure you want to delete this user?\" />}\n      onConfirm={() => {\n        deleteUser.mutate(\n          {userId},\n          {\n            onSuccess: () => {\n              close();\n              navigate('..', {relative: 'path'});\n            },\n          },\n        );\n      }}\n    />\n  );\n}\n","import {Link, useParams} from 'react-router-dom';\nimport React, {Fragment} from 'react';\nimport {useUser} from '@common/auth/ui/use-user';\nimport {User} from '@ui/types/user';\nimport {Trans} from '@ui/i18n/trans';\nimport {CrupdateResourceHeader} from '@common/admin/crupdate-resource-layout';\nimport {UpdateUserPageHeader} from '@common/admin/users/update-user-page/update-user-page-header';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  updateUserPageTabs,\n  UpdateUserPageTabs,\n} from '@common/admin/users/update-user-page/update-user-page-tabs';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {ArrowBackIcon} from '@ui/icons/material/ArrowBack';\nimport {UpdateUserPageActions} from '@common/admin/users/update-user-page/update-user-page-actions';\n\nexport function UpdateUserPage() {\n  const {userId} = useParams();\n  const query = useUser(userId!, {\n    with: ['subscriptions', 'roles', 'permissions', 'bans'],\n  });\n\n  return (\n    <Fragment>\n      <StaticPageTitle>\n        <Trans message=\"Edit user\" />\n      </StaticPageTitle>\n      {query.data?.user ? (\n        <PageContent user={query.data.user} />\n      ) : (\n        <PageStatus query={query} />\n      )}\n    </Fragment>\n  );\n}\n\ninterface PageContentProps {\n  user: User;\n}\nfunction PageContent({user}: PageContentProps) {\n  return (\n    <Fragment>\n      <CrupdateResourceHeader\n        wrapInContainer\n        startActions={\n          <IconButton\n            elementType={Link}\n            to=\"..\"\n            relative=\"path\"\n            size=\"sm\"\n            iconSize=\"md\"\n          >\n            <ArrowBackIcon />\n          </IconButton>\n        }\n        endActions={<UpdateUserPageActions user={user} />}\n      >\n        <Trans message=\"Edit user\" />\n      </CrupdateResourceHeader>\n      <UpdateUserPageHeader user={user} />\n      <UpdateUserPageTabs tabs={updateUserPageTabs} user={user} />\n    </Fragment>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const TranslateIcon = createSvgIcon(\n  <path d=\"m12.87 15.07-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7 1.62-4.33L19.12 17h-3.24z\" />\n, 'TranslateOutlined');\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {Localization} from '@ui/i18n/localization';\nimport {apiClient} from '../../http/query-client';\n\nexport interface FetchLocaleWithLinesResponse extends BackendResponse {\n  localization: Localization;\n}\n\nexport const getLocalWithLinesQueryKey = (localeId?: number | string) => {\n  const key: (string | number)[] = ['getLocaleWithLines'];\n  if (localeId != null) {\n    key.push(localeId);\n  }\n  return key;\n};\n\nexport function useLocaleWithLines(localeId: number | string) {\n  return useQuery({\n    queryKey: getLocalWithLinesQueryKey(localeId),\n    queryFn: () => fetchLocaleWithLines(localeId),\n    staleTime: Infinity,\n  });\n}\n\nfunction fetchLocaleWithLines(\n  localeId: number | string,\n): Promise<FetchLocaleWithLinesResponse> {\n  return apiClient\n    .get(`localizations/${localeId}`)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '@ui/toast/toast';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\nimport {Localization} from '@ui/i18n/localization';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\nimport {getLocalWithLinesQueryKey} from './use-locale-with-lines';\n\ninterface Response extends BackendResponse {\n  localization: Localization;\n}\n\nfunction UpdateLocalization({\n  id,\n  ...other\n}: Partial<Localization>): Promise<Response> {\n  return apiClient.put(`localizations/${id}`, other).then(r => r.data);\n}\n\nexport function useUpdateLocalization(\n  form?: UseFormReturn<Partial<Localization>>,\n) {\n  return useMutation({\n    mutationFn: (props: Partial<Localization>) => UpdateLocalization(props),\n    onSuccess: () => {\n      toast(message('Localization updated'));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('localizations'),\n      });\n      queryClient.invalidateQueries({queryKey: getLocalWithLinesQueryKey()});\n    },\n    onError: r => (form ? onFormQueryError(r, form) : showHttpErrorToast(r)),\n  });\n}\n","import {useForm} from 'react-hook-form';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Form} from '@ui/forms/form';\nimport {Localization} from '@ui/i18n/localization';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useValueLists} from '../../http/value-lists';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useUpdateLocalization} from './update-localization';\nimport {message} from '@ui/i18n/message';\nimport {useTrans} from '@ui/i18n/use-trans';\n\ninterface UpdateLocalizationDialogProps {\n  localization: Localization;\n}\nexport function UpdateLocalizationDialog({\n  localization,\n}: UpdateLocalizationDialogProps) {\n  const {trans} = useTrans();\n  const {formId, close} = useDialogContext();\n  const form = useForm<Partial<Localization>>({\n    defaultValues: {\n      id: localization.id,\n      name: localization.name,\n      language: localization.language,\n    },\n  });\n\n  const {data} = useValueLists(['languages']);\n  const languages = data?.languages || [];\n\n  const updateLocalization = useUpdateLocalization(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Update localization\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            updateLocalization.mutate(values, {onSuccess: close});\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-30\"\n            required\n          />\n          <FormSelect\n            required\n            name=\"language\"\n            label={<Trans message=\"Language\" />}\n            selectionMode=\"single\"\n            showSearchField\n            searchPlaceholder={trans(message('Search languages'))}\n          >\n            {languages.map(language => (\n              <Option value={language.code} key={language.code}>\n                {language.name}\n              </Option>\n            ))}\n          </FormSelect>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={updateLocalization.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '@ui/toast/toast';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient} from '../../http/query-client';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {Localization} from '@ui/i18n/localization';\n\ninterface Response extends BackendResponse {\n  localization: Localization;\n}\n\nexport interface CreateLocalizationPayload {\n  name: string;\n  language: string;\n}\n\nfunction createLocalization(\n  payload: CreateLocalizationPayload,\n): Promise<Response> {\n  return apiClient.post(`localizations`, payload).then(r => r.data);\n}\n\nexport function useCreateLocalization(\n  form: UseFormReturn<CreateLocalizationPayload>,\n) {\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: (props: CreateLocalizationPayload) => createLocalization(props),\n    onSuccess: () => {\n      toast(message('Localization created'));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('localizations'),\n      });\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n","import {useForm} from 'react-hook-form';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useValueLists} from '../../http/value-lists';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {\n  CreateLocalizationPayload,\n  useCreateLocalization,\n} from './create-localization';\nimport {message} from '@ui/i18n/message';\nimport {useTrans} from '@ui/i18n/use-trans';\n\nexport function CreateLocationDialog() {\n  const {trans} = useTrans();\n  const {formId, close} = useDialogContext();\n  const form = useForm<CreateLocalizationPayload>({\n    defaultValues: {\n      language: 'en',\n    },\n  });\n\n  const {data} = useValueLists(['languages']);\n  const languages = data?.languages || [];\n\n  const createLocalization = useCreateLocalization(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create localization\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            createLocalization.mutate(values, {onSuccess: close});\n          }}\n        >\n          <FormTextField\n            autoFocus\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-30\"\n            required\n          />\n          <FormSelect\n            required\n            name=\"language\"\n            label={<Trans message=\"Language\" />}\n            selectionMode=\"single\"\n            showSearchField\n            searchPlaceholder={trans(message('Search languages'))}\n          >\n            {languages.map(language => (\n              <Option value={language.code} key={language.code}>\n                {language.name}\n              </Option>\n            ))}\n          </FormSelect>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={createLocalization.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","export default \"__VITE_ASSET__5bb85b7d__\"","import {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\nimport {Localization} from '@ui/i18n/localization';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\nimport {getLocalWithLinesQueryKey} from './use-locale-with-lines';\nimport {UploadedFile} from '@ui/utils/files/uploaded-file';\n\ninterface Response extends BackendResponse {\n  localization: Localization;\n}\n\ninterface Payload {\n  file: UploadedFile;\n  localeId: string | number;\n}\n\nexport function useUploadTranslationFile() {\n  return useMutation({\n    mutationFn: (payload: Payload) => uploadFile(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('localizations'),\n      });\n      await queryClient.invalidateQueries({\n        queryKey: getLocalWithLinesQueryKey(),\n      });\n      toast(message('Translation file uploaded'));\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction uploadFile({localeId, file}: Payload): Promise<Response> {\n  const data = new FormData();\n  data.append('file', file.native);\n  return apiClient\n    .post(`localizations/${localeId}/upload`, data)\n    .then(r => r.data);\n}\n","import React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {Localization} from '@ui/i18n/localization';\nimport {TranslateIcon} from '@ui/icons/material/Translate';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {UpdateLocalizationDialog} from './update-localization-dialog';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {CreateLocationDialog} from './create-localization-dialog';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport aroundTheWorldSvg from './around-the-world.svg';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {openDialog} from '@ui/overlays/store/dialog-store';\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {useUploadTranslationFile} from '@common/admin/translations/use-upload-translation-file';\nimport {openUploadWindow} from '@ui/utils/files/open-upload-window';\nimport {FileInputType} from '@ui/utils/files/file-input-config';\n\nconst columnConfig: ColumnConfig<Localization>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    sortingKey: 'name',\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Name\" />,\n    body: locale => locale.name,\n  },\n  {\n    key: 'language',\n    allowsSorting: true,\n    sortingKey: 'language',\n    header: () => <Trans message=\"Language code\" />,\n    body: locale => locale.language,\n  },\n  {\n    key: 'updatedAt',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: locale => <FormattedDate date={locale.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-84 flex-shrink-0',\n    visibleInMode: 'all',\n    body: locale => {\n      return (\n        <div className=\"text-muted\">\n          <Tooltip label={<Trans message=\"Translate\" />}>\n            <IconButton\n              size=\"md\"\n              elementType={Link}\n              to={`${locale.id}/translate`}\n            >\n              <TranslateIcon />\n            </IconButton>\n          </Tooltip>\n\n          <FileUploadProvider>\n            <RowActionsMenuTrigger locale={locale} />\n          </FileUploadProvider>\n        </div>\n      );\n    },\n  },\n];\n\nexport function LocalizationIndex() {\n  return (\n    <DataTablePage\n      endpoint=\"localizations\"\n      title={<Trans message=\"Localizations\" />}\n      columns={columnConfig}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={aroundTheWorldSvg}\n          title={<Trans message=\"No localizations have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching localizations\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <Fragment>\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new localization\" />\n        </DataTableAddItemButton>\n        <CreateLocationDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n\ninterface RowActionsMenuTriggerProps {\n  locale: Localization;\n}\nfunction RowActionsMenuTrigger({locale}: RowActionsMenuTriggerProps) {\n  const uploadFile = useUploadTranslationFile();\n  return (\n    <MenuTrigger>\n      <IconButton disabled={uploadFile.isPending}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu>\n        <MenuItem\n          value=\"translate\"\n          elementType={Link}\n          to={`${locale.id}/translate`}\n        >\n          <Trans message=\"Translate\" />\n        </MenuItem>\n        <MenuItem\n          value=\"rename\"\n          onSelected={() =>\n            openDialog(UpdateLocalizationDialog, {localization: locale})\n          }\n        >\n          <Trans message=\"Rename\" />\n        </MenuItem>\n        <MenuItem\n          value=\"download\"\n          onSelected={() =>\n            downloadFileFromUrl(`api/v1/localizations/${locale.id}/download`)\n          }\n        >\n          <Trans message=\"Download\" />\n        </MenuItem>\n        <MenuItem\n          value=\"upload\"\n          onSelected={async () => {\n            const files = await openUploadWindow({\n              types: [FileInputType.json],\n            });\n            if (files.length == 1) {\n              uploadFile.mutate({localeId: locale.id, file: files[0]});\n            }\n          }}\n        >\n          <Trans message=\"Upload\" />\n        </MenuItem>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {SectionHelper} from '../../ui/other/section-helper';\n\ninterface FormValue {\n  key: string;\n  value: string;\n}\n\nexport function NewTranslationDialog() {\n  const {formId, close} = useDialogContext();\n  const form = useForm<FormValue>();\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Add translation\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            close(values);\n          }}\n        >\n          <SectionHelper\n            className=\"mb-30\"\n            title={\n              <Trans message=\"Add a new translation, if it does not exist already.\" />\n            }\n            description={\n              <Trans message=\"This should only need to be done for things like custom menu items.\" />\n            }\n          />\n          <FormTextField\n            inputElementType=\"textarea\"\n            rows={2}\n            autoFocus\n            name=\"key\"\n            label={<Trans message=\"Translation key\" />}\n            className=\"mb-30\"\n            required\n          />\n          <FormTextField\n            inputElementType=\"textarea\"\n            rows={2}\n            name=\"value\"\n            label={<Trans message=\"Translation value\" />}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button variant=\"flat\" color=\"primary\" type=\"submit\" form={formId}>\n          <Trans message=\"Add\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import React, {useMemo, useRef, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {useLocaleWithLines} from './use-locale-with-lines';\nimport {Trans} from '@ui/i18n/trans';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {Button} from '@ui/buttons/button';\nimport {Breadcrumb} from '@ui/breadcrumbs/breadcrumb';\nimport {BreadcrumbItem} from '@ui/breadcrumbs/breadcrumb-item';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {SearchIcon} from '@ui/icons/material/Search';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {NewTranslationDialog} from './new-translation-dialog';\nimport {useUpdateLocalization} from './update-localization';\nimport {Localization} from '@ui/i18n/localization';\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {useNavigate} from '../../ui/navigation/use-navigate';\nimport {useUploadTranslationFile} from '@common/admin/translations/use-upload-translation-file';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\nimport {openUploadWindow} from '@ui/utils/files/open-upload-window';\n\nimport {FileInputType} from '@ui/utils/files/file-input-config';\n\ntype Lines = Record<string, string>;\n\nexport function TranslationManagementPage() {\n  const {localeId} = useParams();\n\n  const {data, isLoading} = useLocaleWithLines(localeId!);\n  const localization = data?.localization;\n\n  if (isLoading || !localization) {\n    return <FullPageLoader />;\n  }\n\n  return <Form localization={localization} />;\n}\n\ninterface FormProps {\n  localization: Localization;\n}\nfunction Form({localization}: FormProps) {\n  const [lines, setLines] = useState<Lines>(localization.lines || {});\n\n  const navigate = useNavigate();\n  const updateLocalization = useUpdateLocalization();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  return (\n    <form\n      className=\"flex h-full flex-col p-14 md:p-24\"\n      onSubmit={e => {\n        e.preventDefault();\n        updateLocalization.mutate(\n          {id: localization.id, lines},\n          {\n            onSuccess: () => {\n              navigate('/admin/localizations');\n            },\n          },\n        );\n      }}\n    >\n      <Header\n        localization={localization}\n        setLines={setLines}\n        lines={lines}\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n        isLoading={updateLocalization.isPending}\n      />\n      <LinesList lines={lines} setLines={setLines} searchQuery={searchQuery} />\n    </form>\n  );\n}\n\ninterface HeaderProps {\n  localization: Localization;\n  lines: Lines;\n  setLines: (lines: Lines) => void;\n  searchQuery: string;\n  setSearchQuery: (value: string) => void;\n  isLoading: boolean;\n}\nfunction Header({\n  localization,\n  searchQuery,\n  setSearchQuery,\n  isLoading,\n  lines,\n  setLines,\n}: HeaderProps) {\n  const navigate = useNavigate();\n  const isMobile = useIsMobileMediaQuery();\n  const {trans} = useTrans();\n\n  return (\n    <div className=\"flex-shrink-0\">\n      <Breadcrumb size=\"lg\" className=\"mb-16\">\n        <BreadcrumbItem\n          onSelected={() => {\n            navigate('/admin/localizations');\n          }}\n        >\n          <Trans message=\"Localizations\" />\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Trans\n            message=\":locale translations\"\n            values={{locale: localization.name}}\n          />\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <div className=\"mb-24 flex items-center gap-32 md:gap-12\">\n        <div className=\"max-w-440 flex-auto\">\n          <TextField\n            value={searchQuery}\n            onChange={e => setSearchQuery(e.target.value)}\n            startAdornment={<SearchIcon />}\n            placeholder={trans({message: 'Type to search...'})}\n          />\n        </div>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={newTranslation => {\n            if (newTranslation) {\n              const newLines = {...lines};\n              newLines[newTranslation.key] = newTranslation.value;\n              setLines(newLines);\n            }\n          }}\n        >\n          {!isMobile && (\n            <Button\n              className=\"ml-auto\"\n              variant=\"outline\"\n              color=\"primary\"\n              startIcon={<AddIcon />}\n            >\n              <Trans message=\"Add new\" />\n            </Button>\n          )}\n          <NewTranslationDialog />\n        </DialogTrigger>\n        <ActionsMenuTrigger locale={localization} />\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={isLoading}\n        >\n          {isMobile ? (\n            <Trans message=\"Save\" />\n          ) : (\n            <Trans message=\"Save translations\" />\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface LinesListProps {\n  searchQuery?: string;\n  lines: Lines;\n  setLines: (lines: Lines) => void;\n}\nfunction LinesList({searchQuery, lines, setLines}: LinesListProps) {\n  const filteredLines = useMemo(() => {\n    return Object.entries(lines).filter(([id, translation]) => {\n      const lowerCaseQuery = searchQuery?.toLowerCase();\n      return (\n        !lowerCaseQuery ||\n        id?.toLowerCase().includes(lowerCaseQuery) ||\n        translation?.toLowerCase().includes(lowerCaseQuery)\n      );\n    });\n  }, [lines, searchQuery]);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const rowVirtualizer = useVirtualizer({\n    count: filteredLines.length,\n    getScrollElement: () => ref.current,\n    estimateSize: () => 123,\n  });\n\n  return (\n    <div className=\"flex-auto overflow-y-auto\" ref={ref}>\n      <div\n        className=\"relative w-full\"\n        style={{\n          height: `${rowVirtualizer.getTotalSize()}px`,\n        }}\n      >\n        {rowVirtualizer.getVirtualItems().map(virtualItem => {\n          const [id, translation] = filteredLines[virtualItem.index];\n          return (\n            <div\n              key={id}\n              className=\"absolute left-0 top-0 w-full\"\n              style={{\n                height: `${virtualItem.size}px`,\n                transform: `translateY(${virtualItem.start}px)`,\n              }}\n            >\n              <div className=\"mb-10 rounded border md:mr-10\">\n                <div className=\"flex items-center justify-between gap-24 border-b px-10 py-2\">\n                  <label\n                    className=\"flex-auto text-xs font-semibold\"\n                    htmlFor={id}\n                  >\n                    {id}\n                  </label>\n                  <IconButton\n                    size=\"xs\"\n                    className=\"text-muted\"\n                    onClick={() => {\n                      const newLines = {...lines};\n                      delete newLines[id];\n                      setLines(newLines);\n                    }}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n                <div>\n                  <textarea\n                    id={id}\n                    name={id}\n                    defaultValue={translation}\n                    className=\"block w-full resize-none rounded bg-inherit p-10 text-sm outline-none focus-visible:ring-2\"\n                    rows={2}\n                    onChange={e => {\n                      const newLines = {...lines};\n                      newLines[id] = e.target.value;\n                      setLines(newLines);\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\ninterface ActionsMenuTriggerProps {\n  locale: Localization;\n}\nfunction ActionsMenuTrigger({locale}: ActionsMenuTriggerProps) {\n  const uploadFile = useUploadTranslationFile();\n  return (\n    <MenuTrigger>\n      <IconButton\n        variant=\"outline\"\n        size=\"sm\"\n        color=\"primary\"\n        disabled={uploadFile.isPending}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu>\n        <MenuItem\n          value=\"download\"\n          onSelected={() =>\n            downloadFileFromUrl(`api/v1/localizations/${locale.id}/download`)\n          }\n        >\n          <Trans message=\"Download\" />\n        </MenuItem>\n        <MenuItem\n          value=\"upload\"\n          onSelected={async () => {\n            const files = await openUploadWindow({\n              types: [FileInputType.json],\n            });\n            if (files.length == 1) {\n              uploadFile.mutate({localeId: locale.id, file: files[0]});\n            }\n          }}\n        >\n          <Trans message=\"Upload\" />\n        </MenuItem>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {useContext} from 'react';\nimport {\n  AdConfig,\n  SiteConfigContext,\n} from '../../core/settings/site-config-context';\nimport {Form} from '@ui/forms/form';\nimport {useForm} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {useAdminSettings} from '../settings/requests/use-admin-settings';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {Settings} from '@ui/settings/settings';\nimport {\n  AdminSettingsWithFiles,\n  useUpdateAdminSettings,\n} from '../settings/requests/use-update-admin-settings';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ImageZoomDialog} from '@ui/overlays/dialog/image-zoom-dialog';\nimport {StaticPageTitle} from '../../seo/static-page-title';\n\nexport function AdsPage() {\n  const query = useAdminSettings();\n\n  return (\n    <div className=\"container mx-auto p-12 md:p-24\">\n      <StaticPageTitle>\n        <Trans message=\"Ads\" />\n      </StaticPageTitle>\n      <h1 className=\"mb-20 text-2xl font-light md:mb-40 md:text-3xl\">\n        <Trans message=\"Predefined Ad slots\" />\n      </h1>\n      {query.isLoading ? (\n        <ProgressCircle isIndeterminate />\n      ) : (\n        <AdsForm defaultValues={query.data?.client.ads || {}} />\n      )}\n    </div>\n  );\n}\n\ninterface AdsFormProps {\n  defaultValues: Settings['ads'];\n}\nfunction AdsForm({defaultValues}: AdsFormProps) {\n  const {\n    admin: {ads},\n  } = useContext(SiteConfigContext);\n\n  const form = useForm<AdminSettingsWithFiles>({\n    defaultValues: {client: {ads: defaultValues}},\n  });\n  const updateSettings = useUpdateAdminSettings(form);\n\n  return (\n    <Form\n      form={form}\n      onSubmit={value => {\n        updateSettings.mutate(value);\n      }}\n    >\n      {ads.map(ad => {\n        return <AdSection key={ad.slot} adConfig={ad} />;\n      })}\n      <FormSwitch\n        name=\"client.ads.disable\"\n        className=\"mb-30\"\n        description={\n          <Trans message=\"Disable all add related functionality across the site.\" />\n        }\n      >\n        <Trans message=\"Disable ads\" />\n      </FormSwitch>\n      <Button\n        type=\"submit\"\n        variant=\"flat\"\n        color=\"primary\"\n        disabled={updateSettings.isPending}\n      >\n        <Trans message=\"Save\" />\n      </Button>\n    </Form>\n  );\n}\n\ninterface AdSectionProps {\n  adConfig: AdConfig;\n}\nfunction AdSection({adConfig}: AdSectionProps) {\n  return (\n    <div className=\"flex items-center gap-24\">\n      <FormTextField\n        className=\"mb-30 flex-auto\"\n        name={`client.${adConfig.slot}`}\n        inputElementType=\"textarea\"\n        rows={8}\n        label={<Trans {...adConfig.description} />}\n      />\n      <DialogTrigger type=\"modal\">\n        <button\n          type=\"button\"\n          className=\"cursor-zoom-in overflow-hidden rounded outline-none transition hover:scale-105 focus-visible:ring max-md:hidden\"\n        >\n          <img\n            src={adConfig.image}\n            className=\"h-[186px] w-auto border\"\n            alt=\"Ad slot example\"\n          />\n        </button>\n        <ImageZoomDialog image={adConfig.image} />\n      </DialogTrigger>\n    </div>\n  );\n}\n","import {NavLink} from 'react-router-dom';\nimport {AppearanceButton} from './appearance-button';\nimport {useAppearanceStore} from './appearance-store';\nimport {Trans} from '@ui/i18n/trans';\nimport {useMemo} from 'react';\nimport {AppearanceEditorLayout} from '@common/admin/appearance/appearance-editor-form';\n\nexport function SectionList() {\n  const sections = useAppearanceStore(s => s.config?.sections);\n  const sortedSection = useMemo(() => {\n    if (!sections) return [];\n    return Object.entries(sections || [])\n      .map(([key, value]) => {\n        return {\n          ...value,\n          key,\n        };\n      })\n      .sort((a, b) => (a?.position || 1) - (b?.position || 1));\n  }, [sections]);\n\n  return (\n    <AppearanceEditorLayout>\n      {sortedSection.map(section => (\n        <AppearanceButton\n          key={section.key}\n          to={section.key}\n          elementType={NavLink}\n        >\n          <Trans {...section.label} />\n        </AppearanceButton>\n      ))}\n    </AppearanceEditorLayout>\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const RoleIndexPageFilters: BackendFilter[] = [\n  {\n    key: 'type',\n    label: message('Type'),\n    description: message('Type of the role'),\n    defaultOperator: FilterOperator.ne,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('Sitewide'),\n          value: 'sitewide',\n        },\n        {\n          key: '02',\n          label: message('Workspace'),\n          value: 'workspace',\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date role was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date role was last updated'),\n  }),\n];\n","import React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {Role} from '../../auth/role';\nimport teamSvg from './team.svg';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport {RoleIndexPageFilters} from './role-index-page-filters';\nimport {DataTableExportCsvButton} from '../../datatable/csv-export/data-table-export-csv-button';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\n\nconst columnConfig: ColumnConfig<Role>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Role\" />,\n    body: role => (\n      <div>\n        <div>\n          <Trans message={role.name} />\n        </div>\n        <div className=\"overflow-x-hidden overflow-ellipsis text-xs text-muted\">\n          {role.description ? <Trans message={role.description} /> : undefined}\n        </div>\n      </div>\n    ),\n  },\n  {\n    key: 'type',\n    maxWidth: 'max-w-100',\n    allowsSorting: true,\n    header: () => <Trans message=\"Type\" />,\n    body: role => <Trans message={role.type} />,\n  },\n  {\n    key: 'updated_at',\n    maxWidth: 'max-w-100',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last updated\" />,\n    body: role => <FormattedDate date={role.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    visibleInMode: 'all',\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    body: role => {\n      return (\n        <Link to={`${role.id}/edit`}>\n          <IconButton size=\"md\" className=\"text-muted\">\n            <EditIcon />\n          </IconButton>\n        </Link>\n      );\n    },\n  },\n];\n\nexport function RolesIndexPage() {\n  return (\n    <DataTablePage\n      endpoint=\"roles\"\n      title={<Trans message=\"Roles\" />}\n      columns={columnConfig}\n      filters={RoleIndexPageFilters}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={teamSvg}\n          title={<Trans message=\"No roles have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching roles\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <Fragment>\n      <DataTableExportCsvButton endpoint=\"roles/csv/export\" />\n      <DataTableAddItemButton elementType={Link} to=\"new\">\n        <Trans message=\"Add new role\" />\n      </DataTableAddItemButton>\n    </Fragment>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {Role} from '@common/auth/role';\nimport {useParams} from 'react-router-dom';\n\nconst Endpoint = (id: number | string) => `roles/${id}`;\n\nexport interface FetchRoleResponse extends BackendResponse {\n  role: Role;\n}\n\nexport function useRole() {\n  const {roleId} = useParams();\n  return useQuery({\n    queryKey: [Endpoint(roleId!)],\n    queryFn: () => fetchRole(roleId!),\n  });\n}\n\nfunction fetchRole(roleId: number | string): Promise<FetchRoleResponse> {\n  return apiClient.get(Endpoint(roleId)).then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {Role} from '@common/auth/role';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\n\ninterface Response extends BackendResponse {\n  role: Role;\n}\n\ninterface Payload extends Partial<Role> {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `roles/${id}`;\n\nexport function useUpdateRole() {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: Payload) => updateRole(payload),\n    onSuccess: response => {\n      toast(trans(message('Role updated')));\n      queryClient.invalidateQueries({queryKey: [Endpoint(response.role.id)]});\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('roles')});\n      navigate('/admin/roles');\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateRole({id, ...payload}: Payload): Promise<Response> {\n  return apiClient.put(Endpoint(id), payload).then(r => r.data);\n}\n","import {Role} from '@common/auth/role';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useFormContext} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {message} from '@ui/i18n/message';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {FormPermissionSelector} from '@common/auth/ui/permission-selector';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {Button} from '@ui/buttons/button';\n\ninterface CrupdateRolePageSettingsPanelProps {\n  isInternal?: boolean;\n}\nexport function CrupdateRolePageSettingsPanel({\n  isInternal = false,\n}: CrupdateRolePageSettingsPanelProps) {\n  const {trans} = useTrans();\n  const {workspaces} = useSettings();\n  const {watch, setValue} = useFormContext<Role>();\n  const watchedType = watch('type');\n\n  return (\n    <>\n      <FormTextField\n        label={<Trans message=\"Name\" />}\n        name=\"name\"\n        className=\"mb-20\"\n        required\n      />\n      <FormTextField\n        label={<Trans message=\"Description\" />}\n        name=\"description\"\n        inputElementType=\"textarea\"\n        placeholder={trans(message('Role description...'))}\n        rows={4}\n        className=\"mb-20\"\n      />\n      {workspaces.integrated && (\n        <FormSelect\n          label={<Trans message=\"Type\" />}\n          name=\"type\"\n          selectionMode=\"single\"\n          className=\"mb-20\"\n          description={\n            <Trans message=\"Whether this role will be assigned to users globally on the site or only within workspaces.\" />\n          }\n        >\n          <Item value=\"sitewide\">\n            <Trans message=\"Sitewide\" />\n          </Item>\n          <Item value=\"workspace\">\n            <Trans message=\"Workspace\" />\n          </Item>\n        </FormSelect>\n      )}\n      {!isInternal && (\n        <>\n          <FormSwitch\n            name=\"default\"\n            className=\"mb-20\"\n            description={\n              <Trans message=\"Assign this role to new users automatically.\" />\n            }\n          >\n            <Trans message=\"Default\" />\n          </FormSwitch>\n          {watchedType === 'sitewide' && (\n            <FormSwitch\n              name=\"guests\"\n              description={\n                <Trans message=\"Assign this role to guests (not logged in users).\" />\n              }\n            >\n              <Trans message=\"Guests\" />\n            </FormSwitch>\n          )}\n        </>\n      )}\n      <div className=\"mb-14 mt-30 flex items-end justify-between gap-12\">\n        <h2 className=\"text-lg leading-tight\">\n          <Trans message=\"Permissions\" />\n        </h2>\n        <Button\n          variant=\"outline\"\n          size=\"xs\"\n          onClick={() => setValue('permissions', [])}\n        >\n          <Trans message=\"Remove all\" />\n        </Button>\n      </div>\n      <FormPermissionSelector\n        name=\"permissions\"\n        valueListKey={\n          watchedType === 'sitewide' ? 'permissions' : 'workspacePermissions'\n        }\n      />\n    </>\n  );\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@ui/icons/material/Search';\nimport {useState} from 'react';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {SvgImage} from '@ui/images/svg-image';\nimport teamSvg from '../admin/roles/team.svg';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useNormalizedModels} from '../ui/normalized-model/use-normalized-models';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport clsx from 'clsx';\n\ninterface SingleProps<T extends NormalizedModel> {\n  multiple?: false;\n}\n\ninterface MultipleProps<T extends NormalizedModel> {\n  multiple?: true;\n}\n\nexport function SelectUserDialog<T extends NormalizedModel>({\n  multiple = false,\n  endpoint = 'normalized-models/user',\n}: (MultipleProps<T> | SingleProps<T>) & {endpoint?: string}) {\n  const {close} = useDialogContext();\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const {trans} = useTrans();\n  const query = useNormalizedModels(endpoint, {\n    query: searchTerm,\n    perPage: 14,\n  });\n  const users = query.data?.results || [];\n  const [selectedUsers, setSelectedUsers] = useState<T[]>([]);\n\n  const emptyStateMessage = (\n    <IllustratedMessage\n      className=\"pt-20\"\n      size=\"sm\"\n      title={<Trans message=\"No matching users\" />}\n      description={<Trans message=\"Try another search query\" />}\n      image={<SvgImage src={teamSvg} />}\n    />\n  );\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        {multiple ? (\n          <Trans message=\"Select users\" />\n        ) : (\n          <Trans message=\"Select a user\" />\n        )}\n      </DialogHeader>\n      <DialogBody>\n        <TextField\n          autoFocus\n          size=\"sm\"\n          className=\"mb-20\"\n          startAdornment={<SearchIcon />}\n          placeholder={trans(message('Search for user by name or email'))}\n          value={searchTerm}\n          onChange={e => {\n            setSearchTerm(e.target.value);\n          }}\n        />\n        {!query.isLoading && !users.length && emptyStateMessage}\n        <div className=\"grid grid-cols-2 gap-x-10\">\n          {users.map(user => (\n            <UserListItem\n              isSelected={!!selectedUsers.find(u => u.id === user.id)}\n              key={user.id}\n              user={user}\n              onSelected={user => {\n                if (multiple) {\n                  if (selectedUsers.find(u => u.id === user.id)) {\n                    setSelectedUsers(\n                      selectedUsers.filter(u => u.id !== user.id),\n                    );\n                  } else {\n                    setSelectedUsers([...selectedUsers, user as T]);\n                  }\n                } else {\n                  close(user);\n                }\n              }}\n            />\n          ))}\n        </div>\n      </DialogBody>\n      {multiple && (\n        <DialogFooter>\n          <Button onClick={() => close()}>\n            <Trans message=\"Cancel\" />\n          </Button>\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            onClick={() => close(selectedUsers)}\n            disabled={!selectedUsers.length}\n          >\n            <Trans message=\"Select\" />\n          </Button>\n        </DialogFooter>\n      )}\n    </Dialog>\n  );\n}\n\ninterface UserListItemProps {\n  isSelected: boolean;\n  user: NormalizedModel;\n  onSelected: (user: NormalizedModel) => void;\n}\nfunction UserListItem({user, onSelected, isSelected}: UserListItemProps) {\n  return (\n    <div\n      key={user.id}\n      className={clsx(\n        'flex items-center gap-10 rounded border-1 p-10 outline-none ring-offset-4 focus-visible:ring',\n        isSelected\n          ? 'border-primary bg-primary/5 hover:bg-primary/10'\n          : 'border-transparent hover:bg-hover',\n      )}\n      role=\"button\"\n      tabIndex={0}\n      onClick={() => {\n        onSelected(user);\n      }}\n      onKeyDown={e => {\n        if (e.key === 'Enter' || e.key === ' ') {\n          e.preventDefault();\n          onSelected(user);\n        }\n      }}\n    >\n      <Avatar src={user.image} label={user.name} circle />\n      <div className=\"overflow-hidden\">\n        <div className=\"overflow-hidden text-ellipsis\">{user.name}</div>\n        <div className=\"overflow-hidden text-ellipsis text-muted\">\n          {user.description}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Role} from '@common/auth/role';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  userIds: number[];\n}\n\nexport function useRemoveUsersFromRole(role: Role) {\n  return useMutation({\n    mutationFn: ({userIds}: Payload) =>\n      removeUsersFromRole({userIds, roleId: role.id}),\n    onSuccess: (response, payload) => {\n      toast(\n        message('Removed [one 1 user|other :count users] from “{role}“', {\n          values: {count: payload.userIds.length, role: role.name},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction removeUsersFromRole({\n  roleId,\n  userIds,\n}: Payload & {roleId: number}): Promise<Response> {\n  return apiClient\n    .post(`roles/${roleId}/remove-users`, {userIds})\n    .then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Role} from '@common/auth/role';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  userIds: number[];\n}\n\nexport function useAddUsersToRole(role: Role) {\n  return useMutation({\n    mutationFn: ({userIds}: Payload) =>\n      addUsersToRole({userIds, roleId: role.id}),\n    onSuccess: (response, payload) => {\n      toast(\n        message('Assigned [one 1 user|other :count users] to {role}', {\n          values: {count: payload.userIds.length, role: role.name},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction addUsersToRole({\n  roleId,\n  userIds,\n}: Payload & {roleId: number}): Promise<Response> {\n  return apiClient\n    .post(`roles/${roleId}/add-users`, {userIds})\n    .then(r => r.data);\n}\n","import {Role} from '@common/auth/role';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {User} from '@ui/types/user';\nimport {Trans} from '@ui/i18n/trans';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport React from 'react';\nimport teamSvg from '../team.svg';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Button} from '@ui/buttons/button';\nimport {SelectUserDialog} from '@common/users/select-user-dialog';\nimport {queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport {useDataTable} from '@common/datatable/page/data-table-context';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useRemoveUsersFromRole} from '../requests/use-remove-users-from-role';\nimport {useAddUsersToRole} from '../requests/use-add-users-to-role';\nimport {DataTable} from '@common/datatable/data-table';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\n\nconst userColumn: ColumnConfig<User> = {\n  key: 'name',\n  allowsSorting: true,\n  sortingKey: 'email',\n  header: () => <Trans message=\"User\" />,\n  body: user => (\n    <NameWithAvatar\n      image={user.image}\n      label={user.name}\n      description={user.email}\n    />\n  ),\n  width: 'col-w-3',\n};\n\nconst desktopColumns: ColumnConfig<User>[] = [\n  userColumn,\n  {\n    key: 'first_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"First name\" />,\n    body: user => user.first_name,\n  },\n  {\n    key: 'last_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last name\" />,\n    body: user => user.last_name,\n  },\n  {\n    key: 'created_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Assigned at\" />,\n    body: user => <FormattedDate date={user.created_at} />,\n  },\n];\n\nconst mobileColumns: ColumnConfig<User>[] = [userColumn];\n\ninterface CrupdateRolePageUsersPanelProps {\n  role: Role;\n}\nexport function EditRolePageUsersPanel({\n  role,\n}: CrupdateRolePageUsersPanelProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (role.guests || role.type === 'workspace') {\n    return (\n      <div className=\"pb-10 pt-30\">\n        <DataTableEmptyStateMessage\n          image={teamSvg}\n          title={<Trans message=\"Users can't be assigned to this role\" />}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <DataTable\n      endpoint=\"users\"\n      columns={isMobile ? mobileColumns : desktopColumns}\n      queryParams={{roleId: `${role.id}`}}\n      actions={<AssignUserAction role={role} />}\n      selectedActions={<RemoveUsersAction role={role} />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={teamSvg}\n          title={\n            <Trans message=\"No users have been assigned to this role yet\" />\n          }\n          filteringTitle={<Trans message=\"No matching users\" />}\n        />\n      }\n    />\n  );\n}\n\ninterface AssignUserActionProps {\n  role: Role;\n}\nfunction AssignUserAction({role}: AssignUserActionProps) {\n  const addUsers = useAddUsersToRole(role);\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={user => {\n        if (user) {\n          addUsers.mutate(\n            {userIds: [user.id as number]},\n            {\n              onSuccess: () => {\n                queryClient.invalidateQueries({\n                  queryKey: DatatableDataQueryKey('users', {\n                    roleId: `${role.id}`,\n                  }),\n                });\n              },\n            },\n          );\n        }\n      }}\n    >\n      <Button variant=\"flat\" color=\"primary\" disabled={addUsers.isPending}>\n        <Trans message=\"Assign user\" />\n      </Button>\n      <SelectUserDialog />\n    </DialogTrigger>\n  );\n}\n\ntype RemoveUsersActionProps = {\n  role: Role;\n};\nexport function RemoveUsersAction({role}: RemoveUsersActionProps) {\n  const removeUsers = useRemoveUsersFromRole(role);\n  const {selectedRows} = useDataTable();\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          removeUsers.mutate(\n            {userIds: selectedRows as number[]},\n            {\n              onSuccess: () => {\n                queryClient.invalidateQueries({\n                  queryKey: DatatableDataQueryKey('users', {\n                    roleId: `${role.id}`,\n                  }),\n                });\n              },\n            },\n          );\n        }\n      }}\n    >\n      <Button variant=\"flat\" color=\"danger\" disabled={removeUsers.isPending}>\n        <Trans message=\"Remove users\" />\n      </Button>\n      <ConfirmationDialog\n        title={\n          <Trans\n            message=\"Remove [one 1 user|other :count users] from “:name“ role?\"\n            values={{count: selectedRows.length, name: role.name}}\n          />\n        }\n        body={<Trans message=\"This will permanently remove the users.\" />}\n        confirm={<Trans message=\"Remove\" />}\n        isDanger\n      />\n    </DialogTrigger>\n  );\n}\n","import {useRole} from '../requests/use-role';\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\nimport {Role} from '@common/auth/role';\nimport {Trans} from '@ui/i18n/trans';\nimport {useForm} from 'react-hook-form';\nimport {Tabs} from '@ui/tabs/tabs';\nimport {Tab} from '@ui/tabs/tab';\nimport {TabList} from '@ui/tabs/tab-list';\nimport {TabPanel, TabPanels} from '@ui/tabs/tab-panels';\nimport {useUpdateRole} from '../requests/use-update-role';\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\nimport {CrupdateRolePageSettingsPanel} from './crupdate-role-settings-panel';\nimport {EditRolePageUsersPanel} from './edit-role-page-users-panel';\n\nexport function EditRolePage() {\n  const query = useRole();\n\n  if (query.status !== 'success') {\n    return <FullPageLoader />;\n  }\n\n  return <PageContent role={query.data.role} />;\n}\n\ninterface PageContentProps {\n  role: Role;\n}\nfunction PageContent({role}: PageContentProps) {\n  const form = useForm<Role>({defaultValues: role});\n  const updateRole = useUpdateRole();\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateRole.mutate(values);\n      }}\n      title={<Trans message=\"Edit “:name“ role\" values={{name: role.name}} />}\n      isLoading={updateRole.isPending}\n    >\n      <Tabs isLazy>\n        <TabList>\n          <Tab>\n            <Trans message=\"Settings\" />\n          </Tab>\n          <Tab>\n            <Trans message=\"Users\" />\n          </Tab>\n        </TabList>\n        <TabPanels className=\"pt-20\">\n          <TabPanel>\n            <CrupdateRolePageSettingsPanel isInternal={role.internal} />\n          </TabPanel>\n          <TabPanel>\n            <EditRolePageUsersPanel role={role} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </CrupdateResourceLayout>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {Role} from '@common/auth/role';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\n\ninterface Response extends BackendResponse {\n  role: Role;\n}\n\nexport interface CreateRolePayload extends Partial<Role> {}\n\nconst Endpoint = 'roles';\n\nexport function useCreateRole(form: UseFormReturn<CreateRolePayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: CreateRolePayload) => createRole(payload),\n    onSuccess: () => {\n      toast(trans(message('Created new role')));\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('roles')});\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createRole({id, ...payload}: CreateRolePayload): Promise<Response> {\n  return apiClient.post(Endpoint, payload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {CrupdateRolePageSettingsPanel} from './crupdate-role-settings-panel';\nimport {CreateRolePayload, useCreateRole} from '../requests/user-create-role';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\n\nexport function CreateRolePage() {\n  const form = useForm<CreateRolePayload>({defaultValues: {type: 'sitewide'}});\n  const createRole = useCreateRole(form);\n  const navigate = useNavigate();\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createRole.mutate(values, {\n          onSuccess: response => {\n            navigate(`/admin/roles/${response.role.id}/edit`);\n          },\n        });\n      }}\n      title={<Trans message=\"Add new role\" />}\n      isLoading={createRole.isPending}\n    >\n      <CrupdateRolePageSettingsPanel />\n    </CrupdateResourceLayout>\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {TagType} from '../../core/settings/site-config-context';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const TagIndexPageFilters = (types: TagType[]): BackendFilter[] => {\n  return [\n    {\n      key: 'type',\n      label: message('Type'),\n      description: message('Type of the tag'),\n      defaultOperator: FilterOperator.ne,\n      control: {\n        type: FilterControlType.Select,\n        defaultValue: types[0].name,\n        options: types.map(type => ({\n          key: type.name,\n          label: message(type.name),\n          value: type.name,\n        })),\n      },\n    },\n    createdAtFilter({\n      description: message('Date tag was created'),\n    }),\n    updatedAtFilter({\n      description: message('Date tag was last updated'),\n    }),\n  ];\n};\n","export default \"__VITE_ASSET__8de61ea9__\"","import {Tag} from '../../tags/tag';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\nimport {useContext} from 'react';\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\n\ninterface CrupdateTagFormProps {\n  onSubmit: (values: Partial<Tag>) => void;\n  formId: string;\n  form: UseFormReturn<Partial<Tag>>;\n}\nexport function CrupdateTagForm({\n  form,\n  onSubmit,\n  formId,\n}: CrupdateTagFormProps) {\n  const {\n    tags: {types},\n  } = useContext(SiteConfigContext);\n  const watchedType = form.watch('type');\n  const isSystem = !!types.find(t => t.name === watchedType && t.system);\n\n  return (\n    <Form id={formId} form={form} onSubmit={onSubmit}>\n      <FormTextField\n        name=\"name\"\n        label={<Trans message=\"Name\" />}\n        description={<Trans message=\"Unique tag identifier.\" />}\n        className=\"mb-20\"\n        required\n        autoFocus\n      />\n      <FormTextField\n        name=\"display_name\"\n        label={<Trans message=\"Display name\" />}\n        description={<Trans message=\"User friendly tag name.\" />}\n        className=\"mb-20\"\n      />\n      <FormSelect\n        label={<Trans message=\"Type\" />}\n        name=\"type\"\n        selectionMode=\"single\"\n        disabled={isSystem}\n      >\n        {types\n          .filter(t => !t.system)\n          .map(type => (\n            <Item key={type.name} value={type.name}>\n              <Trans message={type.name} />\n            </Item>\n          ))}\n      </FormSelect>\n    </Form>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Tag} from '@common/tags/tag';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {slugifyString} from '@ui/utils/string/slugify-string';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload extends Partial<Tag> {}\n\nexport function useCreateNewTag(form: UseFormReturn<Payload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: Payload) => createNewTag(props),\n    onSuccess: () => {\n      toast(trans(message('Tag created')));\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('tags')});\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createNewTag(payload: Payload): Promise<Response> {\n  payload.name = slugifyString(payload.name!);\n  return apiClient.post('tags', payload).then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {CrupdateTagForm} from './crupdate-tag-form';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useCreateNewTag} from './requests/use-create-new-tag';\nimport {useContext} from 'react';\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\nimport {useForm} from 'react-hook-form';\nimport {Tag} from '../../tags/tag';\n\nexport function CreateTagDialog() {\n  const {close, formId} = useDialogContext();\n  const {\n    tags: {types},\n  } = useContext(SiteConfigContext);\n  const form = useForm<Partial<Tag>>({\n    defaultValues: {\n      type: types[0].name,\n    },\n  });\n  const createNewTag = useCreateNewTag(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Add new tag\" />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateTagForm\n          formId={formId}\n          form={form}\n          onSubmit={values => {\n            createNewTag.mutate(values, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={createNewTag.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Tag} from '@common/tags/tag';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {slugifyString} from '@ui/utils/string/slugify-string';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\nexport interface UpdateTagPayload extends Partial<Tag> {\n  id: number;\n}\n\nexport function useUpdateTag(form: UseFormReturn<UpdateTagPayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: UpdateTagPayload) => updateTag(props),\n    onSuccess: () => {\n      toast(trans(message('Tag updated')));\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('tags')});\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateTag({id, ...payload}: UpdateTagPayload): Promise<Response> {\n  if (payload.name) {\n    payload.name = slugifyString(payload.name!);\n  }\n  return apiClient.put(`tags/${id}`, payload).then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {CrupdateTagForm} from './crupdate-tag-form';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useForm} from 'react-hook-form';\nimport {Tag} from '../../tags/tag';\nimport {UpdateTagPayload, useUpdateTag} from './requests/use-update-tag';\n\ninterface UpdateTagDialogProps {\n  tag: Tag;\n}\nexport function UpdateTagDialog({tag}: UpdateTagDialogProps) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<UpdateTagPayload>({\n    defaultValues: {\n      id: tag.id,\n      name: tag.name,\n      display_name: tag.display_name,\n      type: tag.type,\n    },\n  });\n  const updateTag = useUpdateTag(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Update “:name“ tag\" values={{name: tag.name}} />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateTagForm\n          formId={formId}\n          form={form as any}\n          onSubmit={values => {\n            updateTag.mutate(values as UpdateTagPayload, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={updateTag.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import React, {useContext, useMemo} from 'react';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport {Tag} from '../../tags/tag';\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\nimport {TagIndexPageFilters} from './tag-index-page-filters';\nimport softwareEngineerSvg from './software-engineer.svg';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {CreateTagDialog} from './create-tag-dialog';\nimport {UpdateTagDialog} from './update-tag-dialog';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\n\nconst columnConfig: ColumnConfig<Tag>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Name\" />,\n    body: tag => tag.name,\n  },\n  {\n    key: 'type',\n    allowsSorting: true,\n    header: () => <Trans message=\"Type\" />,\n    body: tag => tag.type,\n  },\n  {\n    key: 'display_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Display name\" />,\n    body: tag => tag.display_name,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: tag => <FormattedDate date={tag.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    visibleInMode: 'all',\n    body: tag => {\n      return (\n        <DialogTrigger type=\"modal\">\n          <IconButton size=\"md\" className=\"text-muted\">\n            <EditIcon />\n          </IconButton>\n          <UpdateTagDialog tag={tag} />\n        </DialogTrigger>\n      );\n    },\n  },\n];\n\nexport function TagIndexPage() {\n  const {tags} = useContext(SiteConfigContext);\n  const filters = useMemo(() => {\n    return TagIndexPageFilters(tags.types);\n  }, [tags.types]);\n\n  return (\n    <DataTablePage\n      endpoint=\"tags\"\n      title={<Trans message=\"Tags\" />}\n      columns={columnConfig}\n      filters={filters}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={softwareEngineerSvg}\n          title={<Trans message=\"No tags have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching tags\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <>\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new tag\" />\n        </DataTableAddItemButton>\n        <CreateTagDialog />\n      </DialogTrigger>\n    </>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const VisibilityIcon = createSvgIcon(\n  <path d=\"M12 6c3.79 0 7.17 2.13 8.82 5.5C19.17 14.87 15.79 17 12 17s-7.17-2.13-8.82-5.5C4.83 8.13 8.21 6 12 6m0-2C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 5c1.38 0 2.5 1.12 2.5 2.5S13.38 14 12 14s-2.5-1.12-2.5-2.5S10.62 9 12 9m0-2c-2.48 0-4.5 2.02-4.5 4.5S9.52 16 12 16s4.5-2.02 4.5-4.5S14.48 7 12 7z\" />\n, 'VisibilityOutlined');\n","export default \"__VITE_ASSET__31048831__\"","import React, {useContext, useMemo} from 'react';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {isAbsoluteUrl} from '@ui/utils/urls/is-absolute-url';\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\n\nexport const FileEntryUrlsContext = React.createContext<\n  Record<string, string | number | null | undefined>\n>(null!);\n\ninterface PartialEntry {\n  url?: string;\n  hash: string;\n  file_name: string;\n  extension?: string;\n  thumbnail?: boolean;\n}\n\nexport function useFileEntryUrls(\n  entry?: PartialEntry,\n  options?: {preferThumbnail?: boolean; downloadHashes?: string[]},\n): {previewUrl?: string; downloadUrl?: string} {\n  const {base_url} = useSettings();\n  const urlSearchParams = useContext(FileEntryUrlsContext);\n\n  return useMemo(() => {\n    if (!entry) {\n      return {};\n    }\n\n    const previewUrl = buildPreviewUrl(\n      entry,\n      options?.preferThumbnail || false,\n    );\n\n    const urls = {\n      previewUrl,\n      downloadUrl: `${base_url}/api/v1/file-entries/download/${\n        options?.downloadHashes || entry.hash\n      }`,\n    };\n\n    if (urlSearchParams) {\n      // preview url\n      if (urls.previewUrl) {\n        urls.previewUrl = addParams(\n          urls.previewUrl,\n          {\n            ...urlSearchParams,\n            thumbnail: options?.preferThumbnail ? 'true' : '',\n          },\n          base_url,\n        );\n      }\n\n      // download url\n      urls.downloadUrl = addParams(urls.downloadUrl, urlSearchParams, base_url);\n    }\n\n    return urls;\n  }, [\n    base_url,\n    entry,\n    options?.downloadHashes,\n    options?.preferThumbnail,\n    urlSearchParams,\n  ]);\n}\n\nfunction buildPreviewUrl(\n  entry: PartialEntry,\n  preferThumbnail: boolean,\n): string | undefined {\n  if (!entry.url) return;\n\n  if (isAbsoluteUrl(entry.url)) {\n    if (preferThumbnail && entry.thumbnail) {\n      // replace last instance of entry.file_name in entry.url with 'thumbnail'\n      const extension = entry.extension ?? 'jpg';\n      return entry.url.replace(\n        new RegExp(entry.file_name + '$'),\n        `thumbnail.${extension}`,\n      );\n    } else {\n      return entry.url;\n    }\n  }\n\n  return `${getBootstrapData().settings.base_url}/${entry.url}`;\n}\n\nfunction addParams(urlString: string, params: object, baseUrl: string): string {\n  const url = new URL(urlString, baseUrl);\n  Object.entries(params).forEach(([key, value]) => {\n    url.searchParams.append(key, value as string);\n  });\n  return url.toString();\n}\n","import React from 'react';\nimport {FileEntry} from '../../file-entry';\n\nexport interface FilePreviewContextValue {\n  entries: FileEntry[];\n  activeIndex: number;\n}\n\nexport const FilePreviewContext = React.createContext<FilePreviewContextValue>(\n  null!,\n);\n","import {ReactNode, useContext} from 'react';\nimport clsx from 'clsx';\nimport {Button} from '@ui/buttons/button';\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\nimport {FilePreviewContext} from '../file-preview-context';\nimport {Trans} from '@ui/i18n/trans';\nimport {FilePreviewProps} from './file-preview-props';\nimport {useFileEntryUrls} from '../../../file-entry-urls';\n\ninterface Props extends FilePreviewProps {\n  message?: ReactNode;\n}\nexport function DefaultFilePreview({message, className, allowDownload}: Props) {\n  const {entries, activeIndex} = useContext(FilePreviewContext);\n  const activeEntry = entries[activeIndex];\n  const content = message || <Trans message=\"No file preview available\" />;\n  const {downloadUrl} = useFileEntryUrls(activeEntry);\n  return (\n    <div\n      className={clsx(\n        className,\n        'w-[calc(100%-40px)] max-w-400 rounded bg-paper p-40 text-center shadow',\n      )}\n    >\n      <div className=\"text-lg\">{content}</div>\n      {allowDownload && (\n        <div className=\"mt-20 block text-center\">\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            onClick={() => {\n              if (downloadUrl) {\n                downloadFileFromUrl(downloadUrl);\n              }\n            }}\n          >\n            <Trans message=\"Download\" />\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport {useFileEntryUrls} from '../../../file-entry-urls';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {FilePreviewProps} from './file-preview-props';\nimport {DefaultFilePreview} from './default-file-preview';\n\nexport function ImageFilePreview(props: FilePreviewProps) {\n  const {entry, className} = props;\n  const {trans} = useTrans();\n  const {previewUrl} = useFileEntryUrls(entry);\n\n  if (!previewUrl) {\n    return <DefaultFilePreview {...props} />;\n  }\n\n  return (\n    <img\n      className={clsx(className, 'shadow')}\n      src={previewUrl}\n      alt={trans({\n        message: 'Preview for :name',\n        values: {name: entry.name},\n      })}\n    />\n  );\n}\n","import {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport {FilePreviewProps} from './file-preview-props';\nimport {DefaultFilePreview} from './default-file-preview';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {useFileEntryUrls} from '@common/uploads/file-entry-urls';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {Trans} from '@ui/i18n/trans';\nimport {apiClient} from '@common/http/query-client';\n\nconst FIVE_MB = 5242880;\n\nexport function TextFilePreview(props: FilePreviewProps) {\n  const {entry, className} = props;\n  const {trans} = useTrans();\n  const [tooLarge, setTooLarge] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isFailed, setIsFailed] = useState(false);\n  const [contents, setContents] = useState<string | null>(null);\n  const {previewUrl} = useFileEntryUrls(entry);\n\n  useEffect(() => {\n    if (!entry) return;\n    if (!previewUrl) {\n      setIsFailed(true);\n    } else if (entry.file_size! >= FIVE_MB) {\n      setTooLarge(true);\n      setIsLoading(false);\n    } else {\n      getFileContents(previewUrl)\n        .then(response => {\n          setContents(response.data);\n        })\n        .catch(() => {\n          setIsFailed(true);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [entry, previewUrl]);\n\n  if (isLoading) {\n    return (\n      <ProgressCircle\n        isIndeterminate\n        aria-label={trans({message: 'Loading file contents'})}\n      />\n    );\n  }\n\n  if (tooLarge) {\n    return (\n      <DefaultFilePreview\n        {...props}\n        message={<Trans message=\"This file is too large to preview.\" />}\n      />\n    );\n  }\n\n  if (isFailed) {\n    return (\n      <DefaultFilePreview\n        {...props}\n        message={<Trans message=\"There was an issue previewing this file\" />}\n      />\n    );\n  }\n\n  return (\n    <pre\n      className={clsx(\n        'h-full w-full overflow-y-auto whitespace-pre-wrap break-words rounded bg-paper p-20 text-sm',\n        className,\n      )}\n    >\n      <div className=\"container mx-auto\">{`${contents}`}</div>\n    </pre>\n  );\n}\n\nfunction getFileContents(src: string) {\n  return apiClient.get(src, {\n    responseType: 'text',\n    // required for s3 presigned url to work\n    withCredentials: false,\n    headers: {\n      Accept: 'text/plain',\n    },\n  });\n}\n","import {useEffect, useRef, useState} from 'react';\nimport {FilePreviewProps} from './file-preview-props';\nimport {DefaultFilePreview} from './default-file-preview';\nimport {useFileEntryUrls} from '../../../file-entry-urls';\n\nexport function VideoFilePreview(props: FilePreviewProps) {\n  const {entry, className} = props;\n  const {previewUrl} = useFileEntryUrls(entry);\n  const ref = useRef<HTMLVideoElement>(null);\n  const [mediaInvalid, setMediaInvalid] = useState(false);\n\n  useEffect(() => {\n    setMediaInvalid(!ref.current?.canPlayType(entry.mime));\n  }, [entry]);\n\n  if (mediaInvalid || !previewUrl) {\n    return <DefaultFilePreview {...props} />;\n  }\n\n  return (\n    <video\n      className={className}\n      ref={ref}\n      controls\n      controlsList=\"nodownload noremoteplayback\"\n      playsInline\n      autoPlay\n    >\n      <source\n        src={previewUrl}\n        type={entry.mime}\n        onError={() => {\n          setMediaInvalid(true);\n        }}\n      />\n    </video>\n  );\n}\n","import {FilePreviewProps} from './file-preview-props';\nimport {DefaultFilePreview} from './default-file-preview';\nimport {useFileEntryUrls} from '../../../file-entry-urls';\nimport {useEffect, useRef, useState} from 'react';\n\nexport function AudioFilePreview(props: FilePreviewProps) {\n  const {entry, className} = props;\n  const {previewUrl} = useFileEntryUrls(entry);\n  const ref = useRef<HTMLAudioElement>(null);\n  const [mediaInvalid, setMediaInvalid] = useState(false);\n\n  useEffect(() => {\n    setMediaInvalid(!ref.current?.canPlayType(entry.mime));\n  }, [entry]);\n\n  if (mediaInvalid || !previewUrl) {\n    return <DefaultFilePreview {...props} />;\n  }\n\n  return (\n    <audio\n      className={className}\n      ref={ref}\n      controls\n      controlsList=\"nodownload noremoteplayback\"\n      autoPlay\n    >\n      <source\n        src={previewUrl}\n        type={entry.mime}\n        onError={() => {\n          setMediaInvalid(true);\n        }}\n      />\n    </audio>\n  );\n}\n","import clsx from 'clsx';\nimport {FilePreviewProps} from '@common/uploads/components/file-preview/file-preview/file-preview-props';\nimport {useFileEntryUrls} from '@common/uploads/file-entry-urls';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {DefaultFilePreview} from '@common/uploads/components/file-preview/file-preview/default-file-preview';\n\nexport function PdfFilePreview(props: FilePreviewProps) {\n  const {entry, className} = props;\n  const {trans} = useTrans();\n  const {previewUrl} = useFileEntryUrls(entry);\n\n  if (!previewUrl) {\n    return <DefaultFilePreview {...props} />;\n  }\n\n  return (\n    <iframe\n      title={trans({\n        message: 'Preview for :name',\n        values: {name: entry.name},\n      })}\n      className={clsx(className, 'h-full w-full')}\n      src={`${previewUrl}#toolbar=0`}\n    />\n  );\n}\n","import clsx from 'clsx';\nimport {useEffect, useRef, useState} from 'react';\nimport {FilePreviewProps} from './file-preview-props';\nimport {DefaultFilePreview} from './default-file-preview';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {FileEntry} from '../../../file-entry';\nimport {useFileEntryUrls} from '../../../file-entry-urls';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {apiClient} from '@common/http/query-client';\n\nexport function WordDocumentFilePreview(props: FilePreviewProps) {\n  const {entry, className} = props;\n  const {trans} = useTrans();\n  const ref = useRef<HTMLIFrameElement>(null);\n  const [showDefault, setShowDefault] = useState(false);\n  const timeoutId = useRef<any>();\n  const [isLoading, setIsLoading] = useState(false);\n  const {previewUrl} = useFileEntryUrls(entry);\n\n  useEffect(() => {\n    // Google Docs viewer only supports files up to 25MB\n    if (!previewUrl) {\n      setShowDefault(true);\n    } else if (entry.file_size && entry.file_size > 25000000) {\n      setShowDefault(true);\n    } else if (ref.current) {\n      ref.current.onload = () => {\n        clearTimeout(timeoutId.current);\n        setIsLoading(false);\n      };\n\n      buildPreviewUrl(previewUrl, entry).then(url => {\n        if (ref.current) {\n          ref.current.src = url;\n        }\n      });\n\n      // if preview iframe is not loaded\n      // after 5 seconds, bail and show default preview\n      timeoutId.current = setTimeout(() => {\n        setShowDefault(true);\n      }, 5000);\n    }\n  }, [entry, previewUrl]);\n\n  if (showDefault) {\n    return <DefaultFilePreview {...props} />;\n  }\n\n  return (\n    <div className={clsx(className, 'h-full w-full')}>\n      {isLoading && <ProgressCircle />}\n      <iframe\n        ref={ref}\n        title={trans({\n          message: 'Preview for :name',\n          values: {name: entry.name},\n        })}\n        className={clsx('h-full w-full', isLoading && 'hidden')}\n      />\n    </div>\n  );\n}\n\nasync function buildPreviewUrl(\n  urlString: string,\n  entry: FileEntry,\n): Promise<string> {\n  const url = new URL(urlString);\n  // if we're not trying to preview shareable link we will need to generate\n  // preview token, otherwise it won't be publicly accessible\n  if (!url.searchParams.has('shareable_link')) {\n    const {data} = await apiClient.post(\n      `file-entries/${entry.id}/add-preview-token`,\n    );\n    url.searchParams.append('preview_token', data.preview_token);\n  }\n\n  return buildOfficeLivePreviewUrl(url);\n}\n\nfunction buildOfficeLivePreviewUrl(url: URL) {\n  // https://docs.google.com/gview?embedded=true&url=\n  return `https://view.officeapps.live.com/op/embed.aspx?src=${encodeURIComponent(\n    url.toString(),\n  )}`;\n}\n","import {ImageFilePreview} from './file-preview/image-file-preview';\nimport {FileEntry} from '../../file-entry';\nimport {DefaultFilePreview} from './file-preview/default-file-preview';\nimport {TextFilePreview} from './file-preview/text-file-preview';\nimport {VideoFilePreview} from './file-preview/video-file-preview';\nimport {AudioFilePreview} from './file-preview/audio-file-preview';\nimport {PdfFilePreview} from './file-preview/pdf-file-preview';\nimport {WordDocumentFilePreview} from './file-preview/word-document-file-preview';\n\nexport const AvailablePreviews = {\n  text: TextFilePreview,\n  video: VideoFilePreview,\n  audio: AudioFilePreview,\n  image: ImageFilePreview,\n  pdf: PdfFilePreview,\n  spreadsheet: WordDocumentFilePreview,\n  powerPoint: WordDocumentFilePreview,\n  word: WordDocumentFilePreview,\n  'text/rtf': DefaultFilePreview,\n} as const;\n\nexport function getPreviewForEntry(entry: FileEntry) {\n  const mime = entry?.mime as keyof typeof AvailablePreviews;\n  const type = entry?.type as keyof typeof AvailablePreviews;\n  return (\n    AvailablePreviews[mime] || AvailablePreviews[type] || DefaultFilePreview\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ChevronLeftIcon = createSvgIcon(\n  <path d=\"M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12l4.58-4.59z\" />\n, 'ChevronLeftOutlined');\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const DefaultFileIcon = createSvgIcon(\n  <g>\n    <path d=\"M 23.65625 4 C 22.320313 4 21.066406 4.519531 20.121094 5.464844 L 11.464844 14.121094 C 10.519531 15.066406 10 16.320313 10 17.65625 L 10 57 C 10 58.652344 11.347656 60 13 60 L 53 60 C 54.652344 60 56 58.652344 56 57 L 56 7 C 56 5.347656 54.652344 4 53 4 Z M 24 6 L 53 6 C 53.550781 6 54 6.449219 54 7 L 54 57 C 54 57.550781 53.550781 58 53 58 L 13 58 C 12.449219 58 12 57.550781 12 57 L 12 18 L 21 18 C 22.652344 18 24 16.652344 24 15 Z M 22 6.5 L 22 15 C 22 15.550781 21.550781 16 21 16 L 12.5 16 C 12.605469 15.835938 12.734375 15.679688 12.878906 15.535156 L 21.535156 6.878906 C 21.679688 6.738281 21.835938 6.613281 22 6.5 Z M 21 22 C 20.449219 22 20 22.449219 20 23 C 20 23.550781 20.449219 24 21 24 L 37 24 C 37.550781 24 38 23.550781 38 23 C 38 22.449219 37.550781 22 37 22 Z M 41 22 C 40.449219 22 40 22.449219 40 23 C 40 23.550781 40.449219 24 41 24 L 45 24 C 45.550781 24 46 23.550781 46 23 C 46 22.449219 45.550781 22 45 22 Z M 21 26 C 20.449219 26 20 26.449219 20 27 C 20 27.550781 20.449219 28 21 28 L 41 28 C 41.550781 28 42 27.550781 42 27 C 42 26.449219 41.550781 26 41 26 Z M 21 32 C 20.449219 32 20 32.449219 20 33 C 20 33.550781 20.449219 34 21 34 L 43 34 C 43.550781 34 44 33.550781 44 33 C 44 32.449219 43.550781 32 43 32 Z M 21 36 C 20.449219 36 20 36.449219 20 37 C 20 37.550781 20.449219 38 21 38 L 33 38 C 33.550781 38 34 37.550781 34 37 C 34 36.449219 33.550781 36 33 36 Z M 15 50 C 14.449219 50 14 50.449219 14 51 L 14 53 C 14 53.550781 14.449219 54 15 54 C 15.550781 54 16 53.550781 16 53 L 16 51 C 16 50.449219 15.550781 50 15 50 Z M 20 50 C 19.449219 50 19 50.449219 19 51 L 19 53 C 19 53.550781 19.449219 54 20 54 C 20.550781 54 21 53.550781 21 53 L 21 51 C 21 50.449219 20.550781 50 20 50 Z M 25 50 C 24.449219 50 24 50.449219 24 51 L 24 53 C 24 53.550781 24.449219 54 25 54 C 25.550781 54 26 53.550781 26 53 L 26 51 C 26 50.449219 25.550781 50 25 50 Z M 30 50 C 29.449219 50 29 50.449219 29 51 L 29 53 C 29 53.550781 29.449219 54 30 54 C 30.550781 54 31 53.550781 31 53 L 31 51 C 31 50.449219 30.550781 50 30 50 Z M 35 50 C 34.449219 50 34 50.449219 34 51 L 34 53 C 34 53.550781 34.449219 54 35 54 C 35.550781 54 36 53.550781 36 53 L 36 51 C 36 50.449219 35.550781 50 35 50 Z M 40 50 C 39.449219 50 39 50.449219 39 51 L 39 53 C 39 53.550781 39.449219 54 40 54 C 40.550781 54 41 53.550781 41 53 L 41 51 C 41 50.449219 40.550781 50 40 50 Z M 45 50 C 44.449219 50 44 50.449219 44 51 L 44 53 C 44 53.550781 44.449219 54 45 54 C 45.550781 54 46 53.550781 46 53 L 46 51 C 46 50.449219 45.550781 50 45 50 Z M 50 50 C 49.449219 50 49 50.449219 49 51 L 49 53 C 49 53.550781 49.449219 54 50 54 C 50.550781 54 51 53.550781 51 53 L 51 51 C 51 50.449219 50.550781 50 50 50 Z \" />\n  </g>,\n);\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const AudioFileIcon = createSvgIcon(\n  <g>\n    <path d=\"M 21.65625 4 C 20.320313 4 19.0625 4.519531 18.121094 5.464844 L 9.464844 14.121094 C 8.519531 15.066406 8 16.320313 8 17.65625 L 8 57 C 8 58.652344 9.347656 60 11 60 L 51 60 C 52.652344 60 54 58.652344 54 57 L 54 7 C 54 5.347656 52.652344 4 51 4 Z M 22 6 L 51 6 C 51.550781 6 52 6.449219 52 7 L 52 57 C 52 57.550781 51.550781 58 51 58 L 11 58 C 10.449219 58 10 57.550781 10 57 L 10 18 L 19 18 C 20.652344 18 22 16.652344 22 15 Z M 20 6.5 L 20 15 C 20 15.550781 19.550781 16 19 16 L 10.5 16 C 10.609375 15.835938 10.734375 15.679688 10.878906 15.535156 L 19.535156 6.878906 C 19.679688 6.734375 19.835938 6.609375 20 6.5 Z M 42.78125 18.023438 L 24.78125 22.023438 C 24.328125 22.125 24 22.53125 24 23 L 24 37 C 20.691406 37 18 39.242188 18 42 C 18 44.757813 20.691406 47 24 47 C 27.308594 47 30 44.757813 30 42 L 30 29.910156 L 38 28.136719 L 38 33 C 34.691406 33 32 35.242188 32 38 C 32 40.757813 34.691406 43 38 43 C 41.308594 43 44 40.757813 44 38 L 44 19 C 44 18.695313 43.863281 18.410156 43.625 18.21875 C 43.390625 18.03125 43.082031 17.960938 42.78125 18.023438 Z M 42 20.246094 L 42 38 C 42 39.652344 40.207031 41 38 41 C 35.792969 41 34 39.652344 34 38 C 34 36.347656 35.792969 35 38 35 C 38.28125 35 38.5625 35.023438 38.839844 35.066406 C 39.128906 35.117188 39.421875 35.03125 39.648438 34.84375 C 39.871094 34.652344 40 34.375 40 34.078125 L 40 26.890625 C 40 26.585938 39.863281 26.300781 39.625 26.109375 C 39.390625 25.921875 39.078125 25.847656 38.78125 25.910156 L 28.78125 28.136719 C 28.328125 28.238281 28 28.644531 28 29.109375 L 28 42 C 28 43.652344 26.207031 45 24 45 C 21.792969 45 20 43.652344 20 42 C 20 40.347656 21.792969 39 24 39 C 24.28125 39 24.5625 39.023438 24.839844 39.066406 C 25.128906 39.117188 25.425781 39.03125 25.648438 38.84375 C 25.871094 38.652344 26 38.375 26 38.078125 L 26 23.800781 Z M 13 52 C 12.449219 52 12 52.445313 12 53 L 12 55 C 12 55.554688 12.449219 56 13 56 C 13.550781 56 14 55.554688 14 55 L 14 53 C 14 52.445313 13.550781 52 13 52 Z M 18 52 C 17.449219 52 17 52.445313 17 53 L 17 55 C 17 55.554688 17.449219 56 18 56 C 18.550781 56 19 55.554688 19 55 L 19 53 C 19 52.445313 18.550781 52 18 52 Z M 23 52 C 22.449219 52 22 52.445313 22 53 L 22 55 C 22 55.554688 22.449219 56 23 56 C 23.550781 56 24 55.554688 24 55 L 24 53 C 24 52.445313 23.550781 52 23 52 Z M 28 52 C 27.449219 52 27 52.445313 27 53 L 27 55 C 27 55.554688 27.449219 56 28 56 C 28.550781 56 29 55.554688 29 55 L 29 53 C 29 52.445313 28.550781 52 28 52 Z M 33 52 C 32.449219 52 32 52.445313 32 53 L 32 55 C 32 55.554688 32.449219 56 33 56 C 33.550781 56 34 55.554688 34 55 L 34 53 C 34 52.445313 33.550781 52 33 52 Z M 38 52 C 37.449219 52 37 52.445313 37 53 L 37 55 C 37 55.554688 37.449219 56 38 56 C 38.550781 56 39 55.554688 39 55 L 39 53 C 39 52.445313 38.550781 52 38 52 Z M 43 52 C 42.449219 52 42 52.445313 42 53 L 42 55 C 42 55.554688 42.449219 56 43 56 C 43.550781 56 44 55.554688 44 55 L 44 53 C 44 52.445313 43.550781 52 43 52 Z M 48 52 C 47.449219 52 47 52.445313 47 53 L 47 55 C 47 55.554688 47.449219 56 48 56 C 48.550781 56 49 55.554688 49 55 L 49 53 C 49 52.445313 48.550781 52 48 52 Z \" />\n  </g>,\n);\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const VideoFileIcon = createSvgIcon(\n  <g>\n    <path d=\"M 23.65625 4 C 22.320313 4 21.0625 4.519531 20.121094 5.464844 L 11.464844 14.121094 C 10.519531 15.066406 10 16.320313 10 17.65625 L 10 57 C 10 58.652344 11.347656 60 13 60 L 53 60 C 54.652344 60 56 58.652344 56 57 L 56 7 C 56 5.347656 54.652344 4 53 4 Z M 24 6 L 53 6 C 53.550781 6 54 6.449219 54 7 L 54 57 C 54 57.550781 53.550781 58 53 58 L 13 58 C 12.449219 58 12 57.550781 12 57 L 12 18 L 21 18 C 22.652344 18 24 16.652344 24 15 Z M 22 6.5 L 22 15 C 22 15.550781 21.550781 16 21 16 L 12.5 16 C 12.613281 15.835938 12.738281 15.675781 12.878906 15.535156 L 21.535156 6.878906 C 21.679688 6.734375 21.835938 6.609375 22 6.5 Z M 28.023438 21.816406 C 27.671875 21.808594 27.316406 21.890625 26.996094 22.0625 C 26.355469 22.417969 25.964844 23.085938 25.964844 23.816406 L 25.964844 42.183594 C 25.964844 42.910156 26.355469 43.582031 26.996094 43.933594 C 27.296875 44.097656 27.632813 44.183594 27.964844 44.183594 C 28.335938 44.183594 28.707031 44.078125 29.03125 43.871094 L 43.53125 34.6875 C 44.113281 34.320313 44.464844 33.6875 44.464844 33 C 44.464844 32.308594 44.113281 31.679688 43.53125 31.3125 L 29.03125 22.125 C 28.722656 21.933594 28.375 21.828125 28.023438 21.816406 Z M 27.964844 23.816406 L 42.464844 33 L 27.964844 42.1875 Z M 15 52 C 14.449219 52 14 52.449219 14 53 L 14 55 C 14 55.550781 14.449219 56 15 56 C 15.550781 56 16 55.550781 16 55 L 16 53 C 16 52.449219 15.550781 52 15 52 Z M 20 52 C 19.449219 52 19 52.449219 19 53 L 19 55 C 19 55.550781 19.449219 56 20 56 C 20.550781 56 21 55.550781 21 55 L 21 53 C 21 52.449219 20.550781 52 20 52 Z M 25 52 C 24.449219 52 24 52.449219 24 53 L 24 55 C 24 55.550781 24.449219 56 25 56 C 25.550781 56 26 55.550781 26 55 L 26 53 C 26 52.449219 25.550781 52 25 52 Z M 30 52 C 29.449219 52 29 52.449219 29 53 L 29 55 C 29 55.550781 29.449219 56 30 56 C 30.550781 56 31 55.550781 31 55 L 31 53 C 31 52.449219 30.550781 52 30 52 Z M 35 52 C 34.449219 52 34 52.449219 34 53 L 34 55 C 34 55.550781 34.449219 56 35 56 C 35.550781 56 36 55.550781 36 55 L 36 53 C 36 52.449219 35.550781 52 35 52 Z M 40 52 C 39.449219 52 39 52.449219 39 53 L 39 55 C 39 55.550781 39.449219 56 40 56 C 40.550781 56 41 55.550781 41 55 L 41 53 C 41 52.449219 40.550781 52 40 52 Z M 45 52 C 44.449219 52 44 52.449219 44 53 L 44 55 C 44 55.550781 44.449219 56 45 56 C 45.550781 56 46 55.550781 46 55 L 46 53 C 46 52.449219 45.550781 52 45 52 Z M 50 52 C 49.449219 52 49 52.449219 49 53 L 49 55 C 49 55.550781 49.449219 56 50 56 C 50.550781 56 51 55.550781 51 55 L 51 53 C 51 52.449219 50.550781 52 50 52 Z \" />\n  </g>,\n);\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const TextFileIcon = createSvgIcon(\n  <g>\n    <path d=\"M 17.660156 4 C 16.320313 4 15.058594 4.519531 14.121094 5.460938 L 5.460938 14.121094 C 4.519531 15.070313 4 16.320313 4 17.660156 L 4 57 C 4 58.648438 5.351563 60 7 60 L 47 60 C 48.648438 60 50 58.648438 50 57 L 50 46 L 58 46 C 59.101563 46 60 45.101563 60 44 L 60 24 C 60 22.898438 59.101563 22 58 22 L 50 22 L 50 7 C 50 5.351563 48.648438 4 47 4 Z M 18 6 L 47 6 C 47.550781 6 48 6.449219 48 7 L 48 22 L 16 22 C 14.898438 22 14 22.898438 14 24 L 14 44 C 14 45.101563 14.898438 46 16 46 L 48 46 L 48 57 C 48 57.550781 47.550781 58 47 58 L 7 58 C 6.449219 58 6 57.550781 6 57 L 6 18 L 15 18 C 16.652344 18 18 16.652344 18 15 Z M 16 6.5 L 16 15 C 16 15.550781 15.550781 16 15 16 L 6.5 16 C 6.613281 15.835938 6.738281 15.679688 6.882813 15.539063 L 15.539063 6.882813 C 15.679688 6.738281 15.835938 6.609375 16 6.5 Z M 16 24 L 58 24 L 58 44 L 16 44 Z M 24 28 C 23.449219 28 23 28.445313 23 29 C 23 29.554688 23.449219 30 24 30 L 26 30 L 26 39 C 26 39.554688 26.449219 40 27 40 C 27.550781 40 28 39.554688 28 39 L 28 30 L 30 30 C 30.550781 30 31 29.554688 31 29 C 31 28.445313 30.550781 28 30 28 Z M 44 28 C 43.449219 28 43 28.445313 43 29 C 43 29.554688 43.449219 30 44 30 L 46 30 L 46 39 C 46 39.554688 46.449219 40 47 40 C 47.550781 40 48 39.554688 48 39 L 48 30 L 50 30 C 50.550781 30 51 29.554688 51 29 C 51 28.445313 50.550781 28 50 28 Z M 33.859375 28.011719 C 33.730469 28.027344 33.601563 28.070313 33.484375 28.140625 C 33.011719 28.425781 32.859375 29.039063 33.140625 29.515625 L 35.832031 34 L 33.140625 38.484375 C 32.859375 38.957031 33.011719 39.574219 33.484375 39.859375 C 33.644531 39.953125 33.824219 40 34 40 C 34.339844 40 34.671875 39.828125 34.859375 39.515625 L 37 35.941406 L 39.140625 39.515625 C 39.328125 39.828125 39.660156 40 40 40 C 40.175781 40 40.355469 39.953125 40.515625 39.859375 C 40.988281 39.574219 41.140625 38.957031 40.859375 38.484375 L 38.167969 34 L 40.859375 29.515625 C 41.140625 29.042969 40.988281 28.425781 40.515625 28.140625 C 40.042969 27.859375 39.425781 28.011719 39.140625 28.484375 L 37 32.058594 L 34.859375 28.484375 C 34.644531 28.128906 34.246094 27.957031 33.859375 28.011719 Z M 9 52 C 8.449219 52 8 52.445313 8 53 L 8 55 C 8 55.554688 8.449219 56 9 56 C 9.550781 56 10 55.554688 10 55 L 10 53 C 10 52.445313 9.550781 52 9 52 Z M 14 52 C 13.449219 52 13 52.445313 13 53 L 13 55 C 13 55.554688 13.449219 56 14 56 C 14.550781 56 15 55.554688 15 55 L 15 53 C 15 52.445313 14.550781 52 14 52 Z M 19 52 C 18.449219 52 18 52.445313 18 53 L 18 55 C 18 55.554688 18.449219 56 19 56 C 19.550781 56 20 55.554688 20 55 L 20 53 C 20 52.445313 19.550781 52 19 52 Z M 24 52 C 23.449219 52 23 52.445313 23 53 L 23 55 C 23 55.554688 23.449219 56 24 56 C 24.550781 56 25 55.554688 25 55 L 25 53 C 25 52.445313 24.550781 52 24 52 Z M 29 52 C 28.449219 52 28 52.445313 28 53 L 28 55 C 28 55.554688 28.449219 56 29 56 C 29.550781 56 30 55.554688 30 55 L 30 53 C 30 52.445313 29.550781 52 29 52 Z M 34 52 C 33.449219 52 33 52.445313 33 53 L 33 55 C 33 55.554688 33.449219 56 34 56 C 34.550781 56 35 55.554688 35 55 L 35 53 C 35 52.445313 34.550781 52 34 52 Z M 39 52 C 38.449219 52 38 52.445313 38 53 L 38 55 C 38 55.554688 38.449219 56 39 56 C 39.550781 56 40 55.554688 40 55 L 40 53 C 40 52.445313 39.550781 52 39 52 Z M 44 52 C 43.449219 52 43 52.445313 43 53 L 43 55 C 43 55.554688 43.449219 56 44 56 C 44.550781 56 45 55.554688 45 55 L 45 53 C 45 52.445313 44.550781 52 44 52 Z \" />\n  </g>,\n);\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const PdfFileIcon = createSvgIcon(\n  <g>\n    <path d=\"M 17.65625 4 C 16.320313 4 15.066406 4.519531 14.121094 5.464844 L 5.464844 14.121094 C 4.519531 15.066406 4 16.320313 4 17.65625 L 4 57 C 4 58.652344 5.347656 60 7 60 L 47 60 C 48.652344 60 50 58.652344 50 57 L 50 46 L 58 46 C 59.101563 46 60 45.101563 60 44 L 60 24 C 60 22.898438 59.101563 22 58 22 L 50 22 L 50 7 C 50 5.347656 48.652344 4 47 4 Z M 18 6 L 47 6 C 47.550781 6 48 6.449219 48 7 L 48 22 L 16 22 C 14.898438 22 14 22.898438 14 24 L 14 44 C 14 45.101563 14.898438 46 16 46 L 48 46 L 48 57 C 48 57.550781 47.550781 58 47 58 L 7 58 C 6.449219 58 6 57.550781 6 57 L 6 18 L 15 18 C 16.652344 18 18 16.652344 18 15 Z M 16 6.5 L 16 15 C 16 15.550781 15.550781 16 15 16 L 6.5 16 C 6.609375 15.835938 6.734375 15.679688 6.878906 15.535156 L 15.535156 6.878906 C 15.679688 6.734375 15.835938 6.609375 16 6.5 Z M 16 24 L 58 24 L 58 44 L 16 44 Z M 25 28 C 24.445313 28 24 28.449219 24 29 L 24 39 C 24 39.550781 24.445313 40 25 40 C 25.554688 40 26 39.550781 26 39 L 26 36 L 29 36 C 30.652344 36 32 34.652344 32 33 L 32 31 C 32 29.347656 30.652344 28 29 28 Z M 35 28 C 34.445313 28 34 28.449219 34 29 L 34 39 C 34 39.550781 34.445313 40 35 40 L 38 40 C 40.207031 40 42 38.207031 42 36 L 42 32 C 42 29.792969 40.207031 28 38 28 Z M 45 28 C 44.445313 28 44 28.449219 44 29 L 44 39 C 44 39.550781 44.445313 40 45 40 C 45.554688 40 46 39.550781 46 39 L 46 36 L 49 36 C 49.554688 36 50 35.550781 50 35 C 50 34.449219 49.554688 34 49 34 L 46 34 L 46 30 L 50 30 C 50.554688 30 51 29.550781 51 29 C 51 28.449219 50.554688 28 50 28 Z M 26 30 L 29 30 C 29.550781 30 30 30.449219 30 31 L 30 33 C 30 33.550781 29.550781 34 29 34 L 26 34 Z M 36 30 L 38 30 C 39.101563 30 40 30.898438 40 32 L 40 36 C 40 37.101563 39.101563 38 38 38 L 36 38 Z M 9 52 C 8.445313 52 8 52.449219 8 53 L 8 55 C 8 55.550781 8.445313 56 9 56 C 9.554688 56 10 55.550781 10 55 L 10 53 C 10 52.449219 9.554688 52 9 52 Z M 14 52 C 13.445313 52 13 52.449219 13 53 L 13 55 C 13 55.550781 13.445313 56 14 56 C 14.554688 56 15 55.550781 15 55 L 15 53 C 15 52.449219 14.554688 52 14 52 Z M 19 52 C 18.445313 52 18 52.449219 18 53 L 18 55 C 18 55.550781 18.445313 56 19 56 C 19.554688 56 20 55.550781 20 55 L 20 53 C 20 52.449219 19.554688 52 19 52 Z M 24 52 C 23.445313 52 23 52.449219 23 53 L 23 55 C 23 55.550781 23.445313 56 24 56 C 24.554688 56 25 55.550781 25 55 L 25 53 C 25 52.449219 24.554688 52 24 52 Z M 29 52 C 28.445313 52 28 52.449219 28 53 L 28 55 C 28 55.550781 28.445313 56 29 56 C 29.554688 56 30 55.550781 30 55 L 30 53 C 30 52.449219 29.554688 52 29 52 Z M 34 52 C 33.445313 52 33 52.449219 33 53 L 33 55 C 33 55.550781 33.445313 56 34 56 C 34.554688 56 35 55.550781 35 55 L 35 53 C 35 52.449219 34.554688 52 34 52 Z M 39 52 C 38.445313 52 38 52.449219 38 53 L 38 55 C 38 55.550781 38.445313 56 39 56 C 39.554688 56 40 55.550781 40 55 L 40 53 C 40 52.449219 39.554688 52 39 52 Z M 44 52 C 43.445313 52 43 52.449219 43 53 L 43 55 C 43 55.550781 43.445313 56 44 56 C 44.554688 56 45 55.550781 45 55 L 45 53 C 45 52.449219 44.554688 52 44 52 Z \" />\n  </g>,\n);\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const ArchiveFileIcon = createSvgIcon(\n  <g>\n    <path d=\"M 21.65625 4 C 20.320313 4 19.066406 4.519531 18.121094 5.464844 L 9.464844 14.121094 C 8.519531 15.066406 8 16.320313 8 17.65625 L 8 57 C 8 58.652344 9.347656 60 11 60 L 51 60 C 52.652344 60 54 58.652344 54 57 L 54 7 C 54 5.347656 52.652344 4 51 4 Z M 22 6 L 36 6 L 36 27.59375 C 35.144531 27.222656 34.210938 27 33.226563 27 L 32.773438 27 C 31.789063 27 30.859375 27.222656 30 27.59375 L 30 9 C 30 8.449219 29.554688 8 29 8 C 28.449219 8 28 8.449219 28 9 L 28 28.902344 C 27.015625 29.824219 26.277344 31.023438 25.953125 32.425781 L 24.875 37.097656 C 24.597656 38.292969 24.878906 39.53125 25.640625 40.488281 C 26.40625 41.449219 27.546875 42 28.769531 42 L 37.230469 42 C 38.457031 42 39.59375 41.449219 40.359375 40.488281 C 41.121094 39.53125 41.402344 38.292969 41.125 37.097656 L 40.046875 32.425781 C 39.726563 31.023438 38.984375 29.824219 38 28.902344 L 38 6 L 51 6 C 51.550781 6 52 6.449219 52 7 L 52 57 C 52 57.550781 51.550781 58 51 58 L 11 58 C 10.449219 58 10 57.550781 10 57 L 10 18 L 19 18 C 20.652344 18 22 16.652344 22 15 Z M 20 6.5 L 20 15 C 20 15.550781 19.550781 16 19 16 L 10.5 16 C 10.609375 15.835938 10.734375 15.679688 10.878906 15.535156 L 19.535156 6.878906 C 19.679688 6.738281 19.835938 6.609375 20 6.5 Z M 32 8 C 31.449219 8 31 8.445313 31 9 C 31 9.554688 31.449219 10 32 10 L 34 10 C 34.550781 10 35 9.554688 35 9 C 35 8.445313 34.550781 8 34 8 Z M 32 13 C 31.449219 13 31 13.445313 31 14 C 31 14.554688 31.449219 15 32 15 L 34 15 C 34.550781 15 35 14.554688 35 14 C 35 13.445313 34.550781 13 34 13 Z M 32 18 C 31.449219 18 31 18.445313 31 19 C 31 19.554688 31.449219 20 32 20 L 34 20 C 34.550781 20 35 19.554688 35 19 C 35 18.445313 34.550781 18 34 18 Z M 32 23 C 31.449219 23 31 23.445313 31 24 C 31 24.554688 31.449219 25 32 25 L 34 25 C 34.550781 25 35 24.554688 35 24 C 35 23.445313 34.550781 23 34 23 Z M 32.773438 29 L 33.226563 29 C 35.570313 29 37.574219 30.59375 38.097656 32.875 L 39.175781 37.550781 C 39.316406 38.148438 39.175781 38.765625 38.796875 39.246094 C 38.414063 39.722656 37.839844 40 37.230469 40 L 28.769531 40 C 28.160156 40 27.589844 39.722656 27.207031 39.246094 C 26.824219 38.765625 26.683594 38.148438 26.824219 37.550781 L 27.902344 32.875 C 28.429688 30.59375 30.429688 29 32.773438 29 Z M 31 34 C 30.449219 34 30 34.445313 30 35 C 30 35.554688 30.449219 36 31 36 L 35 36 C 35.550781 36 36 35.554688 36 35 C 36 34.445313 35.550781 34 35 34 Z M 13 52 C 12.449219 52 12 52.445313 12 53 C 12 53.554688 12.449219 54 13 54 L 17 54 C 17.550781 54 18 53.554688 18 53 C 18 52.445313 17.550781 52 17 52 Z M 21 52 C 20.449219 52 20 52.445313 20 53 C 20 53.554688 20.449219 54 21 54 L 49 54 C 49.550781 54 50 53.554688 50 53 C 50 52.445313 49.550781 52 49 52 Z \" />\n  </g>,\n);\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const FolderFileIcon = createSvgIcon(\n  <g>\n    <path d=\"M 5 10 C 3.300781 10 2 11.300781 2 13 L 2 52 C 2 54.199219 3.800781 56 6 56 L 60 56 C 62.199219 56 64 54.199219 64 52 L 64 23 C 64 21.300781 62.699219 20 61 20 L 58 20 L 58 19 C 58 17.300781 56.699219 16 55 16 L 29.699219 16 C 28.898438 16 28.199219 15.699219 27.597656 15.097656 L 23.902344 11.402344 C 23 10.5 21.699219 10 20.402344 10 Z M 5 12 L 20.402344 12 C 21.199219 12 21.898438 12.300781 22.5 12.902344 L 26.199219 16.597656 C 27.097656 17.5 28.398438 18 29.699219 18 L 55 18 C 55.601563 18 56 18.398438 56 19 L 56 52 C 56 52.601563 56.199219 53.300781 56.597656 54 L 6 54 C 4.898438 54 4 53.101563 4 52 L 4 46 L 45 46 C 45.601563 46 46 45.601563 46 45 C 46 44.398438 45.601563 44 45 44 L 4 44 L 4 13 C 4 12.398438 4.398438 12 5 12 Z M 58 22 L 61 22 C 61.601563 22 62 22.398438 62 23 L 62 52 C 62 53.101563 61.101563 54 60 54 C 58.800781 54 58 52.601563 58 52 Z M 11 24 C 10.398438 24 10 24.398438 10 25 C 10 25.601563 10.398438 26 11 26 L 21 26 C 21.601563 26 22 25.601563 22 25 C 22 24.398438 21.601563 24 21 24 Z M 25 24 C 24.398438 24 24 24.398438 24 25 C 24 25.601563 24.398438 26 25 26 L 31 26 C 31.601563 26 32 25.601563 32 25 C 32 24.398438 31.601563 24 31 24 Z M 11 28 C 10.398438 28 10 28.398438 10 29 C 10 29.601563 10.398438 30 11 30 L 15 30 C 15.601563 30 16 29.601563 16 29 C 16 28.398438 15.601563 28 15 28 Z M 19 28 C 18.398438 28 18 28.398438 18 29 C 18 29.601563 18.398438 30 19 30 L 26 30 C 26.601563 30 27 29.601563 27 29 C 27 28.398438 26.601563 28 26 28 Z M 49 44 C 48.398438 44 48 44.398438 48 45 C 48 45.601563 48.398438 46 49 46 L 53 46 C 53.601563 46 54 45.601563 54 45 C 54 44.398438 53.601563 44 53 44 Z M 7 48 C 6.398438 48 6 48.398438 6 49 L 6 51 C 6 51.601563 6.398438 52 7 52 C 7.601563 52 8 51.601563 8 51 L 8 49 C 8 48.398438 7.601563 48 7 48 Z M 12 48 C 11.398438 48 11 48.398438 11 49 L 11 51 C 11 51.601563 11.398438 52 12 52 C 12.601563 52 13 51.601563 13 51 L 13 49 C 13 48.398438 12.601563 48 12 48 Z M 17 48 C 16.398438 48 16 48.398438 16 49 L 16 51 C 16 51.601563 16.398438 52 17 52 C 17.601563 52 18 51.601563 18 51 L 18 49 C 18 48.398438 17.601563 48 17 48 Z M 22 48 C 21.398438 48 21 48.398438 21 49 L 21 51 C 21 51.601563 21.398438 52 22 52 C 22.601563 52 23 51.601563 23 51 L 23 49 C 23 48.398438 22.601563 48 22 48 Z M 27 48 C 26.398438 48 26 48.398438 26 49 L 26 51 C 26 51.601563 26.398438 52 27 52 C 27.601563 52 28 51.601563 28 51 L 28 49 C 28 48.398438 27.601563 48 27 48 Z M 32 48 C 31.398438 48 31 48.398438 31 49 L 31 51 C 31 51.601563 31.398438 52 32 52 C 32.601563 52 33 51.601563 33 51 L 33 49 C 33 48.398438 32.601563 48 32 48 Z M 37 48 C 36.398438 48 36 48.398438 36 49 L 36 51 C 36 51.601563 36.398438 52 37 52 C 37.601563 52 38 51.601563 38 51 L 38 49 C 38 48.398438 37.601563 48 37 48 Z M 42 48 C 41.398438 48 41 48.398438 41 49 L 41 51 C 41 51.601563 41.398438 52 42 52 C 42.601563 52 43 51.601563 43 51 L 43 49 C 43 48.398438 42.601563 48 42 48 Z M 47 48 C 46.398438 48 46 48.398438 46 49 L 46 51 C 46 51.601563 46.398438 52 47 52 C 47.601563 52 48 51.601563 48 51 L 48 49 C 48 48.398438 47.601563 48 47 48 Z M 52 48 C 51.398438 48 51 48.398438 51 49 L 51 51 C 51 51.601563 51.398438 52 52 52 C 52.601563 52 53 51.601563 53 51 L 53 49 C 53 48.398438 52.601563 48 52 48 Z \" />\n  </g>,\n);\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const ImageFileIcon = createSvgIcon(\n  <g>\n    <path d=\"M 21.65625 4 C 20.320313 4 19.066406 4.519531 18.121094 5.464844 L 9.464844 14.121094 C 8.519531 15.066406 8 16.320313 8 17.65625 L 8 57 C 8 58.652344 9.347656 60 11 60 L 51 60 C 52.652344 60 54 58.652344 54 57 L 54 7 C 54 5.347656 52.652344 4 51 4 Z M 22 6 L 51 6 C 51.550781 6 52 6.449219 52 7 L 52 57 C 52 57.550781 51.550781 58 51 58 L 11 58 C 10.449219 58 10 57.550781 10 57 L 10 18 L 19 18 C 20.652344 18 22 16.652344 22 15 Z M 20 6.5 L 20 15 C 20 15.550781 19.550781 16 19 16 L 10.5 16 C 10.605469 15.835938 10.734375 15.679688 10.878906 15.535156 L 19.535156 6.878906 C 19.679688 6.738281 19.835938 6.613281 20 6.5 Z M 20 24 C 17.792969 24 16 25.792969 16 28 C 16 30.207031 17.792969 32 20 32 C 22.207031 32 24 30.207031 24 28 C 24 25.792969 22.207031 24 20 24 Z M 20 25.75 C 21.242188 25.75 22.25 26.757813 22.25 28 C 22.25 29.242188 21.242188 30.25 20 30.25 C 18.757813 30.25 17.75 29.242188 17.75 28 C 17.75 26.757813 18.757813 25.75 20 25.75 Z M 37 30.414063 C 36.488281 30.414063 35.976563 30.609375 35.585938 31 L 29 37.585938 L 26.414063 35 C 25.632813 34.21875 24.363281 34.21875 23.585938 35 L 14.585938 44 L 13.042969 44 C 12.417969 44 12 44.398438 12 45 C 12 45.601563 12.523438 46 13.042969 46 L 48.980469 46 C 49.5 46 50.023438 45.601563 50.023438 45 C 50.023438 44.398438 49.5 44 48.980469 44 L 25.414063 44 L 37 32.414063 L 45.292969 40.707031 C 45.683594 41.097656 46.316406 41.097656 46.707031 40.707031 C 47.097656 40.316406 47.097656 39.683594 46.707031 39.292969 L 38.414063 31 C 38.023438 30.609375 37.511719 30.414063 37 30.414063 Z M 25 36.414063 L 27.585938 39 L 22.585938 44 L 17.414063 44 Z M 13 52 C 12.449219 52 12 52.449219 12 53 L 12 55 C 12 55.550781 12.449219 56 13 56 C 13.550781 56 14 55.550781 14 55 L 14 53 C 14 52.449219 13.550781 52 13 52 Z M 18 52 C 17.449219 52 17 52.449219 17 53 L 17 55 C 17 55.550781 17.449219 56 18 56 C 18.550781 56 19 55.550781 19 55 L 19 53 C 19 52.449219 18.550781 52 18 52 Z M 23 52 C 22.449219 52 22 52.449219 22 53 L 22 55 C 22 55.550781 22.449219 56 23 56 C 23.550781 56 24 55.550781 24 55 L 24 53 C 24 52.449219 23.550781 52 23 52 Z M 28 52 C 27.449219 52 27 52.449219 27 53 L 27 55 C 27 55.550781 27.449219 56 28 56 C 28.550781 56 29 55.550781 29 55 L 29 53 C 29 52.449219 28.550781 52 28 52 Z M 33 52 C 32.449219 52 32 52.449219 32 53 L 32 55 C 32 55.550781 32.449219 56 33 56 C 33.550781 56 34 55.550781 34 55 L 34 53 C 34 52.449219 33.550781 52 33 52 Z M 38 52 C 37.449219 52 37 52.449219 37 53 L 37 55 C 37 55.550781 37.449219 56 38 56 C 38.550781 56 39 55.550781 39 55 L 39 53 C 39 52.449219 38.550781 52 38 52 Z M 43 52 C 42.449219 52 42 52.449219 42 53 L 42 55 C 42 55.550781 42.449219 56 43 56 C 43.550781 56 44 55.550781 44 55 L 44 53 C 44 52.449219 43.550781 52 43 52 Z M 48 52 C 47.449219 52 47 52.449219 47 53 L 47 55 C 47 55.550781 47.449219 56 48 56 C 48.550781 56 49 55.550781 49 55 L 49 53 C 49 52.449219 48.550781 52 48 52 Z \" />\n  </g>,\n);\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const PowerPointFileIcon = createSvgIcon(\n  <g>\n    <path d=\"M 35.136719 2.386719 C 34.917969 2.378906 34.699219 2.390625 34.480469 2.429688 L 5.304688 7.578125 C 3.390625 7.917969 2 9.574219 2 11.515625 L 2 50.484375 C 2 52.429688 3.390625 54.085938 5.304688 54.421875 L 34.480469 59.570313 C 34.652344 59.601563 34.828125 59.613281 35 59.613281 C 35.703125 59.613281 36.382813 59.371094 36.925781 58.914063 C 37.609375 58.34375 38 57.503906 38 56.613281 L 38 52 L 57 52 C 58.652344 52 60 50.652344 60 49 L 60 13 C 60 11.347656 58.652344 10 57 10 L 38 10 L 38 5.382813 C 38 4.496094 37.609375 3.65625 36.925781 3.085938 C 36.417969 2.65625 35.789063 2.414063 35.136719 2.386719 Z M 35.105469 4.390625 C 35.359375 4.414063 35.542969 4.535156 35.640625 4.617188 C 35.777344 4.730469 36 4.980469 36 5.382813 L 36 56.613281 C 36 57.019531 35.777344 57.269531 35.640625 57.382813 C 35.507813 57.496094 35.226563 57.667969 34.828125 57.601563 L 5.652344 52.453125 C 4.695313 52.285156 4 51.457031 4 50.484375 L 4 11.515625 C 4 10.542969 4.695313 9.714844 5.652344 9.546875 L 34.824219 4.398438 C 34.925781 4.382813 35.019531 4.378906 35.105469 4.390625 Z M 38 12 L 57 12 C 57.550781 12 58 12.449219 58 13 L 58 49 C 58 49.550781 57.550781 50 57 50 L 38 50 L 38 45.949219 L 52.949219 45.949219 C 53.5 45.949219 53.949219 45.554688 53.949219 45 C 53.949219 44.445313 53.5 44 52.949219 44 L 50 44 L 50 41 C 50 40.445313 49.550781 40 49 40 L 46 40 L 46 37 C 46 36.445313 45.550781 36 45 36 L 41 36 C 40.449219 36 40 36.445313 40 37 L 40 39 L 38 39 L 38 32.46875 C 39.46875 33.449219 41.203125 34 43 34 C 47.960938 34 52 29.964844 52 25 C 52 20.035156 47.960938 16 43 16 C 41.1875 16 39.464844 16.535156 38 17.519531 Z M 42 18.078125 L 42 24.832031 C 42 25.027344 42.070313 25.203125 42.171875 25.359375 C 42.21875 25.492188 42.289063 25.617188 42.394531 25.726563 L 47.234375 30.5625 C 46.054688 31.460938 44.589844 32 43 32 C 41.113281 32 39.316406 31.230469 38 29.886719 L 38 20.105469 C 39.089844 18.992188 40.484375 18.292969 42 18.078125 Z M 44 18.078125 C 47.386719 18.566406 50 21.480469 50 25 C 50 26.546875 49.488281 27.976563 48.636719 29.136719 L 44 24.5 Z M 15 20 C 14.449219 20 14 20.445313 14 21 L 14 41 C 14 41.554688 14.449219 42 15 42 C 15.550781 42 16 41.554688 16 41 L 16 34 L 21 34 C 23.757813 34 26 31.757813 26 29 L 26 25 C 26 22.242188 23.757813 20 21 20 Z M 16 22 L 21 22 C 22.652344 22 24 23.347656 24 25 L 24 29 C 24 30.652344 22.652344 32 21 32 L 16 32 Z M 42 38 L 44 38 L 44 44 L 42 44 Z M 38 41 L 40 41 L 40 44 L 38 44 Z M 46 42 L 48 42 L 48 44 L 46 44 Z \" />\n  </g>,\n);\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const WordFileIcon = createSvgIcon(\n  <g>\n    <path d=\"M 21.65625 4 C 20.320313 4 19.0625 4.519531 18.121094 5.464844 L 9.464844 14.121094 C 8.519531 15.066406 8 16.320313 8 17.65625 L 8 57 C 8 58.652344 9.347656 60 11 60 L 51 60 C 52.652344 60 54 58.652344 54 57 L 54 7 C 54 5.347656 52.652344 4 51 4 Z M 22 6 L 51 6 C 51.550781 6 52 6.449219 52 7 L 52 57 C 52 57.550781 51.550781 58 51 58 L 11 58 C 10.449219 58 10 57.550781 10 57 L 10 18 L 19 18 C 20.652344 18 22 16.652344 22 15 Z M 20 6.5 L 20 15 C 20 15.550781 19.550781 16 19 16 L 10.5 16 C 10.613281 15.832031 10.738281 15.675781 10.878906 15.535156 L 19.535156 6.878906 C 19.679688 6.734375 19.835938 6.609375 20 6.5 Z M 21.140625 23.011719 C 21.015625 22.992188 20.878906 22.996094 20.746094 23.03125 C 20.210938 23.175781 19.894531 23.722656 20.03125 24.253906 L 25.03125 43.253906 C 25.148438 43.691406 25.539063 43.996094 25.984375 44 L 26 44 C 26.441406 44 26.832031 43.710938 26.957031 43.28125 L 31 29.546875 L 35.042969 43.28125 C 35.167969 43.707031 35.558594 44 36 44 L 36.015625 44 C 36.460938 43.992188 36.851563 43.6875 36.96875 43.253906 L 41.96875 24.253906 C 42.105469 23.722656 41.789063 23.175781 41.253906 23.03125 C 40.71875 22.890625 40.171875 23.210938 40.03125 23.746094 L 35.945313 39.273438 L 31.957031 25.71875 C 31.832031 25.292969 31.445313 25 31 25 C 30.554688 25 30.167969 25.292969 30.042969 25.71875 L 26.054688 39.277344 L 21.96875 23.746094 C 21.863281 23.347656 21.527344 23.066406 21.140625 23.011719 Z M 13 52 C 12.449219 52 12 52.445313 12 53 L 12 55 C 12 55.554688 12.449219 56 13 56 C 13.550781 56 14 55.554688 14 55 L 14 53 C 14 52.445313 13.550781 52 13 52 Z M 18 52 C 17.449219 52 17 52.445313 17 53 L 17 55 C 17 55.554688 17.449219 56 18 56 C 18.550781 56 19 55.554688 19 55 L 19 53 C 19 52.445313 18.550781 52 18 52 Z M 23 52 C 22.449219 52 22 52.445313 22 53 L 22 55 C 22 55.554688 22.449219 56 23 56 C 23.550781 56 24 55.554688 24 55 L 24 53 C 24 52.445313 23.550781 52 23 52 Z M 28 52 C 27.449219 52 27 52.445313 27 53 L 27 55 C 27 55.554688 27.449219 56 28 56 C 28.550781 56 29 55.554688 29 55 L 29 53 C 29 52.445313 28.550781 52 28 52 Z M 33 52 C 32.449219 52 32 52.445313 32 53 L 32 55 C 32 55.554688 32.449219 56 33 56 C 33.550781 56 34 55.554688 34 55 L 34 53 C 34 52.445313 33.550781 52 33 52 Z M 38 52 C 37.449219 52 37 52.445313 37 53 L 37 55 C 37 55.554688 37.449219 56 38 56 C 38.550781 56 39 55.554688 39 55 L 39 53 C 39 52.445313 38.550781 52 38 52 Z M 43 52 C 42.449219 52 42 52.445313 42 53 L 42 55 C 42 55.554688 42.449219 56 43 56 C 43.550781 56 44 55.554688 44 55 L 44 53 C 44 52.445313 43.550781 52 43 52 Z M 48 52 C 47.449219 52 47 52.445313 47 53 L 47 55 C 47 55.554688 47.449219 56 48 56 C 48.550781 56 49 55.554688 49 55 L 49 53 C 49 52.445313 48.550781 52 48 52 Z \" />\n  </g>,\n);\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const SpreadsheetFileIcon = createSvgIcon(\n  <g>\n    <path d=\"M 35.136719 2.386719 C 34.917969 2.378906 34.699219 2.390625 34.480469 2.429688 L 5.304688 7.578125 C 3.390625 7.917969 2 9.574219 2 11.515625 L 2 50.484375 C 2 52.429688 3.390625 54.085938 5.304688 54.421875 L 34.480469 59.570313 C 34.652344 59.601563 34.828125 59.613281 35 59.613281 C 35.703125 59.613281 36.382813 59.371094 36.925781 58.914063 C 37.609375 58.34375 38 57.503906 38 56.613281 L 38 52 L 57 52 C 58.652344 52 60 50.652344 60 49 L 60 13 C 60 11.347656 58.652344 10 57 10 L 38 10 L 38 5.382813 C 38 4.496094 37.609375 3.65625 36.925781 3.085938 C 36.417969 2.65625 35.789063 2.414063 35.136719 2.386719 Z M 35.105469 4.390625 C 35.359375 4.414063 35.542969 4.535156 35.640625 4.617188 C 35.777344 4.730469 36 4.980469 36 5.382813 L 36 56.613281 C 36 57.019531 35.777344 57.269531 35.640625 57.382813 C 35.507813 57.496094 35.226563 57.671875 34.828125 57.601563 L 5.652344 52.453125 C 4.695313 52.285156 4 51.457031 4 50.484375 L 4 11.515625 C 4 10.542969 4.695313 9.714844 5.652344 9.546875 L 34.824219 4.398438 C 34.925781 4.382813 35.019531 4.378906 35.105469 4.390625 Z M 38 12 L 57 12 C 57.550781 12 58 12.449219 58 13 L 58 49 C 58 49.550781 57.550781 50 57 50 L 38 50 L 38 44 L 41 44 C 41.550781 44 42 43.554688 42 43 C 42 42.445313 41.550781 42 41 42 L 38 42 L 38 38 L 41 38 C 41.550781 38 42 37.554688 42 37 C 42 36.445313 41.550781 36 41 36 L 38 36 L 38 32 L 41 32 C 41.550781 32 42 31.554688 42 31 C 42 30.445313 41.550781 30 41 30 L 38 30 L 38 26 L 41 26 C 41.550781 26 42 25.554688 42 25 C 42 24.445313 41.550781 24 41 24 L 38 24 L 38 20 L 41 20 C 41.550781 20 42 19.554688 42 19 C 42 18.445313 41.550781 18 41 18 L 38 18 Z M 45 18 C 44.449219 18 44 18.445313 44 19 C 44 19.554688 44.449219 20 45 20 L 51 20 C 51.550781 20 52 19.554688 52 19 C 52 18.445313 51.550781 18 51 18 Z M 12.824219 20.015625 C 12.695313 20.039063 12.570313 20.085938 12.453125 20.160156 C 11.992188 20.460938 11.859375 21.082031 12.160156 21.546875 L 18.308594 31 L 12.160156 40.453125 C 11.859375 40.917969 11.992188 41.539063 12.453125 41.839844 C 12.625 41.949219 12.8125 42 13 42 C 13.324219 42 13.648438 41.839844 13.839844 41.546875 L 19.5 32.835938 L 25.160156 41.546875 C 25.351563 41.839844 25.675781 42 26 42 C 26.1875 42 26.375 41.949219 26.546875 41.839844 C 27.007813 41.539063 27.140625 40.917969 26.839844 40.453125 L 20.691406 31 L 26.839844 21.546875 C 27.140625 21.082031 27.007813 20.460938 26.546875 20.160156 C 26.082031 19.859375 25.460938 19.992188 25.160156 20.453125 L 19.5 29.164063 L 13.839844 20.453125 C 13.613281 20.105469 13.207031 19.945313 12.824219 20.015625 Z M 45 24 C 44.449219 24 44 24.445313 44 25 C 44 25.554688 44.449219 26 45 26 L 51 26 C 51.550781 26 52 25.554688 52 25 C 52 24.445313 51.550781 24 51 24 Z M 45 30 C 44.449219 30 44 30.445313 44 31 C 44 31.554688 44.449219 32 45 32 L 51 32 C 51.550781 32 52 31.554688 52 31 C 52 30.445313 51.550781 30 51 30 Z M 45 36 C 44.449219 36 44 36.445313 44 37 C 44 37.554688 44.449219 38 45 38 L 51 38 C 51.550781 38 52 37.554688 52 37 C 52 36.445313 51.550781 36 51 36 Z M 45 42 C 44.449219 42 44 42.445313 44 43 C 44 43.554688 44.449219 44 45 44 L 51 44 C 51.550781 44 52 43.554688 52 43 C 52 42.445313 51.550781 42 51 42 Z \" />\n  </g>,\n);\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const SharedFolderFileIcon = createSvgIcon(\n  <g>\n    <path d=\"M 3 8 C 1.347656 8 0 9.347656 0 11 L 0 52 C 0 54.207031 1.792969 56 4 56 L 58 56 C 60.207031 56 62 54.207031 62 52 L 62 21 C 62 19.347656 60.652344 18 59 18 L 56 18 L 56 17 C 56 15.347656 54.652344 14 53 14 L 27.707031 14 C 26.910156 14 26.164063 13.691406 25.597656 13.132813 L 21.875 9.445313 C 20.929688 8.515625 19.679688 8 18.355469 8 Z M 3 10 L 18.355469 10 C 19.152344 10 19.898438 10.308594 20.464844 10.867188 L 24.1875 14.554688 C 25.132813 15.484375 26.382813 16 27.707031 16 L 53 16 C 53.550781 16 54 16.449219 54 17 L 54 52 C 54 52.617188 54.222656 53.339844 54.632813 54 L 4 54 C 2.898438 54 2 53.101563 2 52 L 2 46 L 43 46 C 43.550781 46 44 45.550781 44 45 C 44 44.449219 43.550781 44 43 44 L 2 44 L 2 11 C 2 10.449219 2.449219 10 3 10 Z M 56 20 L 59 20 C 59.550781 20 60 20.449219 60 21 L 60 52 C 60 53.101563 59.101563 54 58 54 C 56.753906 54 56 52.609375 56 52 Z M 27 22 C 24.242188 22 22 24.242188 22 27 L 22 29 C 22 29.992188 22.300781 30.914063 22.800781 31.691406 C 20.058594 32.886719 17.882813 35.527344 17.28125 38.765625 C 17.179688 39.3125 17.539063 39.832031 18.082031 39.933594 C 18.625 40.035156 19.148438 39.675781 19.25 39.132813 C 19.785156 36.242188 21.863281 33.949219 24.371094 33.234375 C 25.136719 33.710938 26.03125 34 27 34 C 27.96875 34 28.863281 33.710938 29.628906 33.234375 C 32.136719 33.949219 34.214844 36.246094 34.75 39.136719 C 34.839844 39.617188 35.261719 39.953125 35.734375 39.953125 C 35.796875 39.953125 35.855469 39.949219 35.917969 39.9375 C 36.460938 39.835938 36.820313 39.3125 36.71875 38.769531 C 36.117188 35.53125 33.941406 32.886719 31.199219 31.691406 C 31.699219 30.914063 32 29.992188 32 29 L 32 27 C 32 24.242188 29.757813 22 27 22 Z M 27 24 C 28.652344 24 30 25.347656 30 27 L 30 29 C 30 30.652344 28.652344 32 27 32 C 25.347656 32 24 30.652344 24 29 L 24 27 C 24 25.347656 25.347656 24 27 24 Z M 47 44 C 46.449219 44 46 44.449219 46 45 C 46 45.550781 46.449219 46 47 46 L 51 46 C 51.550781 46 52 45.550781 52 45 C 52 44.449219 51.550781 44 51 44 Z M 5 48 C 4.449219 48 4 48.449219 4 49 L 4 51 C 4 51.550781 4.449219 52 5 52 C 5.550781 52 6 51.550781 6 51 L 6 49 C 6 48.449219 5.550781 48 5 48 Z M 10 48 C 9.449219 48 9 48.449219 9 49 L 9 51 C 9 51.550781 9.449219 52 10 52 C 10.550781 52 11 51.550781 11 51 L 11 49 C 11 48.449219 10.550781 48 10 48 Z M 15 48 C 14.449219 48 14 48.449219 14 49 L 14 51 C 14 51.550781 14.449219 52 15 52 C 15.550781 52 16 51.550781 16 51 L 16 49 C 16 48.449219 15.550781 48 15 48 Z M 20 48 C 19.449219 48 19 48.449219 19 49 L 19 51 C 19 51.550781 19.449219 52 20 52 C 20.550781 52 21 51.550781 21 51 L 21 49 C 21 48.449219 20.550781 48 20 48 Z M 25 48 C 24.449219 48 24 48.449219 24 49 L 24 51 C 24 51.550781 24.449219 52 25 52 C 25.550781 52 26 51.550781 26 51 L 26 49 C 26 48.449219 25.550781 48 25 48 Z M 30 48 C 29.449219 48 29 48.449219 29 49 L 29 51 C 29 51.550781 29.449219 52 30 52 C 30.550781 52 31 51.550781 31 51 L 31 49 C 31 48.449219 30.550781 48 30 48 Z M 35 48 C 34.449219 48 34 48.449219 34 49 L 34 51 C 34 51.550781 34.449219 52 35 52 C 35.550781 52 36 51.550781 36 51 L 36 49 C 36 48.449219 35.550781 48 35 48 Z M 40 48 C 39.449219 48 39 48.449219 39 49 L 39 51 C 39 51.550781 39.449219 52 40 52 C 40.550781 52 41 51.550781 41 51 L 41 49 C 41 48.449219 40.550781 48 40 48 Z M 45 48 C 44.449219 48 44 48.449219 44 49 L 44 51 C 44 51.550781 44.449219 52 45 52 C 45.550781 52 46 51.550781 46 51 L 46 49 C 46 48.449219 45.550781 48 45 48 Z M 50 48 C 49.449219 48 49 48.449219 49 49 L 49 51 C 49 51.550781 49.449219 52 50 52 C 50.550781 52 51 51.550781 51 51 L 51 49 C 51 48.449219 50.550781 48 50 48 Z \" />\n  </g>,\n);\n","import clsx from 'clsx';\nimport {DefaultFileIcon} from './icons/default-file-icon';\nimport {AudioFileIcon} from './icons/audio-file-icon';\nimport {VideoFileIcon} from './icons/video-file-icon';\nimport {TextFileIcon} from './icons/text-file-icon';\nimport {PdfFileIcon} from './icons/pdf-file-icon';\nimport {ArchiveFileIcon} from './icons/archive-file-icon';\nimport {FolderFileIcon} from './icons/folder-file-icon';\nimport {ImageFileIcon} from './icons/image-file-icon';\nimport {PowerPointFileIcon} from './icons/power-point-file-icon';\nimport {WordFileIcon} from './icons/word-file-icon';\nimport {SpreadsheetFileIcon} from './icons/spreadsheet-file-icon';\nimport {SharedFolderFileIcon} from './icons/shared-folder-file-icon';\nimport {IconSize} from '@ui/icons/svg-icon';\n\ninterface Props {\n  type?: string;\n  mime?: string | null;\n  className?: string;\n  size?: IconSize;\n}\nexport function FileTypeIcon({type, mime, className, size}: Props) {\n  if (!type && mime) {\n    type = mime.split('/')[0];\n  }\n  // @ts-ignore\n  const Icon = FileTypeIcons[type] || FileTypeIcons.default;\n  return (\n    <Icon\n      size={size}\n      className={clsx(className, `${type}-file-color`)}\n      viewBox=\"0 0 64 64\"\n    />\n  );\n}\n\nconst FileTypeIcons = {\n  default: DefaultFileIcon,\n  audio: AudioFileIcon,\n  video: VideoFileIcon,\n  text: TextFileIcon,\n  pdf: PdfFileIcon,\n  archive: ArchiveFileIcon,\n  folder: FolderFileIcon,\n  sharedFolder: SharedFolderFileIcon,\n  image: ImageFileIcon,\n  powerPoint: PowerPointFileIcon,\n  word: WordFileIcon,\n  spreadsheet: SpreadsheetFileIcon,\n};\n","import clsx from 'clsx';\nimport {FileTypeIcon} from './file-type-icon';\nimport {useFileEntryUrls} from '../../file-entry-urls';\nimport {useTrans} from '@ui/i18n/use-trans';\n\nconst TwoMB = 2 * 1024 * 1024;\n\ninterface Props {\n  file: {\n    name: string;\n    type: string;\n    thumbnail?: boolean;\n    file_size?: number;\n    hash: string;\n    file_name: string;\n    url?: string;\n  };\n  className?: string;\n  iconClassName?: string;\n  showImage?: boolean;\n}\nexport function FileThumbnail({\n  file,\n  className,\n  iconClassName,\n  showImage = true,\n}: Props) {\n  const {trans} = useTrans();\n  const {previewUrl} = useFileEntryUrls(file, {preferThumbnail: true});\n\n  // don't show images for files larger than 2MB, if thumbnail was not generated to avoid ui lag\n  if (file.file_size && file.file_size > TwoMB && !file.thumbnail) {\n    showImage = false;\n  }\n\n  if (showImage && file.type === 'image' && previewUrl) {\n    const alt = trans({\n      message: ':fileName thumbnail',\n      values: {fileName: file.name},\n    });\n    return (\n      <img\n        className={clsx(className, 'object-cover')}\n        src={previewUrl}\n        alt={alt}\n        draggable={false}\n      />\n    );\n  }\n  return <FileTypeIcon className={iconClassName} type={file.type} />;\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport {Fragment, ReactNode, useContext, useMemo} from 'react';\nimport clsx from 'clsx';\nimport {getPreviewForEntry} from './available-previews';\nimport {FileEntry} from '../../file-entry';\nimport {FilePreviewContext} from './file-preview-context';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {ChevronLeftIcon} from '@ui/icons/material/ChevronLeft';\nimport {ChevronRightIcon} from '@ui/icons/material/ChevronRight';\nimport {FileDownloadIcon} from '@ui/icons/material/FileDownload';\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\nimport {useFileEntryUrls} from '../../file-entry-urls';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {FileThumbnail} from '@common/uploads/components/file-type-icon/file-thumbnail';\nimport {useMediaQuery} from '@ui/utils/hooks/use-media-query';\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport {useControlledState} from '@react-stately/utils';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\n\nexport interface FilePreviewContainerProps {\n  entries: FileEntry[];\n  activeIndex?: number;\n  defaultActiveIndex?: number;\n  onActiveIndexChange?: (index: number) => void;\n  onClose?: () => void;\n  showHeader?: boolean;\n  headerActionsLeft?: ReactNode;\n  className?: string;\n  allowDownload?: boolean;\n}\nexport function FilePreviewContainer({\n  entries,\n  onClose,\n  showHeader = true,\n  className,\n  headerActionsLeft,\n  allowDownload = true,\n  ...props\n}: FilePreviewContainerProps) {\n  const isMobile = useMediaQuery('(max-width: 1024px)');\n\n  const [activeIndex, setActiveIndex] = useControlledState(\n    props.activeIndex,\n    props.defaultActiveIndex || 0,\n    props.onActiveIndexChange,\n  );\n\n  const activeEntry = entries[activeIndex];\n  const contextValue = useMemo(() => {\n    return {entries, activeIndex};\n  }, [entries, activeIndex]);\n  const Preview = getPreviewForEntry(activeEntry);\n\n  if (!activeEntry) {\n    onClose?.();\n    return null;\n  }\n\n  const canOpenNext = entries.length - 1 > activeIndex;\n  const openNext = () => {\n    setActiveIndex(activeIndex + 1);\n  };\n  const canOpenPrevious = activeIndex > 0;\n  const openPrevious = () => {\n    setActiveIndex(activeIndex - 1);\n  };\n\n  return (\n    <FilePreviewContext.Provider value={contextValue}>\n      {showHeader && (\n        <Header\n          actionsLeft={headerActionsLeft}\n          isMobile={isMobile}\n          onClose={onClose}\n          onNext={canOpenNext ? openNext : undefined}\n          onPrevious={canOpenPrevious ? openPrevious : undefined}\n          allowDownload={allowDownload}\n        />\n      )}\n      <div className={clsx('relative flex-auto overflow-hidden', className)}>\n        {isMobile && (\n          <IconButton\n            size=\"lg\"\n            className=\"absolute left-0 top-1/2 z-10 -translate-y-1/2 transform text-muted\"\n            disabled={!canOpenPrevious}\n            onClick={openPrevious}\n          >\n            <KeyboardArrowLeftIcon />\n          </IconButton>\n        )}\n        <AnimatePresence initial={false}>\n          <m.div\n            className=\"absolute inset-0 flex items-center justify-center\"\n            key={activeEntry.id}\n            {...opacityAnimation}\n          >\n            <Preview\n              className=\"max-h-[calc(100%-30px)]\"\n              entry={activeEntry}\n              allowDownload={allowDownload}\n            />\n          </m.div>\n        </AnimatePresence>\n        {isMobile && (\n          <IconButton\n            size=\"lg\"\n            className=\"absolute right-0 top-1/2 z-10 -translate-y-1/2 transform text-muted\"\n            disabled={!canOpenNext}\n            onClick={openNext}\n          >\n            <KeyboardArrowRightIcon />\n          </IconButton>\n        )}\n      </div>\n    </FilePreviewContext.Provider>\n  );\n}\n\ninterface HeaderProps {\n  onNext?: () => void;\n  onPrevious?: () => void;\n  onClose?: () => void;\n  isMobile: boolean | null;\n  actionsLeft?: ReactNode;\n  allowDownload?: boolean;\n}\nfunction Header({\n  onNext,\n  onPrevious,\n  onClose,\n  isMobile,\n  actionsLeft,\n  allowDownload,\n}: HeaderProps) {\n  const {entries, activeIndex} = useContext(FilePreviewContext);\n  const activeEntry = entries[activeIndex];\n  const {downloadUrl} = useFileEntryUrls(activeEntry);\n\n  const desktopDownloadButton = (\n    <Button\n      startIcon={<FileDownloadIcon />}\n      variant=\"text\"\n      onClick={() => {\n        if (downloadUrl) {\n          downloadFileFromUrl(downloadUrl);\n        }\n      }}\n    >\n      <Trans message=\"Download\" />\n    </Button>\n  );\n\n  const mobileDownloadButton = (\n    <IconButton\n      onClick={() => {\n        if (downloadUrl) {\n          downloadFileFromUrl(downloadUrl);\n        }\n      }}\n    >\n      <FileDownloadIcon />\n    </IconButton>\n  );\n\n  const downloadButton = isMobile\n    ? mobileDownloadButton\n    : desktopDownloadButton;\n\n  return (\n    <div className=\"flex min-h-50 flex-shrink-0 items-center justify-between gap-20 border-b bg-paper px-10 text-sm text-muted\">\n      <div className=\"flex w-1/3 items-center justify-start gap-4\">\n        {actionsLeft}\n        {allowDownload ? downloadButton : undefined}\n      </div>\n      <div className=\"flex w-1/3 flex-nowrap items-center justify-center gap-10 text-main\">\n        <FileThumbnail\n          file={activeEntry}\n          iconClassName=\"w-16 h-16\"\n          showImage={false}\n        />\n        <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap\">\n          {activeEntry.name}\n        </div>\n      </div>\n      <div className=\"flex w-1/3 items-center justify-end gap-10 whitespace-nowrap\">\n        {!isMobile && (\n          <Fragment>\n            <IconButton disabled={!onPrevious} onClick={onPrevious}>\n              <ChevronLeftIcon />\n            </IconButton>\n            <div>{activeIndex + 1}</div>\n            <div>/</div>\n            <div>{entries.length}</div>\n            <IconButton disabled={!onNext} onClick={onNext}>\n              <ChevronRightIcon />\n            </IconButton>\n            <div className=\"mx-20 h-24 w-1 bg-divider\" />\n          </Fragment>\n        )}\n        <IconButton radius=\"rounded-none\" onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","import {\n  FilePreviewContainer,\n  FilePreviewContainerProps,\n} from './file-preview-container';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\n\ninterface Props extends Omit<FilePreviewContainerProps, 'onClose'> {}\nexport function FilePreviewDialog(props: Props) {\n  return (\n    <Dialog\n      size=\"fullscreenTakeover\"\n      background=\"bg-alt\"\n      className=\"flex flex-col\"\n    >\n      <Content {...props} />\n    </Dialog>\n  );\n}\n\nfunction Content(props: Props) {\n  const {close} = useDialogContext();\n  return <FilePreviewContainer onClose={close} {...props} />;\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n  FilterSelectControl,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {USER_MODEL} from '@ui/types/user';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const FILE_ENTRY_TYPE_FILTER: BackendFilter<FilterSelectControl> = {\n  key: 'type',\n  label: message('Type'),\n  description: message('Type of the file'),\n  defaultOperator: FilterOperator.eq,\n  control: {\n    type: FilterControlType.Select,\n    defaultValue: '05',\n    options: [\n      {key: '02', label: message('Text'), value: 'text'},\n      {\n        key: '03',\n        label: message('Audio'),\n        value: 'audio',\n      },\n      {\n        key: '04',\n        label: message('Video'),\n        value: 'video',\n      },\n      {\n        key: '05',\n        label: message('Image'),\n        value: 'image',\n      },\n      {key: '06', label: message('PDF'), value: 'pdf'},\n      {\n        key: '07',\n        label: message('Spreadsheet'),\n        value: 'spreadsheet',\n      },\n      {\n        key: '08',\n        label: message('Word Document'),\n        value: 'word',\n      },\n      {\n        key: '09',\n        label: message('Photoshop'),\n        value: 'photoshop',\n      },\n      {\n        key: '10',\n        label: message('Archive'),\n        value: 'archive',\n      },\n      {\n        key: '11',\n        label: message('Folder'),\n        value: 'folder',\n      },\n    ],\n  },\n};\n\nexport const FILE_ENTRY_INDEX_FILTERS: BackendFilter[] = [\n  FILE_ENTRY_TYPE_FILTER,\n  {\n    key: 'public',\n    label: message('Visibility'),\n    description: message('Whether file is publicly accessible'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {key: '01', label: message('Private'), value: false},\n        {key: '02', label: message('Public'), value: true},\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date file was uploaded'),\n  }),\n  updatedAtFilter({\n    description: message('Date file was last changed'),\n  }),\n  {\n    key: 'owner_id',\n    label: message('Uploader'),\n    description: message('User that this file was uploaded by'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.SelectModel,\n      model: USER_MODEL,\n    },\n  },\n];\n","import React, {Fragment} from 'react';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {FileEntry} from '../../uploads/file-entry';\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\nimport {CheckIcon} from '@ui/icons/material/Check';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {FormattedBytes} from '@ui/i18n/formatted-bytes';\nimport {VisibilityIcon} from '@ui/icons/material/Visibility';\nimport uploadSvg from './upload.svg';\nimport {FilePreviewDialog} from '@common/uploads/components/file-preview/file-preview-dialog';\nimport {FILE_ENTRY_INDEX_FILTERS} from './file-entry-index-filters';\nimport {FileTypeIcon} from '@common/uploads/components/file-type-icon/file-type-icon';\nimport {User} from '@ui/types/user';\n\nconst columnConfig: ColumnConfig<FileEntry>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Name\" />,\n    body: entry => (\n      <Fragment>\n        <div className=\"overflow-x-hidden overflow-ellipsis\">{entry.name}</div>\n        <div className=\"overflow-x-hidden overflow-ellipsis text-xs text-muted\">\n          {entry.file_name}\n        </div>\n      </Fragment>\n    ),\n  },\n  {\n    key: 'owner_id',\n    allowsSorting: true,\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Uploader\" />,\n    body: entry => {\n      const owner =\n        entry.users?.find(user => user.owns_entry) ?? entry.users?.[0];\n      if (!owner) return null;\n      return (\n        <NameWithAvatar\n          image={(owner as User).image}\n          label={(owner as User).name}\n          description={owner.email}\n        />\n      );\n    },\n  },\n  {\n    key: 'type',\n    width: 'w-100 flex-shrink-0',\n    allowsSorting: true,\n    header: () => <Trans message=\"Type\" />,\n    body: entry => (\n      <div className=\"flex items-center gap-12\">\n        <FileTypeIcon type={entry.type} className=\"h-24 w-24 overflow-hidden\" />\n        <div className=\"capitalize\">{entry.type}</div>\n      </div>\n    ),\n  },\n  {\n    key: 'public',\n    allowsSorting: true,\n    width: 'w-60 flex-shrink-0',\n    header: () => <Trans message=\"Public\" />,\n    body: entry =>\n      entry.public ? (\n        <CheckIcon className=\"text-positive icon-md\" />\n      ) : (\n        <CloseIcon className=\"text-danger icon-md\" />\n      ),\n  },\n  {\n    key: 'file_size',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"File size\" />,\n    body: entry => <FormattedBytes bytes={entry.file_size} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: entry => <FormattedDate date={entry.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    visibleInMode: 'all',\n    body: entry => {\n      return (\n        <DialogTrigger type=\"modal\">\n          <IconButton size=\"md\" className=\"text-muted\">\n            <VisibilityIcon />\n          </IconButton>\n          <FilePreviewDialog entries={[entry]} />\n        </DialogTrigger>\n      );\n    },\n  },\n];\n\nexport function FileEntryIndexPage() {\n  return (\n    <DataTablePage\n      endpoint=\"file-entries\"\n      title={<Trans message=\"Uploaded files and folders\" />}\n      columns={columnConfig}\n      filters={FILE_ENTRY_INDEX_FILTERS}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={uploadSvg}\n          title={<Trans message=\"Nothing has been uploaded yet\" />}\n          filteringTitle={<Trans message=\"No matching files or folders\" />}\n        />\n      }\n    />\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {\n  createdAtFilter,\n  timestampFilter,\n  updatedAtFilter,\n} from '../../datatable/filters/timestamp-filters';\n\nexport const SubscriptionIndexPageFilters: BackendFilter[] = [\n  {\n    key: 'ends_at',\n    label: message('Status'),\n    description: message('Whether subscription is active or cancelled'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: 'active',\n      options: [\n        {\n          key: 'active',\n          label: message('Active'),\n          value: {value: null, operator: FilterOperator.eq},\n        },\n        {\n          key: 'cancelled',\n          label: message('Cancelled'),\n          value: {value: null, operator: FilterOperator.ne},\n        },\n      ],\n    },\n  },\n  {\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: 'stripe',\n      options: [\n        {\n          key: 'stripe',\n          label: message('Stripe'),\n          value: 'stripe',\n        },\n        {\n          key: 'paypal',\n          label: message('PayPal'),\n          value: 'paypal',\n        },\n        {\n          key: 'none',\n          label: message('None'),\n          value: 'none',\n        },\n      ],\n    },\n    key: 'gateway_name',\n    label: message('Gateway'),\n    description: message(\n      'With which payment provider was subscription created',\n    ),\n    defaultOperator: FilterOperator.eq,\n  },\n  timestampFilter({\n    key: 'renews_at',\n    label: message('Renew date'),\n    description: message('Date subscription will renew'),\n  }),\n  createdAtFilter({\n    description: message('Date subscription was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date subscription was last updated'),\n  }),\n];\n","export default \"__VITE_ASSET__2e46d67b__\"","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Subscription} from '@common/billing/subscription';\n\ninterface Response extends BackendResponse {\n  subscription: Subscription;\n}\n\nexport interface UpdateSubscriptionPayload extends Partial<Subscription> {\n  id: number;\n}\n\nexport function useUpdateSubscription(\n  form: UseFormReturn<UpdateSubscriptionPayload>,\n) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: UpdateSubscriptionPayload) => updateSubscription(props),\n    onSuccess: () => {\n      toast(trans(message('Subscription updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('billing/subscriptions'),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateSubscription({\n  id,\n  ...payload\n}: UpdateSubscriptionPayload): Promise<Response> {\n  return apiClient\n    .put(`billing/subscriptions/${id}`, payload)\n    .then(r => r.data);\n}\n","import {UseFormReturn} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\nimport {Subscription} from '../../billing/subscription';\nimport {FormDatePicker} from '@ui/forms/input-field/date/date-picker/date-picker';\nimport {useProducts} from '../../billing/pricing-table/use-products';\nimport {FormattedPrice} from '../../billing/formatted-price';\nimport {FormNormalizedModelField} from '../../ui/normalized-model/normalized-model-field';\n\ninterface CrupdateSubscriptionForm {\n  onSubmit: (values: Partial<Subscription>) => void;\n  formId: string;\n  form: UseFormReturn<Partial<Subscription>>;\n}\nexport function CrupdateSubscriptionForm({\n  form,\n  onSubmit,\n  formId,\n}: CrupdateSubscriptionForm) {\n  const query = useProducts();\n  // @ts-ignore\n  const watchedProductId = form.watch('product_id');\n  const selectedProduct = query.data?.products.find(\n    p => p.id === watchedProductId,\n  );\n\n  return (\n    <Form id={formId} form={form} onSubmit={onSubmit}>\n      <FormNormalizedModelField\n        name=\"user_id\"\n        className=\"mb-20\"\n        endpoint=\"normalized-models/user\"\n        label={<Trans message=\"User\" />}\n      />\n      <FormSelect\n        name=\"product_id\"\n        selectionMode=\"single\"\n        className=\"mb-20\"\n        label={<Trans message=\"Plan\" />}\n      >\n        {query.data?.products\n          .filter(p => !p.free)\n          .map(product => (\n            <Item key={product.id} value={product.id}>\n              <Trans message={product.name} />\n            </Item>\n          ))}\n      </FormSelect>\n      {!selectedProduct?.free && (\n        <FormSelect\n          name=\"price_id\"\n          selectionMode=\"single\"\n          className=\"mb-20\"\n          label={<Trans message=\"Price\" />}\n        >\n          {selectedProduct?.prices.map(price => (\n            <Item key={price.id} value={price.id}>\n              <FormattedPrice price={price} />\n            </Item>\n          ))}\n        </FormSelect>\n      )}\n      <FormTextField\n        inputElementType=\"textarea\"\n        rows={3}\n        name=\"description\"\n        label={<Trans message=\"Description\" />}\n        className=\"mb-20\"\n      />\n      <FormDatePicker\n        className=\"mb-20\"\n        name=\"renews_at\"\n        granularity=\"day\"\n        label={<Trans message=\"Renews at\" />}\n        description={\n          <Trans message=\"This will only change local records. User will continue to be billed on their original cycle on the payment gateway.\" />\n        }\n      />\n      <FormDatePicker\n        className=\"mb-20\"\n        name=\"ends_at\"\n        granularity=\"day\"\n        label={<Trans message=\"Ends at\" />}\n        description={\n          <Trans message=\"This will only change local records. User will continue to be billed on their original cycle on the payment gateway.\" />\n        }\n      />\n    </Form>\n  );\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useForm} from 'react-hook-form';\nimport {Subscription} from '../../billing/subscription';\nimport {\n  UpdateSubscriptionPayload,\n  useUpdateSubscription,\n} from './requests/use-update-subscription';\nimport {CrupdateSubscriptionForm} from './crupdate-subscription-form';\n\ninterface UpdateSubscriptionDialogProps {\n  subscription: Subscription;\n}\nexport function UpdateSubscriptionDialog({\n  subscription,\n}: UpdateSubscriptionDialogProps) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<UpdateSubscriptionPayload>({\n    defaultValues: {\n      id: subscription.id,\n      product_id: subscription.product_id,\n      price_id: subscription.price_id,\n      description: subscription.description,\n      renews_at: subscription.renews_at,\n      ends_at: subscription.ends_at,\n      user_id: subscription.user_id,\n    },\n  });\n  const updateSubscription = useUpdateSubscription(form);\n\n  return (\n    <Dialog size=\"md\">\n      <DialogHeader>\n        <Trans message=\"Update subscription\" />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateSubscriptionForm\n          formId={formId}\n          form={form as any}\n          onSubmit={values => {\n            updateSubscription.mutate(values as UpdateSubscriptionPayload, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={updateSubscription.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Tag} from '@common/tags/tag';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Subscription} from '@common/billing/subscription';\n\nconst endpoint = 'billing/subscriptions';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload extends Partial<Subscription> {}\n\nexport function useCreateSubscription(form: UseFormReturn<Payload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: Payload) => createNewSubscription(props),\n    onSuccess: () => {\n      toast(trans(message('Subscription created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createNewSubscription(payload: Payload): Promise<Response> {\n  return apiClient.post(endpoint, payload).then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useForm} from 'react-hook-form';\nimport {useCreateSubscription} from './requests/use-create-subscription';\nimport {Subscription} from '../../billing/subscription';\nimport {CrupdateSubscriptionForm} from './crupdate-subscription-form';\n\nexport function CreateSubscriptionDialog() {\n  const {close, formId} = useDialogContext();\n  const form = useForm<Partial<Subscription>>({});\n  const createSubscription = useCreateSubscription(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Add new subscription\" />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateSubscriptionForm\n          formId={formId}\n          form={form}\n          onSubmit={values => {\n            createSubscription.mutate(values, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={createSubscription.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PlayArrowIcon = createSvgIcon(\n  <path d=\"M10 8.64 15.27 12 10 15.36V8.64M8 5v14l11-7L8 5z\" />\n, 'PlayArrowOutlined');\n","import React, {Fragment} from 'react';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport {SubscriptionIndexPageFilters} from './subscription-index-page-filters';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport subscriptionsSvg from './subscriptions.svg';\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\nimport {Subscription} from '../../billing/subscription';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {UpdateSubscriptionDialog} from './update-subscription-dialog';\nimport {CreateSubscriptionDialog} from './create-subscription-dialog';\nimport {useCancelSubscription} from '../../billing/billing-page/requests/use-cancel-subscription';\nimport {PauseIcon} from '@ui/icons/material/Pause';\nimport {queryClient} from '../../http/query-client';\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {useResumeSubscription} from '../../billing/billing-page/requests/use-resume-subscription';\nimport {PlayArrowIcon} from '@ui/icons/material/PlayArrow';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\n\nconst endpoint = 'billing/subscriptions';\n\nconst columnConfig: ColumnConfig<Subscription>[] = [\n  {\n    key: 'user_id',\n    allowsSorting: true,\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Customer\" />,\n    body: subscription =>\n      subscription.user && (\n        <NameWithAvatar\n          image={subscription.user.image}\n          label={subscription.user.name}\n          description={subscription.user.email}\n        />\n      ),\n  },\n  {\n    key: 'status',\n    width: 'w-100 flex-shrink-0',\n    header: () => <Trans message=\"Status\" />,\n    body: subscription => (\n      <Chip\n        size=\"xs\"\n        color={subscription.valid ? 'positive' : undefined}\n        radius=\"rounded\"\n        className=\"w-max\"\n      >\n        {subscription.gateway_status}\n      </Chip>\n    ),\n  },\n  {\n    key: 'product_id',\n    allowsSorting: true,\n    header: () => <Trans message=\"Plan\" />,\n    body: subscription => subscription.product?.name,\n  },\n  {\n    key: 'gateway_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Gateway\" />,\n    body: subscription => (\n      <span className=\"capitalize\">{subscription.gateway_name}</span>\n    ),\n  },\n  {\n    key: 'renews_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Renews at\" />,\n    body: subscription => <FormattedDate date={subscription.renews_at} />,\n  },\n  {\n    key: 'ends_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Ends at\" />,\n    body: subscription => <FormattedDate date={subscription.ends_at} />,\n  },\n  {\n    key: 'created_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Created at\" />,\n    body: subscription => <FormattedDate date={subscription.created_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    visibleInMode: 'all',\n    width: 'w-[168px] flex-shrink-0',\n    body: subscription => {\n      return <SubscriptionActions subscription={subscription} />;\n    },\n  },\n];\n\nexport function SubscriptionsIndexPage() {\n  return (\n    <DataTablePage\n      endpoint={endpoint}\n      title={<Trans message=\"Subscriptions\" />}\n      columns={columnConfig}\n      filters={SubscriptionIndexPageFilters}\n      actions={<PageActions />}\n      enableSelection={false}\n      selectedActions={<DeleteSelectedItemsAction />}\n      queryParams={{with: 'product'}}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={subscriptionsSvg}\n          title={<Trans message=\"No subscriptions have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching subscriptions\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction PageActions() {\n  return (\n    <>\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new subscription\" />\n        </DataTableAddItemButton>\n        <CreateSubscriptionDialog />\n      </DialogTrigger>\n    </>\n  );\n}\n\ninterface SubscriptionActionsProps {\n  subscription: Subscription;\n}\nfunction SubscriptionActions({subscription}: SubscriptionActionsProps) {\n  return (\n    <Fragment>\n      <DialogTrigger type=\"modal\">\n        <IconButton size=\"md\" className=\"text-muted\">\n          <EditIcon />\n        </IconButton>\n        <UpdateSubscriptionDialog subscription={subscription} />\n      </DialogTrigger>\n      {subscription.cancelled && subscription.on_grace_period ? (\n        <ResumeSubscriptionButton subscription={subscription} />\n      ) : null}\n      {subscription.active ? (\n        <SuspendSubscriptionButton subscription={subscription} />\n      ) : null}\n      <CancelSubscriptionButton subscription={subscription} />\n    </Fragment>\n  );\n}\n\nfunction SuspendSubscriptionButton({subscription}: SubscriptionActionsProps) {\n  const cancelSubscription = useCancelSubscription();\n\n  const handleSuspendSubscription = () => {\n    cancelSubscription.mutate(\n      {subscriptionId: subscription.id},\n      {\n        onSuccess: () => {\n          queryClient.invalidateQueries({\n            queryKey: DatatableDataQueryKey(endpoint),\n          });\n        },\n      },\n    );\n  };\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          handleSuspendSubscription();\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Cancel subscription\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          disabled={cancelSubscription.isPending}\n        >\n          <PauseIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        title={<Trans message=\"Cancel subscription\" />}\n        body={\n          <div>\n            <Trans message=\"Are you sure you want to cancel this subscription?\" />\n            <div className=\"mt-10 text-sm font-semibold\">\n              <Trans message=\"This will put user on grace period until their next scheduled renewal date. Subscription can be renewed until that date by user or from admin area.\" />\n            </div>\n          </div>\n        }\n        confirm={<Trans message=\"Confirm\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\nfunction ResumeSubscriptionButton({subscription}: SubscriptionActionsProps) {\n  const resumeSubscription = useResumeSubscription();\n  const handleResumeSubscription = () => {\n    resumeSubscription.mutate(\n      {subscriptionId: subscription.id},\n      {\n        onSuccess: () => {\n          queryClient.invalidateQueries({\n            queryKey: DatatableDataQueryKey(endpoint),\n          });\n        },\n      },\n    );\n  };\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          handleResumeSubscription();\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Renew subscription\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          onClick={handleResumeSubscription}\n          disabled={resumeSubscription.isPending}\n        >\n          <PlayArrowIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        title={<Trans message=\"Resume subscription\" />}\n        body={\n          <div>\n            <Trans message=\"Are you sure you want to resume this subscription?\" />\n            <div className=\"mt-10 text-sm font-semibold\">\n              <Trans message=\"This will put user on their original plan and billing cycle.\" />\n            </div>\n          </div>\n        }\n        confirm={<Trans message=\"Confirm\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\nfunction CancelSubscriptionButton({subscription}: SubscriptionActionsProps) {\n  const cancelSubscription = useCancelSubscription();\n\n  const handleDeleteSubscription = () => {\n    cancelSubscription.mutate(\n      {subscriptionId: subscription.id, delete: true},\n      {\n        onSuccess: () => {\n          queryClient.invalidateQueries({\n            queryKey: DatatableDataQueryKey(endpoint),\n          });\n        },\n      },\n    );\n  };\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          handleDeleteSubscription();\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Delete subscription\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          disabled={cancelSubscription.isPending}\n        >\n          <CloseIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Delete subscription\" />}\n        body={\n          <div>\n            <Trans message=\"Are you sure you want to delete this subscription?\" />\n            <div className=\"mt-10 text-sm font-semibold\">\n              <Trans message=\"This will permanently delete the subscription and immediately cancel it on billing gateway. Subscription will not be renewable anymore.\" />\n            </div>\n          </div>\n        }\n        confirm={<Trans message=\"Confirm\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const SyncIcon = createSvgIcon(\n  <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" />\n, 'SyncOutlined');\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport function useSyncProducts() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: () => syncPlans(),\n    onSuccess: () => {\n      toast(trans(message('Plans synced')));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not sync plans')),\n  });\n}\n\nfunction syncPlans(): Promise<Response> {\n  return apiClient.post('billing/products/sync').then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\nconst endpoint = (id: number) => `billing/products/${id}`;\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  productId: number;\n}\n\nexport function useDeleteProduct() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: Payload) => updateProduct(payload),\n    onSuccess: () => {\n      toast(trans(message('Plan deleted')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('billing/products'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateProduct({productId}: Payload): Promise<Response> {\n  return apiClient.delete(endpoint(productId)).then(r => r.data);\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const PlansIndexPageFilters: BackendFilter[] = [\n  {\n    key: 'subscriptions',\n    label: message('Subscriptions'),\n    description: message('Whether plan has any active subscriptions'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('Has active subscriptions'),\n          value: {value: '*', operator: FilterOperator.has},\n        },\n        {\n          key: '02',\n          label: message('Does not have active subscriptions'),\n          value: {value: '*', operator: FilterOperator.doesntHave},\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date plan was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date plan was last updated'),\n  }),\n];\n","import React, {Fragment} from 'react';\nimport {DataTablePage} from '../../datatable/page/data-table-page';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {ColumnConfig} from '../../datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\nimport softwareEngineerSvg from './../tags/software-engineer.svg';\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\nimport {Product} from '../../billing/product';\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\nimport {Link} from 'react-router-dom';\nimport {FormattedPrice} from '../../billing/formatted-price';\nimport {SyncIcon} from '@ui/icons/material/Sync';\nimport {useSyncProducts} from './requests/use-sync-products';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {useDeleteProduct} from './requests/use-delete-product';\nimport {DeleteIcon} from '@ui/icons/material/Delete';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useNavigate} from '../../ui/navigation/use-navigate';\nimport {PlansIndexPageFilters} from './plans-index-page-filters';\n\nconst columnConfig: ColumnConfig<Product>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Name\" />,\n    body: product => {\n      const price = product.prices[0];\n      return (\n        <NameWithAvatar\n          label={product.name}\n          description={\n            product.free ? (\n              <Trans message=\"Free\" />\n            ) : (\n              <FormattedPrice price={price} />\n            )\n          }\n        />\n      );\n    },\n  },\n  {\n    key: 'created_at',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Created\" />,\n    body: product => <FormattedDate date={product.created_at} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: product => <FormattedDate date={product.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    visibleInMode: 'all',\n    hideHeader: true,\n    align: 'end',\n    maxWidth: 'max-w-84',\n    body: product => {\n      return (\n        <Fragment>\n          <IconButton\n            size=\"md\"\n            className=\"text-muted\"\n            elementType={Link}\n            to={`/admin/plans/${product.id}/edit`}\n          >\n            <EditIcon />\n          </IconButton>\n          <DeleteProductButton product={product} />\n        </Fragment>\n      );\n    },\n  },\n];\n\nexport function PlansIndexPage() {\n  const navigate = useNavigate();\n  return (\n    <DataTablePage\n      endpoint=\"billing/products\"\n      title={<Trans message=\"Subscription plans\" />}\n      columns={columnConfig}\n      actions={<Actions />}\n      enableSelection={false}\n      filters={PlansIndexPageFilters}\n      onRowAction={item => {\n        navigate(`/admin/plans/${item.id}/edit`);\n      }}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={softwareEngineerSvg}\n          title={<Trans message=\"No plans have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching plans\" />}\n        />\n      }\n    />\n  );\n}\n\ninterface DeleteProductButtonProps {\n  product: Product;\n}\nfunction DeleteProductButton({product}: DeleteProductButtonProps) {\n  const deleteProduct = useDeleteProduct();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={confirmed => {\n        if (confirmed) {\n          deleteProduct.mutate({productId: product.id});\n        }\n      }}\n    >\n      <Tooltip label={<Trans message=\"Delete plan\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          disabled={deleteProduct.isPending}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      <ConfirmationDialog\n        title={<Trans message=\"Delete plan\" />}\n        body={<Trans message=\"Are you sure you want to delete this plan?\" />}\n        confirm={<Trans message=\"Delete\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\nfunction Actions() {\n  const syncPlans = useSyncProducts();\n  return (\n    <Fragment>\n      <Tooltip label={<Trans message=\"Sync plans with Stripe & PayPal\" />}>\n        <IconButton\n          color=\"primary\"\n          variant=\"outline\"\n          size=\"sm\"\n          disabled={syncPlans.isPending}\n          onClick={() => {\n            syncPlans.mutate();\n          }}\n        >\n          <SyncIcon />\n        </IconButton>\n      </Tooltip>\n      <DataTableAddItemButton elementType={Link} to=\"/admin/plans/new\">\n        <Trans message=\"Add new plan\" />\n      </DataTableAddItemButton>\n    </Fragment>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {useParams} from 'react-router-dom';\nimport {Product} from '@common/billing/product';\n\nconst Endpoint = (id: number | string) => `billing/products/${id}`;\n\nexport interface FetchRoleResponse extends BackendResponse {\n  product: Product;\n}\n\nexport function useProduct() {\n  const {productId} = useParams();\n  return useQuery({\n    queryKey: [Endpoint(productId!)],\n    queryFn: () => fetchProduct(productId!),\n  });\n}\n\nfunction fetchProduct(productId: number | string): Promise<FetchRoleResponse> {\n  return apiClient.get(Endpoint(productId)).then(response => response.data);\n}\n","import {message} from '@ui/i18n/message';\n\nexport const BillingPeriodPresets = [\n  {\n    key: 'day1',\n    label: message('Daily'),\n    interval: 'day',\n    interval_count: 1,\n  },\n  {\n    key: 'week1',\n    label: message('Weekly'),\n    interval: 'week',\n    interval_count: 1,\n  },\n  {\n    key: 'month1',\n    label: message('Monthly'),\n    interval: 'month',\n    interval_count: 1,\n  },\n  {\n    key: 'month3',\n    label: message('Every 3 months'),\n    interval: 'month',\n    interval_count: 3,\n  },\n  {\n    key: 'month6',\n    label: message('Every 6 months'),\n    interval: 'month',\n    interval_count: 6,\n  },\n  {\n    key: 'year1',\n    label: message('Yearly'),\n    interval: 'year',\n    interval_count: 1,\n  },\n  {\n    key: 'custom',\n    label: message('Custom'),\n    interval: null,\n    interval_count: null,\n  },\n];\n","import {useFormContext} from 'react-hook-form';\nimport {Product} from '@common/billing/product';\nimport React, {Fragment, useMemo, useState} from 'react';\nimport {useValueLists} from '@common/http/value-lists';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\nimport {FormSelect, Select} from '@ui/forms/select/select';\nimport {Price} from '@common/billing/price';\nimport {BillingPeriodPresets} from '@common/admin/plans/crupdate-plan-page/billing-period-presets';\nimport {Button} from '@ui/buttons/button';\nimport {message} from '@ui/i18n/message';\nimport {useTrans} from '@ui/i18n/use-trans';\n\ninterface PriceFormProps {\n  index: number;\n  onRemovePrice: () => void;\n}\nexport function PriceForm({index, onRemovePrice}: PriceFormProps) {\n  const {trans} = useTrans();\n  const query = useValueLists(['currencies']);\n  const currencies = useMemo(() => {\n    return query.data?.currencies ? Object.values(query.data.currencies) : [];\n  }, [query.data]);\n  const {watch, getValues} = useFormContext<Product>();\n  const isNewProduct = !watch('id');\n  const isNewPrice = watch(`prices.${index}.id`) == null;\n  const subscriberCount = watch(`prices.${index}.subscriptions_count`) || 0;\n\n  // select billing period preset based on price \"interval\" and \"interval_count\"\n  const [billingPeriodPreset, setBillingPeriodPreset] = useState(() => {\n    const interval = getValues(`prices.${index}.interval`);\n    const intervalCount = getValues(`prices.${index}.interval_count`);\n    const preset = BillingPeriodPresets.find(\n      p => p.key === `${interval}${intervalCount}`,\n    );\n    return preset ? preset.key : 'custom';\n  });\n\n  const allowPriceChanges = isNewProduct || isNewPrice || !subscriberCount;\n\n  return (\n    <Fragment>\n      {!allowPriceChanges && (\n        <p className=\"mb-20 max-w-500 text-sm text-muted\">\n          <Trans\n            message=\"This price can't modified or deleted, because it has [one 1 subscriber|other :count subscribers]. You can instead add a new price.\"\n            values={{count: subscriberCount}}\n          />\n        </p>\n      )}\n\n      <FormTextField\n        required\n        disabled={!allowPriceChanges}\n        label={<Trans message=\"Amount\" />}\n        type=\"number\"\n        min={0.1}\n        step={0.01}\n        name={`prices.${index}.amount`}\n        className=\"mb-20\"\n      />\n      <FormSelect\n        required\n        disabled={!allowPriceChanges}\n        label={<Trans message=\"Currency\" />}\n        name={`prices.${index}.currency`}\n        items={currencies}\n        showSearchField\n        searchPlaceholder={trans(message('Search currencies'))}\n        selectionMode=\"single\"\n        className=\"mb-20\"\n      >\n        {item => (\n          <Item\n            value={item.code}\n            key={item.code}\n          >{`${item.code}: ${item.name}`}</Item>\n        )}\n      </FormSelect>\n      <BillingPeriodSelect\n        disabled={!allowPriceChanges}\n        index={index}\n        value={billingPeriodPreset}\n        onValueChange={setBillingPeriodPreset}\n      />\n      {billingPeriodPreset === 'custom' && (\n        <CustomBillingPeriodField disabled={!allowPriceChanges} index={index} />\n      )}\n      <div className=\"text-right\">\n        <Button\n          size=\"xs\"\n          variant=\"outline\"\n          color=\"danger\"\n          disabled={!allowPriceChanges}\n          onClick={() => {\n            onRemovePrice();\n          }}\n        >\n          <Trans message=\"Delete price\" />\n        </Button>\n      </div>\n    </Fragment>\n  );\n}\n\ninterface BillingPeriodSelectProps {\n  index: number;\n  value: string;\n  onValueChange: (value: string) => void;\n  disabled: boolean;\n}\nfunction BillingPeriodSelect({\n  index,\n  value,\n  onValueChange,\n  disabled,\n}: BillingPeriodSelectProps) {\n  const {setValue: setFormValue} = useFormContext<Product>();\n\n  return (\n    <Select\n      label={<Trans message=\"Billing period\" />}\n      disabled={disabled}\n      className=\"mb-20\"\n      selectionMode=\"single\"\n      selectedValue={value}\n      onSelectionChange={value => {\n        onValueChange(value as string);\n        if (value === 'custom') {\n        } else {\n          const preset = BillingPeriodPresets.find(p => p.key === value);\n          if (preset) {\n            setFormValue(\n              `prices.${index}.interval`,\n              preset.interval as Price['interval'],\n            );\n            setFormValue(\n              `prices.${index}.interval_count`,\n              preset.interval_count as number,\n            );\n          }\n        }\n      }}\n    >\n      {BillingPeriodPresets.map(preset => (\n        <Item key={preset.key} value={preset.key}>\n          <Trans {...preset.label} />\n        </Item>\n      ))}\n    </Select>\n  );\n}\n\ninterface CustomBillingPeriodFieldProps {\n  index: number;\n  disabled: boolean;\n}\nfunction CustomBillingPeriodField({\n  index,\n  disabled,\n}: CustomBillingPeriodFieldProps) {\n  const {watch} = useFormContext<Product>();\n  const interval = watch(`prices.${index}.interval`);\n  let maxIntervalCount: number;\n\n  if (interval === 'day') {\n    maxIntervalCount = 365;\n  } else if (interval === 'week') {\n    maxIntervalCount = 52;\n  } else {\n    maxIntervalCount = 12;\n  }\n\n  return (\n    <div className=\"flex w-min rounded border\">\n      <div className=\"flex items-center px-18 text-sm\">\n        <Trans message=\"Every\" />\n      </div>\n      <FormTextField\n        inputShadow=\"shadow-none\"\n        inputBorder=\"border-none\"\n        className=\"w-80 border-l border-r\"\n        name={`prices.${index}.interval_count`}\n        type=\"number\"\n        min={1}\n        max={maxIntervalCount}\n        disabled={disabled}\n        required\n      />\n      <FormSelect\n        inputShadow=\"shadow-none\"\n        inputBorder=\"border-none\"\n        name={`prices.${index}.interval`}\n        selectionMode=\"single\"\n        disabled={disabled}\n      >\n        <Item value=\"day\">\n          <Trans message=\"Days\" />\n        </Item>\n        <Item value=\"week\">\n          <Trans message=\"Weeks\" />\n        </Item>\n        <Item value=\"month\">\n          <Trans message=\"Months\" />\n        </Item>\n      </FormSelect>\n    </div>\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {Fragment, ReactNode} from 'react';\nimport {useFieldArray, useFormContext} from 'react-hook-form';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {FormattedPrice} from '@common/billing/formatted-price';\nimport {FormPermissionSelector} from '@common/auth/ui/permission-selector';\nimport {PriceForm} from './price-form';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {CreateProductPayload} from '../requests/use-create-product';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {FormFileSizeField} from '@common/uploads/components/file-size-field';\nimport {Link} from 'react-router-dom';\nimport {LinkStyle} from '@ui/buttons/external-link';\n\nexport function CrupdatePlanForm() {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"name\"\n        label={<Trans message=\"Name\" />}\n        className=\"mb-20\"\n        required\n        autoFocus\n      />\n      <FormTextField\n        name=\"description\"\n        label={<Trans message=\"Description\" />}\n        className=\"mb-20\"\n        inputElementType=\"textarea\"\n        rows={4}\n      />\n      <FormSelect\n        name=\"position\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Position in pricing table\" />}\n        className=\"mb-20\"\n      >\n        <Item value={0}>\n          <Trans message=\"First\" />\n        </Item>\n        <Item value={1}>\n          <Trans message=\"Second\" />\n        </Item>\n        <Item value={2}>\n          <Trans message=\"Third\" />\n        </Item>\n        <Item value={3}>\n          <Trans message=\"Fourth\" />\n        </Item>\n        <Item value={4}>\n          <Trans message=\"Fifth\" />\n        </Item>\n      </FormSelect>\n      <FormFileSizeField\n        className=\"mb-30\"\n        name=\"available_space\"\n        label={<Trans message=\"Allowed storage space\" />}\n        description={\n          <Trans\n            values={{\n              a: parts => (\n                <Link\n                  className={LinkStyle}\n                  target=\"_blank\"\n                  to=\"/admin/settings/uploading\"\n                >\n                  {parts}\n                </Link>\n              ),\n            }}\n            message=\"Total storage space all user uploads are allowed to take up.\"\n          />\n        }\n      />\n      <FormSwitch\n        name=\"recommended\"\n        className=\"mb-20\"\n        description={\n          <Trans message=\"Plan will be displayed more prominently on pricing page.\" />\n        }\n      >\n        <Trans message=\"Recommend\" />\n      </FormSwitch>\n      <FormSwitch\n        name=\"hidden\"\n        className=\"mb-20\"\n        description={\n          <Trans message=\"Plan will not be shown on pricing or upgrade pages.\" />\n        }\n      >\n        <Trans message=\"Hidden\" />\n      </FormSwitch>\n      <FormSwitch\n        name=\"free\"\n        className=\"mb-20\"\n        description={\n          <Trans message=\"Will be assigned to all users, if they are not subscribed already.\" />\n        }\n      >\n        <Trans message=\"Free\" />\n      </FormSwitch>\n      <Header>\n        <Trans message=\"Feature list\" />\n      </Header>\n      <FeatureListForm />\n      <PricingListForm />\n      <Header>\n        <Trans message=\"Permissions\" />\n      </Header>\n      <FormPermissionSelector name=\"permissions\" />\n    </Fragment>\n  );\n}\n\ninterface HeaderProps {\n  children: ReactNode;\n}\nfunction Header({children}: HeaderProps) {\n  return <h2 className=\"mb-20 mt-40 text-base font-semibold\">{children}</h2>;\n}\n\nfunction FeatureListForm() {\n  const {fields, append, remove} = useFieldArray<CreateProductPayload>({\n    name: 'feature_list',\n  });\n  return (\n    <div>\n      {fields.map((field, index) => {\n        return (\n          <div key={field.id} className=\"mb-10 flex gap-10\">\n            <FormTextField\n              name={`feature_list.${index}.value`}\n              size=\"sm\"\n              className=\"flex-auto\"\n            />\n            <IconButton\n              size=\"sm\"\n              color=\"primary\"\n              className=\"flex-shrink-0\"\n              onClick={() => {\n                remove(index);\n              }}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        );\n      })}\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        size=\"xs\"\n        onClick={() => {\n          append({value: ''});\n        }}\n      >\n        <Trans message=\"Add another line\" />\n      </Button>\n    </div>\n  );\n}\n\nfunction PricingListForm() {\n  const {\n    watch,\n    formState: {errors},\n  } = useFormContext<CreateProductPayload>();\n  const {fields, append, remove} = useFieldArray<\n    CreateProductPayload,\n    'prices',\n    'key'\n  >({\n    name: 'prices',\n    keyName: 'key',\n  });\n\n  // if plan is marked as free, hide pricing form\n  if (watch('free')) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <Header>\n        <Trans message=\"Pricing\" />\n      </Header>\n      {errors.prices?.message && (\n        <div className=\"mb-20 text-sm text-danger\">{errors.prices.message}</div>\n      )}\n      <Accordion variant=\"outline\" className=\"mb-10\">\n        {fields.map((field, index) => (\n          <AccordionItem\n            label={<FormattedPrice price={field} />}\n            key={field.key}\n          >\n            <PriceForm\n              index={index}\n              onRemovePrice={() => {\n                remove(index);\n              }}\n            />\n          </AccordionItem>\n        ))}\n      </Accordion>\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        size=\"xs\"\n        onClick={() => {\n          append({\n            currency: 'USD',\n            amount: 1,\n            interval_count: 1,\n            interval: 'month',\n          });\n        }}\n      >\n        <Trans message=\"Add another price\" />\n      </Button>\n    </Fragment>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {Product} from '@common/billing/product';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {CreateProductPayload} from './use-create-product';\nimport {UseFormReturn} from 'react-hook-form';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\n\ninterface Response extends BackendResponse {\n  product: Product;\n}\n\nexport interface UpdateProductPayload extends CreateProductPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `billing/products/${id}`;\n\nexport function useUpdateProduct(form: UseFormReturn<UpdateProductPayload>) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: UpdateProductPayload) => updateProduct(payload),\n    onSuccess: response => {\n      toast(trans(message('Plan updated')));\n      queryClient.invalidateQueries({\n        queryKey: [Endpoint(response.product.id)],\n      });\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('billing/products'),\n      });\n      navigate('/admin/plans');\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateProduct({\n  id,\n  ...payload\n}: UpdateProductPayload): Promise<Response> {\n  const backendPayload = {\n    ...payload,\n    feature_list: payload.feature_list.map(feature => feature.value),\n  };\n  return apiClient.put(Endpoint(id), backendPayload).then(r => r.data);\n}\n","import {FullPageLoader} from '@ui/progress/full-page-loader';\nimport {Trans} from '@ui/i18n/trans';\nimport {useForm} from 'react-hook-form';\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\nimport {useProduct} from '../requests/use-product';\nimport {Product} from '@common/billing/product';\nimport {CrupdatePlanForm} from './crupdate-plan-form';\nimport {\n  UpdateProductPayload,\n  useUpdateProduct,\n} from '../requests/use-update-product';\n\nexport function EditPlanPage() {\n  const query = useProduct();\n\n  if (query.status !== 'success') {\n    return <FullPageLoader />;\n  }\n\n  return <PageContent product={query.data.product} />;\n}\n\ninterface PageContentProps {\n  product: Product;\n}\nfunction PageContent({product}: PageContentProps) {\n  const form = useForm<UpdateProductPayload>({\n    defaultValues: {\n      ...product,\n      feature_list: product.feature_list.map(f => ({value: f})),\n    },\n  });\n  const updateProduct = useUpdateProduct(form);\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateProduct.mutate(values);\n      }}\n      title={\n        <Trans message=\"Edit “:name“ plan\" values={{name: product.name}} />\n      }\n      isLoading={updateProduct.isPending}\n    >\n      <CrupdatePlanForm />\n    </CrupdateResourceLayout>\n  );\n}\n","import {Product} from '@common/billing/product';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {Price} from '@common/billing/price';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\n\nconst endpoint = 'billing/products';\n\nexport interface CreateProductPayload\n  extends Omit<Partial<Product>, 'feature_list' | 'prices'> {\n  feature_list: {value: string}[];\n  prices: Omit<Price, 'id'>[];\n}\n\nexport function useCreateProduct(form: UseFormReturn<CreateProductPayload>) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: CreateProductPayload) => createProduct(payload),\n    onSuccess: () => {\n      toast(trans(message('Plan created')));\n      queryClient.invalidateQueries({queryKey: [endpoint]});\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('billing/products'),\n      });\n      navigate('/admin/plans');\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createProduct(payload: CreateProductPayload): Promise<Response> {\n  const backendPayload = {\n    ...payload,\n    feature_list: payload.feature_list.map(feature => feature.value),\n  };\n  return apiClient.post(endpoint, backendPayload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {CrupdatePlanForm} from './crupdate-plan-form';\nimport {\n  CreateProductPayload,\n  useCreateProduct,\n} from '../requests/use-create-product';\n\nexport function CreatePlanPage() {\n  const form = useForm<CreateProductPayload>({\n    defaultValues: {\n      free: false,\n      recommended: false,\n    },\n  });\n  const createProduct = useCreateProduct(form);\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createProduct.mutate(values);\n      }}\n      title={<Trans message=\"Create new plan\" />}\n      isLoading={createProduct.isPending}\n    >\n      <CrupdatePlanForm />\n    </CrupdateResourceLayout>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {useFieldArray, useForm, useFormContext} from 'react-hook-form';\nimport {AdminSettings} from '../admin-settings';\nimport React, {Fragment} from 'react';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {MenuItemForm} from '../../menus/menu-item-form';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {AddMenuItemDialog} from '../../appearance/sections/menus/add-menu-item-dialog';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {SettingsSeparator} from '@common/admin/settings/form/settings-separator';\nimport {useValueLists} from '@common/http/value-lists';\n\nexport function GdprSettings() {\n  const optionQuery = useValueLists(['menuItemCategories']);\n\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"GDPR\" />}\n      description={\n        <Trans message=\"Configure settings related to EU General Data Protection Regulation.\" />\n      }\n      isLoading={optionQuery.isLoading}\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        cookie_notice: {\n          enable: data.client.cookie_notice?.enable ?? false,\n          button: data.client.cookie_notice?.button ?? {},\n          position: data.client.cookie_notice?.position ?? 'bottom',\n        },\n        registration: {\n          policies: data.client.registration?.policies ?? [],\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <CookieNoticeSection />\n      <SettingsSeparator />\n      <RegistrationPoliciesSection />\n    </AdminSettingsForm>\n  );\n}\n\nfunction CookieNoticeSection() {\n  const {watch} = useFormContext<AdminSettings>();\n  const noticeEnabled = watch('client.cookie_notice.enable');\n\n  return (\n    <div>\n      <FormSwitch\n        name=\"client.cookie_notice.enable\"\n        className=\"mb-20\"\n        description={\n          <Trans message=\"Whether cookie notice should be shown automatically to users from EU until it is accepted.\" />\n        }\n      >\n        <Trans message=\"Enable cookie notice\" />\n      </FormSwitch>\n      {noticeEnabled && (\n        <Fragment>\n          <div className=\"mb-20 border-b pb-6\">\n            <div className=\"mb-20 border-b pb-10 text-sm font-medium\">\n              <Trans message=\"Information button\" />\n            </div>\n            <div className=\"mb-20\">\n              <MenuItemForm\n                hideRoleAndPermissionFields\n                formPathPrefix=\"client.cookie_notice.button\"\n              />\n            </div>\n          </div>\n          <FormSelect\n            name=\"client.cookie_notice.position\"\n            selectionMode=\"single\"\n            label={<Trans message=\"Cookie notice position\" />}\n            className=\"mb-20\"\n          >\n            <Item value=\"top\">\n              <Trans message=\"Top\" />\n            </Item>\n            <Item value=\"bottom\">\n              <Trans message=\"Bottom\" />\n            </Item>\n          </FormSelect>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nfunction RegistrationPoliciesSection() {\n  const {fields, append, remove} = useFieldArray<\n    AdminSettings,\n    'client.registration.policies'\n  >({\n    name: 'client.registration.policies',\n  });\n  const {watch} = useFormContext();\n\n  return (\n    <Fragment>\n      <div className=\"mb-6 text-sm\">\n        <Trans message=\"Registration policies\" />\n      </div>\n      <div className=\"text-xs text-muted\">\n        <Trans message=\"Create policies that will be shown on registration page. User will be required to accept them by toggling a checkbox.\" />\n      </div>\n      <Accordion className=\"mt-16\" variant=\"outline\">\n        {fields.map((field, index) => (\n          <AccordionItem\n            key={field.id}\n            label={field.label}\n            chevronPosition=\"left\"\n            endAppend={\n              <IconButton\n                variant=\"text\"\n                color=\"danger\"\n                size=\"sm\"\n                onClick={() => remove(index)}\n              >\n                <CloseIcon />\n              </IconButton>\n            }\n          >\n            <MenuItemForm\n              hideRoleAndPermissionFields\n              formPathPrefix={`client.registration.policies.${index}`}\n            />\n          </AccordionItem>\n        ))}\n      </Accordion>\n      <DialogTrigger\n        type=\"modal\"\n        onClose={value => {\n          if (value) {\n            append(value);\n          }\n        }}\n      >\n        <Button\n          className=\"mt-12\"\n          variant=\"link\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          size=\"xs\"\n        >\n          <Trans message=\"Add another policy\" />\n        </Button>\n        <AddMenuItemDialog title={<Trans message=\"Add policy\" />} />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {CustomPage} from '../custom-page';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {useParams} from 'react-router-dom';\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\n\ninterface Response extends BackendResponse {\n  page: CustomPage;\n}\n\nexport function useUpdateCustomPage(endpoint?: string) {\n  const {pageId} = useParams();\n  const finalEndpoint = `${endpoint || 'custom-pages'}/${pageId}`;\n  return useMutation({\n    mutationFn: (payload: CreateCustomPagePayload) =>\n      updatePage(payload, finalEndpoint),\n    onError: err => showHttpErrorToast(err),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['custom-pages']});\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(finalEndpoint),\n      });\n      toast(message('Page updated'));\n    },\n  });\n}\n\nfunction updatePage(\n  payload: CreateCustomPagePayload,\n  endpoint: string,\n): Promise<Response> {\n  return apiClient.put(`${endpoint}`, payload).then(r => r.data);\n}\n","import React, {useState} from 'react';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useFormContext} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport clsx from 'clsx';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\n\nexport function ArticleEditorTitle() {\n  const [editingTitle, setEditingTitle] = useState(false);\n  const {trans} = useTrans();\n  const form = useFormContext<CreateCustomPagePayload>();\n  const watchedTitle = form.watch('title');\n\n  const titlePlaceholder = trans({message: 'Title'});\n\n  if (editingTitle) {\n    return (\n      <FormTextField\n        placeholder={titlePlaceholder}\n        autoFocus\n        className=\"mb-30\"\n        onBlur={() => {\n          setEditingTitle(false);\n        }}\n        name=\"title\"\n        required\n      />\n    );\n  }\n  return (\n    <h1\n      tabIndex={0}\n      onClick={() => {\n        setEditingTitle(true);\n      }}\n      onFocus={() => {\n        setEditingTitle(true);\n      }}\n      className={clsx(\n        'cursor-pointer rounded hover:bg-primary/focus',\n        !watchedTitle && 'text-muted',\n      )}\n    >\n      {watchedTitle || titlePlaceholder}\n      <EditIcon className=\"mx-8 mt-8 align-top text-muted icon-sm\" />\n    </h1>\n  );\n}\n","import React, {Fragment, useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport {RefCallBack} from 'react-hook-form';\nimport {Button} from '@ui/buttons/button';\nimport {LinkIcon} from '@ui/icons/material/Link';\nimport {Trans} from '@ui/i18n/trans';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {slugifyString} from '@ui/utils/string/slugify-string';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\n\nexport interface SlugEditorProps {\n  prefix?: string;\n  suffix?: string;\n  host?: string;\n  value?: string | null;\n  placeholder?: string;\n  onChange?: (value: string) => void;\n  className?: string;\n  inputRef?: RefCallBack;\n  onInputBlur?: () => void;\n  showLinkIcon?: boolean;\n  pattern?: string;\n  minLength?: number;\n  maxLength?: number;\n  hideButton?: boolean;\n}\nexport function SlugEditor({\n  host,\n  value: initialValue = '',\n  placeholder,\n  onChange,\n  className,\n  inputRef,\n  onInputBlur,\n  showLinkIcon = true,\n  pattern,\n  minLength,\n  maxLength,\n  hideButton,\n  ...props\n}: SlugEditorProps) {\n  const {base_url} = useSettings();\n  const prefix = props.prefix ? `/${props.prefix}` : '';\n  const suffix = props.suffix ? `/${props.suffix}` : '';\n  const [isEditing, setIsEditing] = useState(false);\n  const [value, setValue] = useState(initialValue);\n  host = host || base_url;\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const handleSubmit = () => {\n    if (!isEditing) {\n      setIsEditing(true);\n    } else {\n      setIsEditing(false);\n      if (value) {\n        onChange?.(value);\n      }\n    }\n  };\n\n  let preview: string = '';\n  if (value) {\n    preview = value;\n  } else if (placeholder) {\n    preview = slugifyString(placeholder);\n  }\n\n  return (\n    // can't use <form/> here as component might be used inside another form\n    <div className={clsx('flex items-center', className)}>\n      {showLinkIcon && <LinkIcon className=\"text-muted icon-md\" />}\n      <div className=\"ml-6 mr-14 text-primary\">\n        {host}\n        {prefix}\n        {!isEditing && preview && (\n          <Fragment>\n            <span>/</span>\n            <span className=\"font-medium\">{preview}</span>\n          </Fragment>\n        )}\n        {!isEditing ? suffix : null}\n      </div>\n      {isEditing && (\n        <TextField\n          pattern={pattern}\n          minLength={minLength}\n          maxLength={maxLength}\n          onKeyDown={e => {\n            if (e.key === 'Enter') {\n              handleSubmit();\n            }\n          }}\n          ref={inputRef}\n          aria-label=\"slug\"\n          autoFocus\n          className=\"mr-14\"\n          size=\"2xs\"\n          value={value as string}\n          onBlur={onInputBlur}\n          onChange={e => {\n            setValue(e.target.value);\n          }}\n        />\n      )}\n      {!hideButton && (\n        <Button\n          type=\"button\"\n          color=\"chip\"\n          variant=\"outline\"\n          size=\"2xs\"\n          onClick={() => {\n            handleSubmit();\n          }}\n        >\n          {isEditing ? <Trans message=\"Save\" /> : <Trans message=\"Edit\" />}\n        </Button>\n      )}\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const UndoIcon = createSvgIcon(\n  <path d=\"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\" />\n, 'UndoOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const RedoIcon = createSvgIcon(\n  <path d=\"M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z\" />\n, 'RedoOutlined');\n","import React from 'react';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {UndoIcon} from '@ui/icons/material/Undo';\nimport {RedoIcon} from '@ui/icons/material/Redo';\nimport {MenubarButtonProps} from './menubar-button-props';\n\nexport function HistoryButtons({editor}: MenubarButtonProps) {\n  return (\n    <span>\n      <IconButton\n        size=\"md\"\n        disabled={!editor.can().undo()}\n        onClick={() => {\n          editor.commands.focus();\n          editor.commands.undo();\n        }}\n      >\n        <UndoIcon />\n      </IconButton>\n      <IconButton\n        size=\"md\"\n        disabled={!editor.can().redo()}\n        onClick={() => {\n          editor.commands.focus();\n          editor.commands.redo();\n        }}\n      >\n        <RedoIcon />\n      </IconButton>\n    </span>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const CodeIcon = createSvgIcon(\n  <path d=\"M9.4 16.6 4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0 4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\" />\n, 'CodeOutlined');\n","import {Button} from '@ui/buttons/button';\nimport {CodeIcon} from '@ui/icons/material/Code';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {AceDialog} from '../../ace-editor/ace-dialog';\nimport {Editor} from '@tiptap/react';\nimport React from 'react';\n\ninterface ModeButtonProps {\n  editor: Editor;\n}\nexport function ModeButton({editor}: ModeButtonProps) {\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={newValue => {\n        if (newValue != null) {\n          editor?.commands.setContent(newValue);\n        }\n      }}\n    >\n      <Button variant=\"text\" startIcon={<CodeIcon />}>\n        <Trans message=\"Source\" />\n      </Button>\n      <AceDialog\n        title={<Trans message=\"Source code\" />}\n        defaultValue={editor.getHTML()}\n      />\n    </DialogTrigger>\n  );\n}\n","export function Divider() {\n  return <div className=\"self-stretch mx-4 w-1 bg-divider flex-shrink-0\" />;\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatBoldIcon = createSvgIcon(\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n, 'FormatBoldOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatItalicIcon = createSvgIcon(\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\" />\n, 'FormatItalicOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatUnderlinedIcon = createSvgIcon(\n  <path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\" />\n, 'FormatUnderlinedOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {FormatBoldIcon} from '@ui/icons/material/FormatBold';\nimport {FormatItalicIcon} from '@ui/icons/material/FormatItalic';\nimport {FormatUnderlinedIcon} from '@ui/icons/material/FormatUnderlined';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function FontStyleButtons({editor, size}: MenubarButtonProps) {\n  return (\n    <span className={clsx('flex-shrink-0 whitespace-nowrap')}>\n      <Tooltip label={<Trans message=\"Bold\" />}>\n        <IconButton\n          size={size}\n          color={editor.isActive('bold') ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleBold();\n          }}\n        >\n          <FormatBoldIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Italic\" />}>\n        <IconButton\n          size={size}\n          color={editor.isActive('italic') ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleItalic();\n          }}\n        >\n          <FormatItalicIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Underline\" />}>\n        <IconButton\n          size={size}\n          color={editor.isActive('underline') ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleUnderline();\n          }}\n        >\n          <FormatUnderlinedIcon />\n        </IconButton>\n      </Tooltip>\n    </span>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatListBulletedIcon = createSvgIcon(\n  <path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\" />\n, 'FormatListBulletedOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatListNumberedIcon = createSvgIcon(\n  <path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\" />\n, 'FormatListNumberedOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {FormatListBulletedIcon} from '@ui/icons/material/FormatListBulleted';\nimport {FormatListNumberedIcon} from '@ui/icons/material/FormatListNumbered';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function ListButtons({editor, size}: MenubarButtonProps) {\n  const bulletActive = editor.isActive('bulletList');\n  const orderedActive = editor.isActive('orderedList');\n  return (\n    <span className={clsx('flex-shrink-0', 'whitespace-nowrap')}>\n      <Tooltip label={<Trans message=\"Bulleted list\" />}>\n        <IconButton\n          size={size}\n          color={bulletActive ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleBulletList();\n          }}\n        >\n          <FormatListBulletedIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Numbered list\" />}>\n        <IconButton\n          size={size}\n          color={orderedActive ? 'primary' : null}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.toggleOrderedList();\n          }}\n        >\n          <FormatListNumberedIcon />\n        </IconButton>\n      </Tooltip>\n    </span>\n  );\n}\n","import {Editor} from '@tiptap/react';\n\ninterface Props {\n  href: string;\n  target?: string;\n  text?: string;\n}\n\nexport function insertLinkIntoTextEditor(\n  editor: Editor,\n  {text, target, href}: Props\n) {\n  // no selection, insert new link with specified text\n  if (editor.state.selection.empty && text) {\n    editor.commands.insertContent(\n      `<a href=\"${href}\" target=\"${target}\">${text}</a>`\n    );\n  } else if (!editor.state.selection.empty) {\n    // no href provided, remove link from selection\n    if (!href) {\n      editor.chain().focus().extendMarkRange('link').unsetLink().run();\n    } else {\n      // add link to selection\n      editor\n        .chain()\n        .focus()\n        .extendMarkRange('link')\n        .setLink({href: href, target})\n        .run();\n    }\n  }\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport clsx from 'clsx';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {LinkIcon} from '@ui/icons/material/Link';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {insertLinkIntoTextEditor} from '@common/text-editor/insert-link-into-text-editor';\n\ninterface FormValue {\n  href: string;\n  target?: string;\n  text?: string;\n}\n\nexport function LinkButton({editor, size}: MenubarButtonProps) {\n  return (\n    <DialogTrigger type=\"modal\">\n      <Tooltip label={<Trans message=\"Insert link\" />}>\n        <IconButton size={size} className={clsx('flex-shrink-0')}>\n          <LinkIcon />\n        </IconButton>\n      </Tooltip>\n      <LinkDialog editor={editor} />\n    </DialogTrigger>\n  );\n}\n\nfunction LinkDialog({editor}: MenubarButtonProps) {\n  const previousUrl = editor.getAttributes('link').href;\n  const previousText = editor.state.doc.textBetween(\n    editor.state.selection.from,\n    editor.state.selection.to,\n    '',\n  );\n\n  const form = useForm<FormValue>({\n    defaultValues: {href: previousUrl, text: previousText, target: '_blank'},\n  });\n  const {formId, close} = useDialogContext();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Insert link\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={value => {\n            insertLinkIntoTextEditor(editor, value);\n            close();\n          }}\n        >\n          <FormTextField\n            name=\"href\"\n            label={<Trans message=\"URL\" />}\n            autoFocus\n            type=\"url\"\n            className=\"mb-20\"\n          />\n          <FormTextField\n            name=\"text\"\n            label={<Trans message=\"Text to display\" />}\n            className=\"mb-20\"\n          />\n          <FormSelect\n            selectionMode=\"single\"\n            name=\"target\"\n            label={<Trans message=\"Open link in...\" />}\n          >\n            <Option value=\"_self\">\n              <Trans message=\"Current window\" />\n            </Option>\n            <Option value=\"_blank\">\n              <Trans message=\"New window\" />\n            </Option>\n          </FormSelect>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close} variant=\"text\">\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button type=\"submit\" form={formId} variant=\"flat\" color=\"primary\">\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {ImageIcon} from '@ui/icons/material/Image';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {useActiveUpload} from '../../uploads/uploader/use-active-upload';\nimport {Disk} from '../../uploads/uploader/backend-metadata';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\nimport {FileInputType} from '@ui/utils/files/file-input-config';\n\nconst TwoMB = 2097152;\n\ninterface Props extends MenubarButtonProps {\n  diskPrefix?: string;\n}\n\nexport function ImageButton({editor, size, diskPrefix = 'page_media'}: Props) {\n  const {selectAndUploadFile} = useActiveUpload();\n\n  const handleUpload = () => {\n    selectAndUploadFile({\n      showToastOnRestrictionFail: true,\n      restrictions: {\n        allowedFileTypes: [FileInputType.image],\n        maxFileSize: TwoMB,\n      },\n      metadata: {\n        diskPrefix: diskPrefix,\n        disk: Disk.public,\n      },\n      onSuccess: entry => {\n        editor.commands.focus();\n        editor.commands.setImage({\n          src: entry.url,\n        });\n      },\n    });\n  };\n\n  return (\n    <Tooltip label={<Trans message=\"Insert image\" />}>\n      <IconButton\n        size={size}\n        onClick={handleUpload}\n        className={clsx('flex-shrink-0')}\n      >\n        <ImageIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatClearIcon = createSvgIcon(\n  <path d=\"M20 8V5H6.39l3 3h1.83l-.55 1.28 2.09 2.1L14.21 8zM3.41 4.86 2 6.27l6.97 6.97L6.5 19h3l1.57-3.66L16.73 21l1.41-1.41z\" />\n, 'FormatClearOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {FormatClearIcon} from '@ui/icons/material/FormatClear';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function ClearFormatButton({editor, size}: MenubarButtonProps) {\n  return (\n    <Tooltip label={<Trans message=\"Clear formatting\" />}>\n      <IconButton\n        className={clsx('flex-shrink-0')}\n        size={size}\n        onClick={() => {\n          editor.chain().focus().clearNodes().unsetAllMarks().run();\n        }}\n      >\n        <FormatClearIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const HorizontalRuleIcon = createSvgIcon(\n  <path fillRule=\"evenodd\" d=\"M4 11h16v2H4z\" />\n, 'HorizontalRuleOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PriorityHighIcon = createSvgIcon(\n  [<circle cx=\"12\" cy=\"19\" r=\"2\" key=\"0\" />,<path d=\"M10 3h4v12h-4z\" key=\"1\" />,]\n, 'PriorityHighOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const NoteIcon = createSvgIcon(\n  <path d=\"M16 4H4c-1.1 0-2 .9-2 2v12.01c0 1.1.9 1.99 2 1.99h16c1.1 0 2-.9 2-2v-8l-6-6zM4 18.01V6h11v5h5v7.01H4z\" />\n, 'NoteOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const SmartDisplayIcon = createSvgIcon(\n  [<path d=\"M9.5 7.5v9l7-4.5z\" key=\"0\" />,<path d=\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14.01H4V5.99h16v12.02z\" key=\"1\" />,]\n, 'SmartDisplayOutlined');\n","import React, {useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport clsx from 'clsx';\nimport {HorizontalRuleIcon} from '@ui/icons/material/HorizontalRule';\nimport {PriorityHighIcon} from '@ui/icons/material/PriorityHigh';\nimport {WarningIcon} from '@ui/icons/material/Warning';\nimport {NoteIcon} from '@ui/icons/material/Note';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\nimport {SmartDisplayIcon} from '@ui/icons/material/SmartDisplay';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function InsertMenuTrigger({editor, size}: MenubarButtonProps) {\n  const [dialog, setDialog] = useState<'embed' | false>(false);\n  return (\n    <>\n      <MenuTrigger\n        onItemSelected={key => {\n          if (key === 'hr') {\n            editor.commands.focus();\n            editor.commands.setHorizontalRule();\n          } else if (key === 'embed') {\n            setDialog('embed');\n          } else {\n            editor.commands.focus();\n            editor.commands.addInfo({type: key as any});\n          }\n        }}\n      >\n        <IconButton\n          variant=\"text\"\n          size={size}\n          className={clsx('flex-shrink-0')}\n        >\n          <MoreVertIcon />\n        </IconButton>\n        <Menu>\n          <MenuItem value=\"hr\" startIcon={<HorizontalRuleIcon />}>\n            <Trans message=\"Horizontal rule\" />\n          </MenuItem>\n          <MenuItem value=\"embed\" startIcon={<SmartDisplayIcon />}>\n            <Trans message=\"Embed\" />\n          </MenuItem>\n          <MenuItem value=\"important\" startIcon={<PriorityHighIcon />}>\n            <Trans message=\"Important\" />\n          </MenuItem>\n          <MenuItem value=\"warning\" startIcon={<WarningIcon />}>\n            <Trans message=\"Warning\" />\n          </MenuItem>\n          <MenuItem value=\"success\" startIcon={<NoteIcon />}>\n            <Trans message=\"Note\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={!!dialog}\n        onClose={() => {\n          setDialog(false);\n        }}\n      >\n        <EmbedDialog editor={editor} />\n      </DialogTrigger>\n    </>\n  );\n}\n\nfunction EmbedDialog({editor}: MenubarButtonProps) {\n  const previousSrc = editor.getAttributes('embed').src;\n  const form = useForm<{src: string}>({\n    defaultValues: {src: previousSrc},\n  });\n  const {formId, close} = useDialogContext();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Insert link\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={value => {\n            editor.commands.setEmbed(value);\n            close();\n          }}\n        >\n          <FormTextField\n            name=\"src\"\n            label={<Trans message=\"Embed URL\" />}\n            autoFocus\n            type=\"url\"\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={close} variant=\"text\">\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          disabled={!form.formState.isValid}\n          variant=\"flat\"\n          color=\"primary\"\n        >\n          <Trans message=\"Add\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {ReactNode} from 'react';\nimport {isMac} from '@react-aria/utils';\n\ninterface Props {\n  children: ReactNode;\n  modifier?: boolean;\n  separator?: string;\n}\nexport function Keyboard({children, modifier, separator = '+'}: Props) {\n  const modKey = isMac() ? (\n    <span className=\"text-base align-middle\">⌘</span>\n  ) : (\n    'Ctrl'\n  );\n  return (\n    <kbd className=\"text-xs text-muted\">\n      {modifier && (\n        <>\n          {modKey}\n          {separator}\n        </>\n      )}\n      {children}\n    </kbd>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {Button} from '@ui/buttons/button';\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\nimport {Keyboard} from '@ui/keyboard/keyboard';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {Trans} from '@ui/i18n/trans';\n\ntype Level = 1 | 2 | 3 | 4;\n\nexport function FormatMenuTrigger({editor, size}: MenubarButtonProps) {\n  return (\n    <MenuTrigger\n      floatingMinWidth=\"w-256\"\n      onItemSelected={key => {\n        editor.commands.focus();\n        if (typeof key === 'string' && key.startsWith('h')) {\n          editor.commands.toggleHeading({\n            level: parseInt(key.replace('h', '')) as Level,\n          });\n        } else if (key === 'code') {\n          editor.commands.toggleCode();\n        } else if (key === 'strike') {\n          editor.commands.toggleStrike();\n        } else if (key === 'super') {\n          editor.commands.toggleSuperscript();\n        } else if (key === 'sub') {\n          editor.commands.toggleSubscript();\n        } else if (key === 'blockquote') {\n          editor.commands.toggleBlockquote();\n        } else if (key === 'paragraph') {\n          editor.commands.setParagraph();\n        }\n      }}\n    >\n      <Button\n        className={clsx('flex-shrink-0')}\n        variant=\"text\"\n        size={size}\n        endIcon={<KeyboardArrowDownIcon />}\n      >\n        <Trans message=\"Format\" />\n      </Button>\n      <Menu>\n        <MenuItem value=\"h1\" endSection={<Keyboard modifier>Alt+1</Keyboard>}>\n          <Trans message=\"Heading :number\" values={{number: 1}} />\n        </MenuItem>\n        <MenuItem value=\"h2\" endSection={<Keyboard modifier>Alt+2</Keyboard>}>\n          <Trans message=\"Heading :number\" values={{number: 2}} />\n        </MenuItem>\n        <MenuItem value=\"h3\" endSection={<Keyboard modifier>Alt+3</Keyboard>}>\n          <Trans message=\"Heading :number\" values={{number: 3}} />\n        </MenuItem>\n        <MenuItem value=\"h4\" endSection={<Keyboard modifier>Alt+4</Keyboard>}>\n          <Trans message=\"Heading :number\" values={{number: 4}} />\n        </MenuItem>\n        <MenuItem value=\"code\" endSection={<Keyboard modifier>E</Keyboard>}>\n          <Trans message=\"Code\" />\n        </MenuItem>\n        <MenuItem\n          value=\"strike\"\n          endSection={<Keyboard modifier>Shift+X</Keyboard>}\n        >\n          <Trans message=\"Strikethrough\" />\n        </MenuItem>\n        <MenuItem\n          value=\"super\"\n          endSection={\n            <Keyboard modifier separator=\" \">\n              .\n            </Keyboard>\n          }\n        >\n          <Trans message=\"Superscript\" />\n        </MenuItem>\n        <MenuItem\n          value=\"sub\"\n          endSection={\n            <Keyboard modifier separator=\" \">\n              ,\n            </Keyboard>\n          }\n        >\n          <Trans message=\"Subscript\" />\n        </MenuItem>\n        <MenuItem\n          value=\"blockquote\"\n          endSection={<Keyboard modifier>Shift+B</Keyboard>}\n        >\n          <Trans message=\"Blockquote\" />\n        </MenuItem>\n        <MenuItem\n          value=\"paragraph\"\n          endSection={<Keyboard modifier>Alt+0</Keyboard>}\n        >\n          <Trans message=\"Paragraph\" />\n        </MenuItem>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatColorTextIcon = createSvgIcon(\n  <path d=\"M2 20h20v4H2v-4zm3.49-3h2.42l1.27-3.58h5.65L16.09 17h2.42L13.25 3h-2.5L5.49 17zm4.42-5.61 2.03-5.79h.12l2.03 5.79H9.91z\" />\n, 'FormatColorTextOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatColorFillIcon = createSvgIcon(\n  <path d=\"M16.56 8.94 7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10 10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5zM2 20h20v4H2v-4z\" />\n, 'FormatColorFillOutlined');\n","import React, {Fragment, useState} from 'react';\nimport clsx from 'clsx';\nimport {FormatColorTextIcon} from '@ui/icons/material/FormatColorText';\nimport {ColorPickerDialog} from '@ui/color-picker/color-picker-dialog';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {FormatColorFillIcon} from '@ui/icons/material/FormatColorFill';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\n\nexport function ColorButtons({editor, size}: MenubarButtonProps) {\n  const [dialog, setDialog] = useState<'text' | 'bg' | false>(false);\n  const textActive = editor.getAttributes('textStyle').color;\n  const backgroundActive = editor.getAttributes('textStyle').backgroundColor;\n  return (\n    <Fragment>\n      <span className={clsx('flex-shrink-0 whitespace-nowrap')}>\n        <IconButton\n          size={size}\n          color={textActive ? 'primary' : null}\n          onClick={() => {\n            setDialog('text');\n          }}\n        >\n          <FormatColorTextIcon />\n        </IconButton>\n        <IconButton\n          size={size}\n          color={backgroundActive ? 'primary' : null}\n          onClick={() => {\n            setDialog('bg');\n          }}\n        >\n          <FormatColorFillIcon />\n        </IconButton>\n      </span>\n      <DialogTrigger\n        defaultValue={dialog === 'text' ? '#000000' : '#FFFFFF'}\n        type=\"modal\"\n        isOpen={!!dialog}\n        onClose={newValue => {\n          if (newValue) {\n            if (dialog === 'text') {\n              editor.commands.setColor(newValue);\n            } else {\n              editor.commands.setBackgroundColor(newValue);\n            }\n          }\n          setDialog(false);\n        }}\n      >\n        <ColorPickerDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatAlignLeftIcon = createSvgIcon(\n  <path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\" />\n, 'FormatAlignLeftOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatAlignCenterIcon = createSvgIcon(\n  <path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\" />\n, 'FormatAlignCenterOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatAlignRightIcon = createSvgIcon(\n  <path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\" />\n, 'FormatAlignRightOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatAlignJustifyIcon = createSvgIcon(\n  <path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\" />\n, 'FormatAlignJustifyOutlined');\n","import clsx from 'clsx';\nimport {ComponentType} from 'react';\nimport {FormatAlignLeftIcon} from '@ui/icons/material/FormatAlignLeft';\nimport {FormatAlignCenterIcon} from '@ui/icons/material/FormatAlignCenter';\nimport {FormatAlignRightIcon} from '@ui/icons/material/FormatAlignRight';\nimport {FormatAlignJustifyIcon} from '@ui/icons/material/FormatAlignJustify';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {Trans} from '@ui/i18n/trans';\nimport {message} from '@ui/i18n/message';\n\nconst iconMap = {\n  left: {\n    icon: FormatAlignLeftIcon,\n    label: message('Align left'),\n  },\n  center: {\n    icon: FormatAlignCenterIcon,\n    label: message('Align center'),\n  },\n  right: {\n    icon: FormatAlignRightIcon,\n    label: message('Align right'),\n  },\n  justify: {\n    icon: FormatAlignJustifyIcon,\n    label: message('Justify'),\n  },\n};\n\nexport function AlignButtons({editor, size}: MenubarButtonProps) {\n  const activeKey = (Object.keys(iconMap).find(key => {\n    return editor.isActive({textAlign: key});\n  }) || 'left') as keyof typeof iconMap;\n  const ActiveIcon: ComponentType = activeKey\n    ? iconMap[activeKey].icon\n    : iconMap.left.icon;\n\n  return (\n    <MenuTrigger\n      floatingWidth=\"auto\"\n      selectionMode=\"single\"\n      selectedValue={activeKey}\n      onSelectionChange={key => {\n        editor.commands.focus();\n        editor.commands.setTextAlign(key as string);\n      }}\n    >\n      <IconButton\n        size={size}\n        color={activeKey ? 'primary' : null}\n        className={clsx('flex-shrink-0')}\n      >\n        <ActiveIcon />\n      </IconButton>\n      <Menu>\n        {Object.entries(iconMap).map(([name, config]) => {\n          const Icon = config.icon;\n          return (\n            <MenuItem\n              key={name}\n              value={name}\n              startIcon={<Icon size=\"md\" />}\n              capitalizeFirst\n            >\n              <Trans message={config.label.message} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatIndentDecreaseIcon = createSvgIcon(\n  <path d=\"M11 17h10v-2H11v2zm-8-5 4 4V8l-4 4zm0 9h18v-2H3v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\" />\n, 'FormatIndentDecreaseOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FormatIndentIncreaseIcon = createSvgIcon(\n  <path d=\"M3 21h18v-2H3v2zM3 8v8l4-4-4-4zm8 9h10v-2H11v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\" />\n, 'FormatIndentIncreaseOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {FormatIndentDecreaseIcon} from '@ui/icons/material/FormatIndentDecrease';\nimport {FormatIndentIncreaseIcon} from '@ui/icons/material/FormatIndentIncrease';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function IndentButtons({editor, size}: MenubarButtonProps) {\n  return (\n    <span className={clsx('flex-shrink-0', 'whitespace-nowrap')}>\n      <Tooltip label={<Trans message=\"Decrease indent\" />}>\n        <IconButton\n          size={size}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.outdent();\n          }}\n        >\n          <FormatIndentDecreaseIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Increase indent\" />}>\n        <IconButton\n          size={size}\n          onClick={() => {\n            editor.commands.focus();\n            editor.commands.indent();\n          }}\n        >\n          <FormatIndentIncreaseIcon />\n        </IconButton>\n      </Tooltip>\n    </span>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CodeIcon} from '@ui/icons/material/Code';\nimport {MenubarButtonProps} from './menubar-button-props';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function CodeBlockMenuTrigger({editor, size}: MenubarButtonProps) {\n  const language = editor.getAttributes('codeBlock').language || '';\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={language}\n      onSelectionChange={key => {\n        editor.commands.toggleCodeBlock({language: key as string});\n      }}\n    >\n      <Tooltip label={<Trans message=\"Codeblock\" />}>\n        <IconButton\n          className={clsx('flex-shrink-0')}\n          size={size}\n          color={language ? 'primary' : null}\n        >\n          <CodeIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu>\n        <MenuItem value=\"html\">HTML</MenuItem>\n        <MenuItem value=\"javascript\">JavaScript</MenuItem>\n        <MenuItem value=\"css\">CSS</MenuItem>\n        <MenuItem value=\"php\">PHP</MenuItem>\n        <MenuItem value=\"shell\">Shell</MenuItem>\n        <MenuItem value=\"bash\">Bash</MenuItem>\n        <MenuItem value=\"ruby\">Ruby</MenuItem>\n        <MenuItem value=\"python\">Python</MenuItem>\n        <MenuItem value=\"java\">Java</MenuItem>\n        <MenuItem value=\"c++\">C++</MenuItem>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import React, {Fragment, useState} from 'react';\nimport clsx from 'clsx';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Divider} from '@common/text-editor/menubar/divider';\nimport {FontStyleButtons} from '@common/text-editor/menubar/font-style-buttons';\nimport {ListButtons} from '@common/text-editor/menubar/list-buttons';\nimport {LinkButton} from '@common/text-editor/menubar/link-button';\nimport {ImageButton} from '@common/text-editor/menubar/image-button';\nimport {ClearFormatButton} from '@common/text-editor/menubar/clear-format-button';\nimport {InsertMenuTrigger} from '@common/text-editor/menubar/insert-menu-trigger';\nimport {FormatMenuTrigger} from '@common/text-editor/menubar/format-menu-trigger';\nimport {ColorButtons} from '@common/text-editor/menubar/color-buttons';\nimport {AlignButtons} from '@common/text-editor/menubar/align-buttons';\nimport {IndentButtons} from '@common/text-editor/menubar/indent-buttons';\nimport {CodeBlockMenuTrigger} from '@common/text-editor/menubar/code-block-menu-trigger';\nimport {MenubarButtonProps} from '@common/text-editor/menubar/menubar-button-props';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {UnfoldMoreIcon} from '@ui/icons/material/UnfoldMore';\nimport {UnfoldLessIcon} from '@ui/icons/material/UnfoldLess';\n\nconst MenubarRowClassName =\n  'flex items-center px-4 h-42 text-muted border-b overflow-hidden';\n\ninterface Props extends MenubarButtonProps {\n  justify?: string;\n  hideInsertButton?: boolean;\n  imageDiskPrefix?: string;\n}\nexport function ArticleBodyEditorMenubar({\n  editor,\n  size = 'md',\n  justify = 'justify-center',\n  hideInsertButton = false,\n  imageDiskPrefix,\n}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  const [extendedVisible, setExtendedVisible] = useState(false);\n  return (\n    <div className={clsx(extendedVisible ? 'h-84' : 'h-42')}>\n      <div className={clsx(MenubarRowClassName, justify, 'relative z-20')}>\n        <FormatMenuTrigger editor={editor} size={size} />\n        <Divider />\n        <FontStyleButtons editor={editor} size={size} />\n        <Divider />\n        <AlignButtons editor={editor} size={size} />\n        <IndentButtons editor={editor} size={size} />\n        <Divider />\n        {isMobile ? (\n          <IconButton\n            className=\"flex-shrink-0\"\n            color={extendedVisible ? 'primary' : null}\n            size={size}\n            onClick={() => {\n              setExtendedVisible(!extendedVisible);\n            }}\n          >\n            {extendedVisible ? <UnfoldLessIcon /> : <UnfoldMoreIcon />}\n          </IconButton>\n        ) : (\n          <ExtendedButtons\n            editor={editor}\n            size={size}\n            hideInsertButton={hideInsertButton}\n            imageDiskPrefix={imageDiskPrefix}\n          />\n        )}\n      </div>\n      <AnimatePresence>\n        {extendedVisible && (\n          <m.div\n            className={clsx(\n              MenubarRowClassName,\n              justify,\n              'absolute flex h-full w-full',\n            )}\n            initial={{y: '-100%'}}\n            animate={{y: 0}}\n            exit={{y: '-100%'}}\n          >\n            <ExtendedButtons\n              editor={editor}\n              size={size}\n              imageDiskPrefix={imageDiskPrefix}\n            />\n          </m.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\nfunction ExtendedButtons({\n  editor,\n  size = 'md',\n  hideInsertButton,\n  imageDiskPrefix,\n}: Props) {\n  return (\n    <Fragment>\n      <ListButtons editor={editor} size={size} />\n      <Divider />\n      <LinkButton editor={editor} size={size} />\n      <ImageButton editor={editor} size={size} diskPrefix={imageDiskPrefix} />\n      {!hideInsertButton && <InsertMenuTrigger editor={editor} size={size} />}\n      <Divider />\n      <ColorButtons editor={editor} size={size} />\n      <Divider />\n      <CodeBlockMenuTrigger editor={editor} size={size} />\n      <ClearFormatButton editor={editor} size={size} />\n    </Fragment>\n  );\n}\n","import {SlugEditor, SlugEditorProps} from '@common/ui/other/slug-editor';\nimport {useController, useFormContext} from 'react-hook-form';\nimport React, {Fragment, ReactNode, useEffect, useRef} from 'react';\nimport clsx from 'clsx';\nimport {useStickySentinel} from '@ui/utils/hooks/sticky-sentinel';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {Button} from '@ui/buttons/button';\nimport {Link} from 'react-router-dom';\nimport {ArrowBackIcon} from '@ui/icons/material/ArrowBack';\nimport {Trans} from '@ui/i18n/trans';\nimport {HistoryButtons} from '@common/text-editor/menubar/history-buttons';\nimport {ModeButton} from '@common/text-editor/menubar/mode-button';\nimport {ArticleBodyEditorMenubar} from './article-body-editor-menubar';\nimport {Editor} from '@tiptap/react';\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\n\ninterface StickyHeaderProps {\n  editor: Editor;\n  allowSlugEditing?: boolean;\n  onSave?: (editorContent: string) => void;\n  saveButton?: ReactNode;\n  backLink: string;\n  isLoading?: boolean;\n  slugPrefix?: string;\n  imageDiskPrefix?: string;\n}\nexport function ArticleEditorStickyHeader({\n  editor,\n  allowSlugEditing = true,\n  onSave,\n  saveButton,\n  isLoading = false,\n  backLink,\n  slugPrefix = 'pages',\n  imageDiskPrefix,\n}: StickyHeaderProps) {\n  const {isSticky, sentinelRef} = useStickySentinel();\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <Fragment>\n      <div ref={sentinelRef} />\n      <div className={clsx('sticky top-0 z-10 mb-20 bg', isSticky && 'shadow')}>\n        <div className=\"flex items-center justify-between gap-20 border-b px-20 py-10 text-muted sm:justify-start\">\n          {!isMobile && (\n            <Fragment>\n              <Button\n                variant=\"text\"\n                size=\"sm\"\n                elementType={Link}\n                to={backLink}\n                relative=\"path\"\n                startIcon={<ArrowBackIcon />}\n              >\n                <Trans message=\"Back\" />\n              </Button>\n              <div className=\"mr-auto\">\n                {allowSlugEditing && (\n                  <FormSlugEditor\n                    name=\"slug\"\n                    showLinkIcon={false}\n                    prefix={slugPrefix}\n                  />\n                )}\n              </div>\n            </Fragment>\n          )}\n          {editor && <HistoryButtons editor={editor} />}\n          {!isMobile && <ModeButton editor={editor} />}\n          {onSave && (\n            <SaveButton\n              onSave={() => {\n                onSave(editor.getHTML());\n              }}\n              isLoading={isLoading}\n            />\n          )}\n          {saveButton}\n        </div>\n        <ArticleBodyEditorMenubar\n          editor={editor}\n          size=\"sm\"\n          imageDiskPrefix={imageDiskPrefix}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\ninterface SaveButtonProps {\n  onSave: () => void;\n  isLoading: boolean;\n}\nfunction SaveButton({onSave, isLoading}: SaveButtonProps) {\n  const form = useFormContext();\n  const title = form.watch('title');\n\n  return (\n    <Button\n      variant=\"flat\"\n      size=\"sm\"\n      color=\"primary\"\n      className=\"min-w-90\"\n      disabled={isLoading || !title}\n      onClick={() => onSave()}\n    >\n      <Trans message=\"Save\" />\n    </Button>\n  );\n}\n\ninterface FormSlugEditorProps extends SlugEditorProps {\n  name: string;\n}\nfunction FormSlugEditor({name, ...other}: FormSlugEditorProps) {\n  const {\n    field: {onChange, onBlur, value = '', ref},\n  } = useController({\n    name,\n  });\n  const manuallyChanged = useRef(false);\n\n  const {watch, setValue} = useFormContext<CreateCustomPagePayload>();\n\n  useEffect(() => {\n    const subscription = watch((formVal, {name: fieldName}) => {\n      // if user has not changed slug manually, set it based on page title field changes\n      if (fieldName === 'title' && !manuallyChanged.current) {\n        setValue('slug', formVal.title);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [watch, setValue]);\n\n  return (\n    <SlugEditor\n      className={clsx(!value && 'invisible')}\n      onChange={e => {\n        manuallyChanged.current = true;\n        onChange(e);\n      }}\n      onInputBlur={onBlur}\n      value={value}\n      inputRef={ref}\n      {...other}\n    />\n  );\n}\n","import {useCustomPage} from '@common/custom-page/use-custom-page';\nimport React, {Fragment, Suspense} from 'react';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {CustomPage} from '@common/admin/custom-pages/custom-page';\nimport {FormProvider, useForm} from 'react-hook-form';\nimport {useUpdateCustomPage} from '@common/admin/custom-pages/requests/use-update-custom-page';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ArticleEditorTitle} from '@common/article-editor/article-editor-title';\nimport {ArticleEditorStickyHeader} from '@common/article-editor/article-editor-sticky-header';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\n\nconst ArticleBodyEditor = React.lazy(\n  () => import('@common/article-editor/article-body-editor'),\n);\n\nexport function EditCustomPage() {\n  const query = useCustomPage();\n\n  return query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent page={query.data.page} />\n    </Fragment>\n  ) : (\n    <div className=\"relative w-full h-full\">\n      <PageStatus query={query} />\n    </div>\n  );\n}\n\ninterface PageContentProps {\n  page: CustomPage;\n}\nfunction PageContent({page}: PageContentProps) {\n  const navigate = useNavigate();\n  const crupdatePage = useUpdateCustomPage();\n  const form = useForm<CreateCustomPagePayload>({\n    defaultValues: {\n      title: page.title,\n      slug: page.slug,\n      body: page.body,\n    },\n  });\n\n  const handleSave = (editorContent: string) => {\n    crupdatePage.mutate(\n      {\n        ...form.getValues(),\n        body: editorContent,\n      },\n      {\n        onSuccess: () => navigate('../..', {relative: 'path'}),\n      },\n    );\n  };\n\n  return (\n    <Suspense fallback={<FullPageLoader />}>\n      <ArticleBodyEditor initialContent={page.body}>\n        {(content, editor) => (\n          <FileUploadProvider>\n            <FormProvider {...form}>\n              <ArticleEditorStickyHeader\n                editor={editor}\n                backLink=\"../..\"\n                isLoading={crupdatePage.isPending}\n                onSave={handleSave}\n              />\n              <div className=\"mx-20\">\n                <div className=\"prose dark:prose-invert mx-auto flex-auto\">\n                  <ArticleEditorTitle />\n                  {content}\n                </div>\n              </div>\n            </FormProvider>\n          </FileUploadProvider>\n        )}\n      </ArticleBodyEditor>\n    </Suspense>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {CustomPage} from '../custom-page';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\n\ninterface Response extends BackendResponse {\n  page: CustomPage;\n}\n\nexport interface CreateCustomPagePayload {\n  title?: string;\n  body?: string;\n  slug?: string;\n  hide_nav?: boolean;\n}\n\nexport function useCreateCustomPage(endpoint?: string) {\n  const finalEndpoint = endpoint || 'custom-pages';\n  return useMutation({\n    mutationFn: (payload: CreateCustomPagePayload) =>\n      createPage(payload, finalEndpoint),\n    onError: err => showHttpErrorToast(err),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['custom-pages']});\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(finalEndpoint),\n      });\n      toast(message('Page created'));\n    },\n  });\n}\n\nfunction createPage(\n  payload: CreateCustomPagePayload,\n  endpoint: string,\n): Promise<Response> {\n  return apiClient.post(`${endpoint}`, payload).then(r => r.data);\n}\n","import React, {Suspense} from 'react';\nimport {FormProvider, useForm} from 'react-hook-form';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ArticleEditorTitle} from '@common/article-editor/article-editor-title';\nimport {ArticleEditorStickyHeader} from '@common/article-editor/article-editor-sticky-header';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {\n  CreateCustomPagePayload,\n  useCreateCustomPage,\n} from '@common/admin/custom-pages/requests/use-create-custom-page';\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\n\nconst ArticleBodyEditor = React.lazy(\n  () => import('@common/article-editor/article-body-editor'),\n);\n\nexport function CreateCustomPage() {\n  const navigate = useNavigate();\n  const createPage = useCreateCustomPage();\n  const form = useForm<CreateCustomPagePayload>();\n\n  const handleSave = (editorContent: string) => {\n    createPage.mutate(\n      {\n        ...form.getValues(),\n        body: editorContent,\n      },\n      {\n        onSuccess: () => navigate('../', {relative: 'path'}),\n      },\n    );\n  };\n\n  return (\n    <Suspense fallback={<FullPageLoader />}>\n      <ArticleBodyEditor>\n        {(content, editor) => (\n          <FileUploadProvider>\n            <FormProvider {...form}>\n              <ArticleEditorStickyHeader\n                editor={editor}\n                isLoading={createPage.isPending}\n                onSave={handleSave}\n                backLink=\"../\"\n              />\n              <div className=\"mx-20\">\n                <div className=\"prose dark:prose-invert mx-auto flex-auto\">\n                  <ArticleEditorTitle />\n                  {content}\n                </div>\n              </div>\n            </FormProvider>\n          </FileUploadProvider>\n        )}\n      </ArticleBodyEditor>\n    </Suspense>\n  );\n}\n","export default \"__VITE_ASSET__03cbd387__\"","import {useTrans} from '@ui/i18n/use-trans';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@ui/icons/material/Search';\nimport {message} from '@ui/i18n/message';\nimport {Select} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {FontSelectorState} from '@common/ui/font-selector/font-selector-state';\n\nexport interface FontSelectorFilterValue {\n  query: string;\n  category: string;\n}\n\ninterface FiltersHeaderProps {\n  state: FontSelectorState;\n}\nexport function FontSelectorFilters({\n  state: {filters, setFilters},\n}: FiltersHeaderProps) {\n  const {trans} = useTrans();\n  return (\n    <div className=\"mb-24 items-center gap-24 @xs:flex\">\n      <TextField\n        className=\"mb-12 flex-auto @xs:mb-0\"\n        value={filters.query}\n        onChange={e => {\n          setFilters({\n            ...filters,\n            query: e.target.value,\n          });\n        }}\n        startAdornment={<SearchIcon />}\n        placeholder={trans(message('Search fonts'))}\n      />\n      <Select\n        className=\"flex-auto\"\n        selectionMode=\"single\"\n        selectedValue={filters.category}\n        onSelectionChange={value => {\n          setFilters({\n            ...filters,\n            category: value as string,\n          });\n        }}\n      >\n        <Item value=\"\">\n          <Trans message=\"All categories\" />\n        </Item>\n        <Item value=\"serif\">\n          <Trans message=\"Serif\" />\n        </Item>\n        <Item value=\"sans-serif\">\n          <Trans message=\"Sans serif\" />\n        </Item>\n        <Item value=\"display\">\n          <Trans message=\"Display\" />\n        </Item>\n        <Item value=\"handwriting\">\n          <Trans message=\"Handwriting\" />\n        </Item>\n        <Item value=\"monospace\">\n          <Trans message=\"Monospace\" />\n        </Item>\n      </Select>\n    </div>\n  );\n}\n","import {message} from '@ui/i18n/message';\nimport {FontConfig} from '@ui/fonts/font-picker/font-config';\n\nexport const BrowserSafeFonts: FontConfig[] = [\n  {\n    label: message('System'),\n    family:\n      'ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"',\n    category: 'sans-serif',\n  },\n  {family: 'Impact, Charcoal, sans-serif', category: 'sans-serif'},\n  {family: 'Arial, Helvetica Neue, Helvetica, sans-serif', category: 'serif'},\n  {family: '\"Comic Sans MS\", cursive, sans-serif', category: 'Handwriting'},\n  {family: 'Century Gothic, sans-serif', category: 'sans-serif'},\n  {family: '\"Courier New\", Courier, monospace', category: 'monospace'},\n  {\n    family: '\"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif',\n    category: 'sans-serif',\n  },\n  {family: '\"Times New Roman\", Times, serif', category: 'serif'},\n  {family: '\"Lucida Console\", Monaco, monospace', category: 'monospace'},\n  {family: '\"Andele Mono\", monospace, sans-serif', category: 'sans-serif'},\n  {family: 'Verdana, Geneva, sans-serif', category: 'sans-serif'},\n  {\n    family: '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\n    category: 'sans-serif',\n  },\n];\n","export function chunkArray<T>(array: T[], chunkSize: number): T[][] {\n  return array.reduce<any>((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / chunkSize);\n\n    if (!resultArray[chunkIndex]) {\n      resultArray[chunkIndex] = [];\n    }\n\n    resultArray[chunkIndex].push(item);\n\n    return resultArray;\n  }, []);\n}\n","import {useCollator} from '@ui/i18n/use-collator';\nimport {useMemo} from 'react';\n\ninterface Filter {\n  /** Returns whether a string starts with a given substring. */\n  startsWith(string: string, substring: string): boolean;\n  /** Returns whether a string ends with a given substring. */\n  endsWith(string: string, substring: string): boolean;\n  /** Returns whether a string contains a given substring. */\n  contains(string: string, substring: string): boolean;\n}\n\nexport function useFilter(options?: Intl.CollatorOptions): Filter {\n  const collator = useCollator({\n    usage: 'search',\n    ...options,\n  });\n\n  return useMemo(() => {\n    return {\n      startsWith(string, substring) {\n        if (substring.length === 0) {\n          return true;\n        }\n\n        string = string.normalize('NFC');\n        substring = substring.normalize('NFC');\n        return (\n          collator.compare(string.slice(0, substring.length), substring) === 0\n        );\n      },\n      endsWith(string, substring) {\n        if (substring.length === 0) {\n          return true;\n        }\n\n        string = string.normalize('NFC');\n        substring = substring.normalize('NFC');\n        return (\n          collator.compare(string.slice(-substring.length), substring) === 0\n        );\n      },\n      contains(string, substring) {\n        if (substring.length === 0) {\n          return true;\n        }\n\n        string = string.normalize('NFC');\n        substring = substring.normalize('NFC');\n\n        let scan = 0;\n        const sliceLen = substring.length;\n        for (; scan + sliceLen <= string.length; scan++) {\n          const slice = string.slice(scan, scan + sliceLen);\n          if (collator.compare(substring, slice) === 0) {\n            return true;\n          }\n        }\n\n        return false;\n      },\n    };\n  }, [collator]);\n}\n","import {useCallback, useEffect, useMemo, useState} from 'react';\nimport {FontSelectorFilterValue} from '@common/ui/font-selector/font-selector-filters';\nimport {useValueLists} from '@common/http/value-lists';\nimport {BrowserSafeFonts} from '@ui/fonts/font-picker/browser-safe-fonts';\nimport {chunkArray} from '@ui/utils/array/chunk-array';\nimport {loadFonts} from '@ui/fonts/font-picker/load-fonts';\nimport {FontConfig} from '@ui/fonts/font-picker/font-config';\nimport {useFilter} from '@ui/i18n/use-filter';\n\nexport interface FontSelectorState extends UseFontSelectorProps {\n  fonts: FontConfig[];\n  filteredFonts: FontConfig[];\n  pages: FontConfig[][];\n  isLoading: boolean;\n  filters: FontSelectorFilterValue;\n  setFilters: (filters: FontSelectorFilterValue) => void;\n  currentPage: number;\n  setCurrentPage: (page: number) => void;\n}\n\nexport interface UseFontSelectorProps {\n  value?: FontConfig;\n  onChange: (value: FontConfig) => void;\n}\nexport function useFontSelectorState({\n  value,\n  onChange,\n}: UseFontSelectorProps): FontSelectorState {\n  const {data, isLoading} = useValueLists(['googleFonts']);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const [filters, setFilterState] = useState<FontSelectorFilterValue>({\n    query: '',\n    category: value?.category ?? '',\n  });\n  const {contains} = useFilter({\n    sensitivity: 'base',\n  });\n\n  const setFilters = useCallback((filters: FontSelectorFilterValue) => {\n    setFilterState(filters);\n    // reset to first page when searching or changing category\n    setCurrentPage(0);\n  }, []);\n\n  const allFonts = useMemo(() => {\n    return BrowserSafeFonts.concat(data?.googleFonts ?? []);\n  }, [data?.googleFonts]);\n\n  const filteredFonts = useMemo(() => {\n    return allFonts.filter(font => {\n      return (\n        contains(font.family, filters.query) &&\n        (!filters.category ||\n          font.category?.toLowerCase() === filters.category.toLowerCase())\n      );\n    });\n  }, [allFonts, filters, contains]);\n\n  const pages = useMemo(() => {\n    return chunkArray(filteredFonts, 20);\n  }, [filteredFonts]);\n  const fonts = pages[currentPage];\n\n  useEffect(() => {\n    const id = 'font-selector';\n    if (fonts?.length) {\n      loadFonts(fonts, {id});\n    }\n  }, [fonts, currentPage]);\n\n  return {\n    fonts: fonts || [],\n    currentPage,\n    filteredFonts: filteredFonts || [],\n    setCurrentPage,\n    isLoading,\n    filters,\n    setFilters,\n    value,\n    onChange,\n    pages,\n  };\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport React from 'react';\nimport {FontSelectorState} from '@common/ui/font-selector/font-selector-state';\n\ninterface FontSelectorPaginationProps {\n  state: FontSelectorState;\n}\nexport function FontSelectorPagination({\n  state: {currentPage = 0, setCurrentPage, filteredFonts, pages},\n}: FontSelectorPaginationProps) {\n  const total = filteredFonts?.length || 0;\n\n  return (\n    <div className=\"mt-30 flex items-center justify-end gap-24 border-t pt-14 text-sm\">\n      {total > 0 && (\n        <div>\n          <Trans\n            message=\":from - :to of :total\"\n            values={{\n              from: currentPage * 20 + 1,\n              to: Math.min((currentPage + 1) * 20, total),\n              total,\n            }}\n          />\n        </div>\n      )}\n      <div className=\"text-muted\">\n        <IconButton\n          disabled={currentPage < 1}\n          onClick={() => {\n            setCurrentPage(Math.max(0, currentPage - 1));\n          }}\n        >\n          <KeyboardArrowLeftIcon />\n        </IconButton>\n        <IconButton\n          disabled={currentPage >= pages.length - 1}\n          onClick={() => {\n            setCurrentPage(currentPage + 1);\n          }}\n        >\n          <KeyboardArrowRightIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {ButtonBase} from '@ui/buttons/button-base';\nimport clsx from 'clsx';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport fontImage from './font.svg';\nimport {SvgImage} from '@ui/images/svg-image';\nimport {FontSelectorFilters} from '@common/ui/font-selector/font-selector-filters';\nimport {\n  FontSelectorState,\n  UseFontSelectorProps,\n  useFontSelectorState,\n} from '@common/ui/font-selector/font-selector-state';\nimport {FontSelectorPagination} from '@common/ui/font-selector/font-selector-pagination';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {FontConfig} from '@ui/fonts/font-picker/font-config';\n\ninterface FontSelectorProps extends UseFontSelectorProps {\n  className?: string;\n}\nexport function FontSelector(props: FontSelectorProps) {\n  const state = useFontSelectorState(props);\n  return (\n    <div className={props.className}>\n      <FontSelectorFilters state={state} />\n      <AnimatePresence initial={false} mode=\"wait\">\n        <FontList state={state} />\n      </AnimatePresence>\n      <FontSelectorPagination state={state} />\n    </div>\n  );\n}\n\ninterface FontListProps {\n  state: FontSelectorState;\n}\nfunction FontList({state}: FontListProps) {\n  const {isLoading, fonts} = state;\n\n  const gridClassName =\n    'grid gap-24 grid-cols-[repeat(auto-fill,minmax(90px,1fr))] items-start';\n\n  if (isLoading) {\n    return <FontListSkeleton className={gridClassName} />;\n  }\n\n  if (!fonts?.length) {\n    return (\n      <IllustratedMessage\n        className=\"mt-60\"\n        size=\"sm\"\n        image={<SvgImage src={fontImage} />}\n        title={<Trans message=\"No matching fonts\" />}\n        description={\n          <Trans message=\"Try another search query or different category\" />\n        }\n      />\n    );\n  }\n\n  return (\n    <m.div key=\"font-list\" {...opacityAnimation} className={gridClassName}>\n      {fonts?.map(font => (\n        <FontButton key={font.family} font={font} state={state} />\n      ))}\n    </m.div>\n  );\n}\n\ninterface FontButtonProps {\n  font: FontConfig;\n  state: FontSelectorState;\n}\nfunction FontButton({font, state: {value, onChange}}: FontButtonProps) {\n  const isActive = value?.family === font.family;\n  const displayName = font.family.split(',')[0].replace(/\"/g, '');\n\n  return (\n    <ButtonBase\n      key={font.family}\n      display=\"block\"\n      onClick={() => {\n        onChange(font);\n      }}\n    >\n      <span\n        className={clsx(\n          'flex aspect-square items-center justify-center rounded-panel border text-4xl transition-bg-color hover:bg-hover md:text-5xl',\n          isActive && 'ring-2 ring-primary ring-offset-2',\n        )}\n      >\n        <span style={{fontFamily: font.family}}>Aa</span>\n      </span>\n      <span\n        className={clsx(\n          'mt-6 block overflow-hidden overflow-ellipsis whitespace-nowrap text-sm',\n          isActive && 'text-primary',\n        )}\n      >\n        {font.label ? <Trans {...font.label} /> : displayName}\n      </span>\n    </ButtonBase>\n  );\n}\n\ninterface FontListSkeletonProps {\n  className: string;\n}\nfunction FontListSkeleton({className}: FontListSkeletonProps) {\n  const items = Array.from(Array(20).keys());\n  return (\n    <m.div key=\"font-list-skeleton\" {...opacityAnimation} className={className}>\n      {items.map(index => (\n        <div key={index}>\n          <div className=\"aspect-square\">\n            <Skeleton display=\"block\" variant=\"rect\" />\n          </div>\n          <Skeleton className=\"mt-6 text-sm\" />\n        </div>\n      ))}\n    </m.div>\n  );\n}\n","import {FontSelector} from '@common/ui/font-selector/font-selector';\nimport {useFormContext} from 'react-hook-form';\nimport {\n  appearanceState,\n  AppearanceEditorValues,\n} from '@common/admin/appearance/appearance-store';\nimport {useParams} from 'react-router-dom';\n\ntype Font = 'appearance.themes.1.font';\n\nexport function ThemeFontPanel() {\n  const {setValue, watch} = useFormContext<AppearanceEditorValues>();\n  const {themeIndex} = useParams();\n  const key = `appearance.themes.${themeIndex}.font` as Font;\n  return (\n    <FontSelector\n      value={watch(key)}\n      onChange={font => {\n        setValue(key, font, {shouldDirty: true});\n        appearanceState().preview.setThemeFont(font);\n      }}\n    />\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {ButtonBase} from '@ui/buttons/button-base';\nimport {ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {useFormContext} from 'react-hook-form';\nimport {\n  appearanceState,\n  AppearanceEditorValues,\n} from '@common/admin/appearance/appearance-store';\nimport {message} from '@ui/i18n/message';\nimport {useParams} from 'react-router-dom';\n\nconst radiusMap = {\n  'rounded-none': {\n    label: message('Square'),\n    value: '0px',\n  },\n  rounded: {\n    label: message('Small'),\n    value: '0.25rem',\n  },\n  'rounded-md': {\n    label: message('Medium'),\n    value: '0.375rem',\n  },\n  'rounded-lg': {\n    label: message('Large'),\n    value: '0.5rem',\n  },\n  'rounded-xl': {\n    label: message('Larger'),\n    value: '0.75rem',\n  },\n  'rounded-full': {\n    label: message('Pill'),\n    value: '9999px',\n  },\n};\n\nexport function ThemeRadiusPanel() {\n  return (\n    <div className=\"space-y-24\">\n      <RadiusSelector\n        label={<Trans message=\"Button rounding\" />}\n        name=\"button-radius\"\n      />\n      <RadiusSelector\n        label={<Trans message=\"Input rounding\" />}\n        name=\"input-radius\"\n      />\n      <RadiusSelector\n        label={<Trans message=\"Panel rounding\" />}\n        name=\"panel-radius\"\n        hidePill\n      />\n    </div>\n  );\n}\n\ninterface RadiusSelectorProps {\n  label: ReactNode;\n  name: string;\n  hidePill?: boolean;\n}\nfunction RadiusSelector({label, name, hidePill}: RadiusSelectorProps) {\n  const {themeIndex} = useParams();\n  const {watch, setValue} = useFormContext<AppearanceEditorValues>();\n  const formKey =\n    `appearance.themes.${themeIndex}.values.--be-${name}` as 'appearance.themes.1.values.--be-button-radius';\n  const currentValue = watch(formKey);\n  return (\n    <div>\n      <div className=\"mb-10 text-sm font-semibold\">{label}</div>\n      <div className=\"grid grid-cols-3 gap-10 text-sm\">\n        {Object.entries(radiusMap)\n          .filter(([key]) => !hidePill || !key.includes('full'))\n          .map(([key, {label, value}]) => (\n            <PreviewButton\n              key={key}\n              radius={key}\n              isActive={value === currentValue}\n              onClick={() => {\n                setValue(formKey, value, {shouldDirty: true});\n                appearanceState().preview.setThemeValue(`--be-${name}`, value);\n              }}\n            >\n              <Trans {...label} />\n            </PreviewButton>\n          ))}\n      </div>\n    </div>\n  );\n}\n\ninterface PreviewButtonProps {\n  radius: string;\n  children: ReactNode;\n  isActive: boolean;\n  onClick: () => void;\n}\nfunction PreviewButton({\n  radius,\n  children,\n  isActive,\n  onClick,\n}: PreviewButtonProps) {\n  return (\n    <ButtonBase\n      display=\"block\"\n      className={clsx(\n        'h-36 border-2 hover:bg-hover',\n        radius,\n        isActive && 'border-primary',\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </ButtonBase>\n  );\n}\n","import {Tabs} from '@ui/tabs/tabs';\nimport {Tab} from '@ui/tabs/tab';\nimport {Trans} from '@ui/i18n/trans';\nimport {TabList} from '@ui/tabs/tab-list';\nimport {Link, Outlet, useLocation} from 'react-router-dom';\n\nconst tabs = ['schedule', 'error', 'outgoing-email'];\n\nexport function LogsPage() {\n  const {pathname} = useLocation();\n  const activeTab = pathname.split('/').pop() as string;\n  const activeIndex = tabs.includes(activeTab) ? tabs.indexOf(activeTab) : 0;\n  return (\n    <Tabs className=\"p-12 md:p-24\" selectedTab={activeIndex}>\n      <TabList className=\"mb-24\">\n        <Tab elementType={Link} to=\"/admin/logs/schedule\" replace>\n          <Trans message=\"Schedule\" />\n        </Tab>\n        <Tab elementType={Link} to=\"/admin/logs/error\" replace>\n          <Trans message=\"Error\" />\n        </Tab>\n        <Tab elementType={Link} to=\"/admin/logs/outgoing-email\" replace>\n          <Trans message=\"Email\" />\n        </Tab>\n      </TabList>\n      <Outlet />\n    </Tabs>\n  );\n}\n","import {CheckIcon} from '@ui/icons/material/Check';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport React from 'react';\n\ninterface BooleanIndicatorProps {\n  value: boolean;\n}\nexport function BooleanIndicator({value}: BooleanIndicatorProps) {\n  if (value) {\n    return <CheckIcon className=\"text-positive icon-md\" />;\n  }\n  return <CloseIcon className=\"text-danger icon-md\" />;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {message} from '@ui/i18n/message';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  id: number;\n}\n\nexport function useRerunScheduledCommand() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: Payload) => rerunCommand(payload),\n    onSuccess: async (response, props) => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('logs/schedule'),\n      });\n      toast.positive(trans(message('Command reran')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction rerunCommand({id}: Payload): Promise<Response> {\n  return apiClient.post(`logs/schedule/rerun/${id}`).then(r => r.data);\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const EventRepeatIcon = createSvgIcon(\n  <path d=\"M21 12V6c0-1.1-.9-2-2-2h-1V2h-2v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h7v-2H5V10h14v2h2zm-2-4H5V6h14v2zm-3.36 12c.43 1.45 1.77 2.5 3.36 2.5 1.93 0 3.5-1.57 3.5-3.5s-1.57-3.5-3.5-3.5c-.95 0-1.82.38-2.45 1H18V18h-4v-4h1.5v1.43c.9-.88 2.14-1.43 3.5-1.43 2.76 0 5 2.24 5 5s-2.24 5-5 5c-2.42 0-4.44-1.72-4.9-4h1.54z\" />\n, 'EventRepeatOutlined');\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {BooleanIndicator} from '@common/datatable/column-templates/boolean-indicator';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport React from 'react';\nimport {ScheduleLogItem} from '@common/admin/logging/schedule/schedule-log-item';\nimport {useRerunScheduledCommand} from '@common/admin/logging/schedule/use-rerurun-scheduled-command';\nimport {EventRepeatIcon} from '@ui/icons/material/EventRepeat';\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\n\nexport const ScheduleDatatableColumns: ColumnConfig<ScheduleLogItem>[] = [\n  {\n    key: 'command',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Name\" />,\n    body: item => (\n      <NameWithAvatar label={item.command} description={item.output} />\n    ),\n  },\n  {\n    key: 'ran_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last ran at\" />,\n    body: item => <FormattedRelativeTime date={item.ran_at} />,\n  },\n  {\n    key: 'duration',\n    allowsSorting: true,\n    header: () => <Trans message=\"Duration\" />,\n    body: item => `${item.duration}ms`,\n  },\n  {\n    key: 'exit_code',\n    allowsSorting: true,\n    header: () => <Trans message=\"Completed\" />,\n    body: item => <BooleanIndicator value={item.exit_code === 0} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    visibleInMode: 'all',\n    body: item => <RerunButton item={item} />,\n  },\n];\n\ninterface RerunButtonProps {\n  item: ScheduleLogItem;\n}\nfunction RerunButton({item}: RerunButtonProps) {\n  const rerunCommand = useRerunScheduledCommand();\n  return (\n    <Tooltip label={<Trans message=\"Rerun now\" />}>\n      <IconButton\n        size=\"md\"\n        className=\"text-muted\"\n        disabled={rerunCommand.isPending}\n        onClick={() => {\n          rerunCommand.mutate({id: item.id});\n        }}\n      >\n        <EventRepeatIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","export default \"__VITE_ASSET__8c0e1462__\"","import {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport React from 'react';\nimport {ScheduleDatatableColumns} from '@common/admin/logging/schedule/schedule-datatable-columns';\nimport timelineImage from '@common/admin/logging/schedule/timeline.svg';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {DownloadIcon} from '@ui/icons/material/Download';\n\nexport function ScheduleLogDatatable() {\n  return (\n    <DataTablePage\n      padding=\"pt-12 md:pt-24\"\n      endpoint=\"logs/schedule\"\n      title={<Trans message=\"CRON schedule log\" />}\n      columns={ScheduleDatatableColumns}\n      actions={<Actions />}\n      enableSelection={false}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={timelineImage}\n          title={<Trans message=\"No scheduled commands have ran yet\" />}\n          filteringTitle={<Trans message=\"No matching scheduled commands\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <DataTableAddItemButton\n      elementType=\"a\"\n      href=\"api/v1/logs/schedule/download\"\n      download\n      icon={<DownloadIcon />}\n    >\n      <Trans message=\"Download log\" />\n    </DataTableAddItemButton>\n  );\n}\n","export default \"__VITE_ASSET__5350d2f0__\"","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {ErrorLogItem} from '@common/admin/logging/error/error-log-item';\nimport {InfoIcon} from '@ui/icons/material/Info';\nimport {ErrorIcon} from '@ui/icons/material/Error';\nimport clsx from 'clsx';\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\n\nexport const ErrorLogDatatableColumns: ColumnConfig<ErrorLogItem>[] = [\n  {\n    key: 'message',\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Message\" />,\n    body: item => item.message,\n  },\n  {\n    key: 'datetime',\n    header: () => <Trans message=\"Date\" />,\n    body: item => <FormattedRelativeTime date={item.datetime} />,\n  },\n  {\n    key: 'severity',\n    header: () => <Trans message=\"Severity\" />,\n    body: item => {\n      return (\n        <span\n          className={clsx(\n            'flex items-center gap-6 text-xs capitalize',\n            item.level === 'error' ? 'text-danger' : 'text-primary',\n          )}\n        >\n          {item.level === 'error' ? (\n            <ErrorIcon size=\"sm\" />\n          ) : (\n            <InfoIcon size=\"sm\" />\n          )}\n          {item.level}\n        </span>\n      );\n    },\n  },\n];\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {ErrorLogItem} from '@common/admin/logging/error/error-log-item';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Button} from '@ui/buttons/button';\n\ninterface Props {\n  error: ErrorLogItem;\n}\nexport function ErrorLogEntryDialog({error}: Props) {\n  return (\n    <Dialog size=\"fullscreen\">\n      <DialogHeader\n        showDivider\n        padding=\"px-24 py-10\"\n        actions={\n          <Button\n            variant=\"outline\"\n            size=\"xs\"\n            onClick={() => downloadLogItem(error)}\n          >\n            <Trans message=\"Download\" />\n          </Button>\n        }\n      >\n        <Trans message=\"Error details\" />\n      </DialogHeader>\n      <DialogBody>\n        <pre className=\"whitespace-pre-wrap break-words text-xs leading-5\">\n          {error.exception}\n        </pre>\n      </DialogBody>\n    </Dialog>\n  );\n}\n\nfunction downloadLogItem(item: ErrorLogItem) {\n  const el = document.createElement('a');\n  el.setAttribute(\n    'href',\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(item.exception),\n  );\n  el.setAttribute('download', `error-${item.id}.log`);\n\n  el.style.display = 'none';\n  document.body.appendChild(el);\n  el.click();\n  document.body.removeChild(el);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {toast} from '@ui/toast/toast';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\n\ninterface Payload {\n  identifier: string;\n}\n\nexport function useDeleteErrorLog() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: Payload) => deleteLogFile(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('logs/error'),\n      });\n      toast(trans(message('Log file deleted')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction deleteLogFile({identifier}: Payload) {\n  return apiClient.delete(`logs/error/${identifier}`).then(r => r.data);\n}\n","import {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport React, {Fragment, useEffect, useRef, useState} from 'react';\nimport bugFixingImage from '@common/admin/logging/error/bug-fixing.svg';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {DownloadIcon} from '@ui/icons/material/Download';\nimport {ErrorLogDatatableColumns} from '@common/admin/logging/error/error-log-datatable-columns';\nimport {closeDialog, openDialog} from '@ui/overlays/store/dialog-store';\nimport {ErrorLogEntryDialog} from '@common/admin/logging/error/error-log-entry-dialog';\nimport {useDataTable} from '@common/datatable/page/data-table-context';\nimport {Select} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {ErrorLogItem} from '@common/admin/logging/error/error-log-item';\nimport {Button} from '@ui/buttons/button';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteErrorLog} from '@common/admin/logging/error/use-delete-error-log';\nimport {FormattedBytes} from '@ui/i18n/formatted-bytes';\n\ninterface ErrorLogFile {\n  name: string;\n  identifier: string;\n  size: number;\n}\n\nexport function ErrorLogDatatable() {\n  return (\n    <DataTablePage\n      padding=\"pt-12 md:pt-24\"\n      endpoint=\"logs/error\"\n      title={<Trans message=\"Error log\" />}\n      onRowAction={item => {\n        openDialog(ErrorLogEntryDialog, {error: item});\n      }}\n      columns={ErrorLogDatatableColumns}\n      actions={<Actions />}\n      enableSelection={false}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={bugFixingImage}\n          title={<Trans message=\"No errors have been logged yet\" />}\n          filteringTitle={<Trans message=\"No matching error log entries\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  const {query, setParams} = useDataTable<\n    ErrorLogItem,\n    {files: ErrorLogFile[]; selectedFile?: string}\n  >();\n\n  const setOnce = useRef(false);\n  const [selectedFile, setSelectedFile] = useState<string | null>(null);\n\n  // set initial selected file once files are loaded\n  useEffect(() => {\n    if (query.data?.files?.length && !setOnce.current) {\n      setOnce.current = true;\n      const firstFile = query.data.files[0].identifier;\n      setSelectedFile(query.data.files[0].identifier);\n      // prevent unnecessary http call\n      if (firstFile !== query.data.selectedFile) {\n        setParams({file: query.data.files[0].identifier});\n      }\n    }\n  }, [query.data, setParams, setOnce]);\n\n  return (\n    <Fragment>\n      <FileSelector\n        files={query.data?.files ?? null}\n        selectedFile={selectedFile}\n        onSelected={file => {\n          setSelectedFile(file.identifier);\n          setParams({file: file.identifier});\n        }}\n      />\n      <Button\n        variant=\"outline\"\n        color=\"danger\"\n        disabled={!selectedFile}\n        onClick={() =>\n          openDialog(ConfirmDeleteDialog, {identifier: selectedFile})\n        }\n      >\n        <Trans message=\"Delete\" />\n      </Button>\n      {selectedFile && (\n        <DataTableAddItemButton\n          elementType=\"a\"\n          download={\n            query.data?.files.find(f => f.identifier === selectedFile)?.name\n          }\n          href={`api/v1/logs/error/${selectedFile}/download`}\n          icon={<DownloadIcon />}\n        >\n          <Trans message=\"Download log\" />\n        </DataTableAddItemButton>\n      )}\n    </Fragment>\n  );\n}\n\ninterface FileSelectorProps {\n  files: ErrorLogFile[] | null;\n  selectedFile: string | null;\n  onSelected: (file: ErrorLogFile) => void;\n}\nfunction FileSelector({files, selectedFile, onSelected}: FileSelectorProps) {\n  // files have not loaded yet, show skeleton\n  if (!files) {\n    return <Skeleton variant=\"rect\" className=\"max-w-[210px]\" />;\n  }\n\n  // no error logs yet, hide select completely\n  if (!files.length) {\n    return null;\n  }\n\n  return (\n    <Select\n      selectionMode=\"single\"\n      selectedValue={selectedFile}\n      size=\"sm\"\n      minWidth=\"min-w-[210px]\"\n    >\n      {files?.map(file => (\n        <Item\n          key={file.identifier}\n          value={file.identifier}\n          onSelected={() => onSelected(file)}\n        >\n          {file.name} (<FormattedBytes bytes={file.size} />)\n        </Item>\n      ))}\n    </Select>\n  );\n}\n\ninterface ConfirmDeleteDialogProps {\n  identifier: string;\n}\nfunction ConfirmDeleteDialog({identifier}: ConfirmDeleteDialogProps) {\n  const deleteLog = useDeleteErrorLog();\n  return (\n    <ConfirmationDialog\n      title={<Trans message=\"Delete log file\" />}\n      body={<Trans message=\"Are you sure you want to delete this log file?\" />}\n      confirm={<Trans message=\"Delete\" />}\n      onConfirm={() =>\n        deleteLog.mutate({identifier}, {onSuccess: () => closeDialog()})\n      }\n      isLoading={deleteLog.isPending}\n      isDanger\n    />\n  );\n}\n","export default \"__VITE_ASSET__a71f56b4__\"","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {OutgoingEmailLogItem} from '@common/admin/logging/outgoing-email/outgoing-email-log-item';\n\ninterface Response extends BackendResponse {\n  logItem: OutgoingEmailLogItem;\n}\n\nexport function useOutgoingEmailLogItemWithMime(id: number) {\n  return useQuery({\n    queryKey: ['logs/outgoing-email', id],\n    queryFn: () => fetchLogItem(id),\n  });\n}\n\nfunction fetchLogItem(id: number) {\n  return apiClient.get<Response>(`logs/outgoing-email/${id}`).then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Button} from '@ui/buttons/button';\nimport {useOutgoingEmailLogItemWithMime} from '@common/admin/logging/outgoing-email/use-outgoing-email-log-item-with-mime';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {downloadFileFromUrl} from '@ui/utils/files/download-file-from-url';\nimport {useSettings} from '@ui/settings/use-settings';\n\ninterface Props {\n  logItemId: number;\n}\nexport function OutgoingEmailLogEntryDialog({logItemId}: Props) {\n  const {data} = useOutgoingEmailLogItemWithMime(logItemId);\n  const {base_url} = useSettings();\n  return (\n    <Dialog size=\"fullscreen\">\n      <DialogHeader\n        showDivider\n        padding=\"px-24 py-10\"\n        actions={\n          <Button\n            variant=\"outline\"\n            size=\"xs\"\n            disabled={!data}\n            type=\"button\"\n            onClick={\n              data\n                ? () =>\n                    downloadFileFromUrl(\n                      `${base_url}/api/v1/logs/outgoing-email/${logItemId}/download`,\n                    )\n                : undefined\n            }\n          >\n            <Trans message=\"Download\" />\n          </Button>\n        }\n      >\n        <Trans message=\"Email preview\" />\n      </DialogHeader>\n      <DialogBody>\n        {data ? (\n          <iframe\n            srcDoc={data.logItem.parsed_message!.body.html}\n            className=\"h-max w-full border-none\"\n            onLoad={e => {\n              const iframe = e.target as HTMLIFrameElement;\n              iframe.style.height =\n                iframe.contentWindow!.document.body.scrollHeight + 'px';\n            }}\n          />\n        ) : (\n          <div className=\"flex min-h-200 items-center justify-center\">\n            <ProgressCircle isIndeterminate />\n          </div>\n        )}\n      </DialogBody>\n    </Dialog>\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport React, {ReactNode} from 'react';\nimport {useRerunScheduledCommand} from '@common/admin/logging/schedule/use-rerurun-scheduled-command';\nimport {OutgoingEmailLogItem} from '@common/admin/logging/outgoing-email/outgoing-email-log-item';\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\nimport {Chip, ChipProps} from '@ui/forms/input-field/chip-field/chip';\nimport {VisibilityIcon} from '@ui/icons/material/Visibility';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {OutgoingEmailLogEntryDialog} from '@common/admin/logging/outgoing-email/outgoing-email-log-entry-dialog';\n\nexport const OutgoingEmailLogDatatableColumns: ColumnConfig<OutgoingEmailLogItem>[] =\n  [\n    {\n      key: 'message_id',\n      allowsSorting: true,\n      visibleInMode: 'all',\n      width: 'flex-3 min-w-200',\n      header: () => <Trans message=\"Subject\" />,\n      body: item => (\n        <NameWithAvatar label={item.subject} description={item.message_id} />\n      ),\n    },\n    {\n      key: 'status',\n      allowsSorting: true,\n      header: () => <Trans message=\"Status\" />,\n      body: item => {\n        switch (item.status) {\n          case 'sent':\n            return (\n              <StatusChip color=\"positive\">\n                <Trans message=\"Sent\" />\n              </StatusChip>\n            );\n          case 'not-sent':\n            return (\n              <StatusChip color={undefined}>\n                <Trans message=\"Not sent\" />\n              </StatusChip>\n            );\n          case 'error':\n            return (\n              <StatusChip color=\"danger\">\n                <Trans message=\"Error\" />\n              </StatusChip>\n            );\n        }\n      },\n    },\n    {\n      key: 'from',\n      allowsSorting: true,\n      header: () => <Trans message=\"From\" />,\n      body: item => item.from,\n    },\n    {\n      key: 'to',\n      allowsSorting: true,\n      header: () => <Trans message=\"To\" />,\n      body: item => item.to,\n    },\n    {\n      key: 'created_at',\n      allowsSorting: true,\n      header: () => <Trans message=\"Date\" />,\n      body: item => <FormattedRelativeTime date={item.created_at} />,\n    },\n    {\n      key: 'actions',\n      header: () => <Trans message=\"Actions\" />,\n      hideHeader: true,\n      align: 'end',\n      width: 'w-42 flex-shrink-0',\n      visibleInMode: 'all',\n      body: item => <PreviewEmailButton item={item} />,\n    },\n  ];\n\ninterface PreviewButtonProps {\n  item: OutgoingEmailLogItem;\n}\nfunction PreviewEmailButton({item}: PreviewButtonProps) {\n  const rerunCommand = useRerunScheduledCommand();\n  return (\n    <DialogTrigger type=\"modal\">\n      <Tooltip label={<Trans message=\"Preview\" />}>\n        <IconButton\n          size=\"md\"\n          className=\"text-muted\"\n          disabled={rerunCommand.isPending}\n          onClick={() => {\n            rerunCommand.mutate({id: item.id});\n          }}\n        >\n          <VisibilityIcon />\n        </IconButton>\n      </Tooltip>\n      <OutgoingEmailLogEntryDialog logItemId={item.id} />\n    </DialogTrigger>\n  );\n}\n\ninterface StatusChipProps {\n  color: ChipProps['color'];\n  children: ReactNode;\n}\nfunction StatusChip({color, children}: StatusChipProps) {\n  return (\n    <Chip color={color} size=\"xs\" className=\"w-max min-w-50 text-center\">\n      {children}\n    </Chip>\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {createdAtFilter} from '@common/datatable/filters/timestamp-filters';\n\nexport const OutgoingEmailLogDatatableFilters: BackendFilter[] = [\n  {\n    key: 'status',\n    label: message('Status'),\n    description: message('Status of the outgoing email'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('Not sent'),\n          value: 'no-sent',\n        },\n        {\n          key: '02',\n          label: message('Sent'),\n          value: 'sent',\n        },\n        {\n          key: '03',\n          label: message('Error'),\n          value: 'error',\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date email send was attempted'),\n  }),\n];\n","import {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport React from 'react';\nimport openedImage from '@common/admin/logging/outgoing-email/opened.svg';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {DownloadIcon} from '@ui/icons/material/Download';\nimport {OutgoingEmailLogDatatableColumns} from '@common/admin/logging/outgoing-email/outgoing-email-log-datatable-columns';\nimport {OutgoingEmailLogDatatableFilters} from '@common/admin/logging/outgoing-email/outgoing-email-log-datatable-filters';\n\nexport function OutgoingEmailLogDatatable() {\n  return (\n    <DataTablePage\n      padding=\"pt-12 md:pt-24\"\n      endpoint=\"logs/outgoing-email\"\n      title={<Trans message=\"Outgoing email\" />}\n      columns={OutgoingEmailLogDatatableColumns}\n      filters={OutgoingEmailLogDatatableFilters}\n      actions={<Actions />}\n      enableSelection={false}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={openedImage}\n          title={<Trans message=\"No outgoing emails have been logged yet\" />}\n          filteringTitle={<Trans message=\"No matching emails\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <DataTableAddItemButton\n      elementType=\"a\"\n      href=\"api/v1/logs/outgoing-email/download\"\n      download\n      icon={<DownloadIcon />}\n    >\n      <Trans message=\"Download log\" />\n    </DataTableAddItemButton>\n  );\n}\n","import React, {useState} from 'react';\nimport {useNormalizedModels} from '@common/ui/normalized-model/use-normalized-models';\nimport {CrupdateResourceSection} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\nimport {Item} from '@ui/forms/listbox/item';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {useAuth} from '@common/auth/use-auth';\n\ninterface Props {\n  endpoint?: string;\n}\nexport function UserRoleSection({endpoint}: Props) {\n  const [query, setQuery] = useState('');\n  const {data} = useNormalizedModels(endpoint ?? 'normalized-models/role', {\n    query,\n  });\n  const {hasPermission} = useAuth();\n  return (\n    <CrupdateResourceSection label={<Trans message=\"Roles\" />}>\n      <FormChipField\n        className=\"mb-30\"\n        name=\"roles\"\n        suggestions={data?.results}\n        inputValue={query}\n        onInputValueChange={setQuery}\n        alwaysShowAvatar\n        readOnly={!hasPermission('users.update')}\n      >\n        {suggestion => (\n          <Item\n            key={suggestion.id}\n            value={suggestion.id}\n            startIcon={<Avatar label={suggestion.name} />}\n          >\n            {suggestion.name}\n          </Item>\n        )}\n      </FormChipField>\n    </CrupdateResourceSection>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {User} from '@ui/types/user';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\nexport interface UpdateUserPayload\n  extends Omit<Partial<User>, 'email_verified_at'> {\n  email_verified_at?: boolean;\n}\n\nexport function useUpdateUser(\n  userId: number,\n  form: UseFormReturn<UpdateUserPayload>,\n) {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: UpdateUserPayload) => updateUser(userId, payload),\n    onSuccess: (response, props) => {\n      toast(message('User updated'));\n      queryClient.invalidateQueries({queryKey: ['users']});\n      navigate('/admin/users');\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction updateUser(\n  userId: number,\n  payload: UpdateUserPayload,\n): Promise<Response> {\n  if (payload.roles) {\n    payload.roles = payload.roles.map(r => r.id) as any;\n  }\n  return apiClient.put(`users/${userId}`, payload).then(r => r.data);\n}\n","import {UseFormReturn} from 'react-hook-form';\nimport {ReactNode} from 'react';\nimport {Form} from '@ui/forms/form';\nimport {DirtyFormSaveDrawer} from '@common/admin/crupdate-resource-layout';\nimport {\n  UpdateUserPayload,\n  useUpdateUser,\n} from '@common/admin/users/requests/user-update-user';\nimport {useOutletContext} from 'react-router-dom';\nimport {User} from '@ui/types/user';\n\ninterface Props {\n  form: UseFormReturn<Partial<UpdateUserPayload>>;\n  children: ReactNode;\n}\nexport function UpdateUserForm({form, children}: Props) {\n  const user = useOutletContext() as User;\n  const updateUser = useUpdateUser(user.id, form);\n  return (\n    <Form\n      onSubmit={values => {\n        updateUser.mutate(values);\n      }}\n      onBeforeSubmit={() => form.clearErrors()}\n      form={form}\n    >\n      {children}\n      <DirtyFormSaveDrawer isLoading={updateUser.isPending} />\n    </Form>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport React from 'react';\nimport {UserRoleSection} from '@common/admin/users/update-user-page/user-role-section';\nimport {useForm} from 'react-hook-form';\nimport {Link, useOutletContext} from 'react-router-dom';\nimport {User} from '@ui/types/user';\nimport {UpdateUserPayload} from '@common/admin/users/requests/user-update-user';\nimport {UpdateUserForm} from '@common/admin/users/update-user-page/update-user-form';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {useResendVerificationEmail} from '@common/auth/requests/use-resend-verification-email';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {Button} from '@ui/buttons/button';\nimport {FormFileSizeField} from '@common/uploads/components/file-size-field';\nimport {LinkStyle} from '@ui/buttons/external-link';\n\nexport function UpdateUserDetailsTab() {\n  const user = useOutletContext() as User;\n  const form = useForm<UpdateUserPayload>({\n    defaultValues: {\n      first_name: user.first_name ?? '',\n      last_name: user.last_name ?? '',\n      roles: user.roles,\n      email_verified_at: !!user.email_verified_at,\n      available_space: user.available_space,\n    },\n  });\n\n  return (\n    <UpdateUserForm form={form}>\n      <div className=\"mb-24 flex gap-44\">\n        <FormTextField\n          name=\"first_name\"\n          label={<Trans message=\"First name\" />}\n          className=\"flex-auto\"\n        />\n        <FormTextField\n          name=\"last_name\"\n          label={<Trans message=\"Last name\" />}\n          className=\"flex-auto\"\n        />\n      </div>\n      <FormFileSizeField\n        className=\"mb-24\"\n        name=\"available_space\"\n        label={<Trans message=\"Allowed storage space\" />}\n        description={\n          <Trans\n            values={{\n              a: parts => (\n                <Link\n                  className={LinkStyle}\n                  target=\"_blank\"\n                  to=\"/admin/settings/uploading\"\n                >\n                  {parts}\n                </Link>\n              ),\n            }}\n            message=\"Total storage space all user uploads are allowed to take up. If left empty, this value will be inherited from any roles or subscriptions user has, or from 'Available space' setting in <a>Uploading</a> settings page.\"\n          />\n        }\n      />\n      <EmailConfirmSection user={user} />\n      <UserRoleSection />\n    </UpdateUserForm>\n  );\n}\n\ninterface EmailConfirmSectionProps {\n  user: User;\n}\nfunction EmailConfirmSection({user}: EmailConfirmSectionProps) {\n  const resendConfirmationEmail = useResendVerificationEmail();\n  const {require_email_confirmation} = useSettings();\n  return (\n    <div className=\"mb-44\">\n      <FormSwitch\n        className=\"mb-30\"\n        disabled={!require_email_confirmation}\n        name=\"email_verified_at\"\n        description={\n          <Trans message=\"Whether email address has been confirmed. User will not be able to login until address is confirmed, unless confirmation is disabled from settings page.\" />\n        }\n      >\n        <Trans message=\"Email confirmed\" />\n      </FormSwitch>\n      <Button\n        size=\"xs\"\n        variant=\"outline\"\n        color=\"primary\"\n        disabled={\n          !require_email_confirmation ||\n          resendConfirmationEmail.isPending ||\n          !!user.email_verified_at\n        }\n        onClick={() => {\n          resendConfirmationEmail.mutate({email: user.email});\n        }}\n      >\n        <Trans message=\"Resend email\" />\n      </Button>\n    </div>\n  );\n}\n","import {CrupdateResourceSection} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormPermissionSelector} from '@common/auth/ui/permission-selector';\nimport React from 'react';\nimport {UserRoleSection} from '@common/admin/users/update-user-page/user-role-section';\nimport {useOutletContext} from 'react-router-dom';\nimport {useForm} from 'react-hook-form';\nimport {User} from '@ui/types/user';\nimport {UpdateUserPayload} from '@common/admin/users/requests/user-update-user';\nimport {UpdateUserForm} from '@common/admin/users/update-user-page/update-user-form';\n\nexport function UpdateUserPermissionsTab() {\n  const user = useOutletContext() as User;\n  const form = useForm<UpdateUserPayload>({\n    defaultValues: {\n      permissions: user.permissions,\n      roles: user.roles,\n    },\n  });\n  return (\n    <UpdateUserForm form={form}>\n      <UserRoleSection />\n      <CrupdateResourceSection label={<Trans message=\"Permissions\" />}>\n        <FormPermissionSelector name=\"permissions\" />\n      </CrupdateResourceSection>\n    </UpdateUserForm>\n  );\n}\n","import {useOutletContext} from 'react-router-dom';\nimport {LocalizationPanel} from '@common/auth/ui/account-settings/localization-panel';\nimport {User} from '@ui/types/user';\n\nexport function UpdateUserDatetimeTab() {\n  const user = useOutletContext() as User;\n  return <LocalizationPanel user={user} />;\n}\n","import {useOutletContext} from 'react-router-dom';\nimport {User} from '@ui/types/user';\nimport {AccessTokenPanel} from '@common/auth/ui/account-settings/access-token-panel/access-token-panel';\n\nexport function UpdateUserApiTab() {\n  const user = useOutletContext() as User;\n  return <AccessTokenPanel user={user} />;\n}\n","import {ChangePasswordPanel} from '@common/auth/ui/account-settings/change-password-panel/change-password-panel';\nimport {useOutletContext} from 'react-router-dom';\nimport {TwoFactorPanel} from '@common/auth/ui/account-settings/two-factor-panel';\nimport {SessionsPanel} from '@common/auth/ui/account-settings/sessions-panel/sessions-panel';\nimport {SocialLoginPanel} from '@common/auth/ui/account-settings/social-login-panel';\nimport {User} from '@ui/types/user';\n\nexport function UpdateUserSecurityTab() {\n  const user = useOutletContext() as User;\n  return (\n    <div>\n      <ChangePasswordPanel />\n      <TwoFactorPanel user={user} />\n      <SocialLoginPanel user={user} />\n      <SessionsPanel />\n    </div>\n  );\n}\n","import {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\nimport {useForm, UseFormReturn, useWatch} from 'react-hook-form';\nimport {CssTheme} from '@ui/themes/css-theme';\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\nimport {Outlet, useLocation, useParams} from 'react-router-dom';\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\nimport {Trans} from '@ui/i18n/trans';\nimport {ReactElement} from 'react';\n\nexport interface ThemeEditorFormValue {\n  appearance: {\n    themes: CssTheme[];\n  };\n}\n\nexport function ThemeEditorForm() {\n  const values = useAppearanceEditorValues();\n  const form = useForm<ThemeEditorFormValue>({\n    defaultValues: {\n      appearance: {\n        themes: values.appearance.themes.filter(t => t.type === 'site'),\n      },\n    },\n  });\n\n  return (\n    <AppearanceEditorForm\n      form={form}\n      breadcrumb={<ThemeEditorBreadcrumb form={form} />}\n      blockerAllowedPath=\"themes\"\n    >\n      <Outlet />\n    </AppearanceEditorForm>\n  );\n}\n\ninterface ThemeEditorBreadcrumbProps {\n  form: UseFormReturn<any>;\n  children?: ReactElement;\n}\nexport function ThemeEditorBreadcrumb({\n  form,\n  children,\n}: ThemeEditorBreadcrumbProps) {\n  const {pathname} = useLocation();\n  const lastSegment = pathname.split('/').pop();\n  const {themeIndex} = useParams();\n  const allThemes = useWatch({\n    control: form.control,\n    name: 'appearance.themes',\n  });\n  const activeTheme = themeIndex ? allThemes[themeIndex as any] : null;\n\n  return (\n    <AppearanceEditorBreadcrumb>\n      {children}\n      <Trans message=\"Themes\" />\n      {activeTheme && <span>{activeTheme.name}</span>}\n      {lastSegment === 'font' && <Trans message=\"Font\" />}\n      {lastSegment === 'radius' && <Trans message=\"Rounding\" />}\n    </AppearanceEditorBreadcrumb>\n  );\n}\n","import {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\nimport {useForm, UseFormReturn, useWatch} from 'react-hook-form';\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\nimport {Outlet, useParams} from 'react-router-dom';\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\nimport {Trans} from '@ui/i18n/trans';\nimport {MenuConfig} from '@common/menus/menu-config';\n\nexport interface MenuEditorFormValue {\n  settings: {\n    menus: MenuConfig[];\n  };\n}\n\nexport function MenuEditorForm() {\n  const values = useAppearanceEditorValues();\n  const form = useForm<MenuEditorFormValue>({\n    defaultValues: {\n      settings: {\n        menus: values.settings.menus,\n      },\n    },\n  });\n\n  return (\n    <AppearanceEditorForm\n      form={form}\n      breadcrumb={<MenuEditorBreadcrumb form={form} />}\n      blockerAllowedPath=\"menus\"\n    >\n      <Outlet />\n    </AppearanceEditorForm>\n  );\n}\n\ninterface MenuEditorBreadcrumbProps {\n  form: UseFormReturn<MenuEditorFormValue>;\n}\nfunction MenuEditorBreadcrumb({form}: MenuEditorBreadcrumbProps) {\n  const {menuIndex, menuItemIndex} = useParams();\n  const allMenus = useWatch({control: form.control, name: 'settings.menus'});\n\n  const activeMenu = menuIndex ? allMenus[menuIndex as any] : null;\n  const activeItem =\n    menuItemIndex && activeMenu ? activeMenu.items[menuItemIndex as any] : null;\n\n  return (\n    <AppearanceEditorBreadcrumb>\n      <Trans message=\"Menus\" />\n      {activeMenu && <span>{activeMenu.name}</span>}\n      {activeItem && <span>{activeItem.label}</span>}\n    </AppearanceEditorBreadcrumb>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {CreateLyricPayload} from '@app/admin/lyrics-datatable-page/requests/use-create-lyric';\nimport {Lyric} from '@app/web-player/tracks/lyrics/lyric';\n\ninterface Response extends BackendResponse {\n  lyric: Lyric;\n}\n\nexport interface UpdateLyricPayload extends CreateLyricPayload {\n  id: number;\n}\n\nexport function useUpdateLyric(form: UseFormReturn<UpdateLyricPayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: UpdateLyricPayload) => updateGenre(props),\n    onSuccess: () => {\n      toast(trans(message('Lyric updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('lyrics'),\n      });\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('tracks'),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateGenre({id, ...payload}: UpdateLyricPayload): Promise<Response> {\n  return apiClient.put(`lyrics/${id}`, payload).then(r => r.data);\n}\n","import {UseFormReturn} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {UpdateLyricPayload} from '@app/admin/lyrics-datatable-page/requests/use-update-lyric';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {FormNormalizedModelField} from '@common/ui/normalized-model/normalized-model-field';\n\ninterface Props {\n  onSubmit: (values: UpdateLyricPayload) => void;\n  formId: string;\n  form: UseFormReturn<UpdateLyricPayload>;\n}\nexport function CrupdateLyricForm({form, onSubmit, formId}: Props) {\n  return (\n    <Form id={formId} form={form} onSubmit={values => onSubmit(values)}>\n      <FormNormalizedModelField\n        className=\"mb-24\"\n        label={<Trans message=\"Track\" />}\n        name=\"track_id\"\n        endpoint=\"normalized-models/track\"\n        queryParams={{\n          with: 'artists,album',\n        }}\n      />\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"is_synced\"\n        description={<Trans message=\"Whether lyric contains timestmaps\" />}\n      >\n        <Trans message=\"Synced\" />\n      </FormSwitch>\n      {form.watch('is_synced') ? (\n        <FormTextField\n          name=\"duration\"\n          type=\"number\"\n          label={<Trans message=\"duration\" />}\n          className=\"mb-24\"\n          required\n          description={\n            <Trans message=\"Lyric duration in seconds. If this duration does not match the duration of track that is being played, lyric sync will be disabled and plain lyrics will be shown instead.\" />\n          }\n        />\n      ) : null}\n      <FormTextField\n        name=\"text\"\n        label={<Trans message=\"Text\" />}\n        inputElementType=\"textarea\"\n        rows={30}\n      />\n    </Form>\n  );\n}\n","import {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {useForm} from 'react-hook-form';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {\n  UpdateLyricPayload,\n  useUpdateLyric,\n} from '@app/admin/lyrics-datatable-page/requests/use-update-lyric';\nimport {Lyric} from '@app/web-player/tracks/lyrics/lyric';\nimport {CrupdateLyricForm} from '@app/admin/lyrics-datatable-page/crupdate-lyric-form';\n\ninterface Props {\n  lyric: Lyric;\n}\nexport function UpdateLyricDialog({lyric}: Props) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<UpdateLyricPayload>({\n    defaultValues: {\n      id: lyric.id,\n      track_id: lyric.track_id,\n      text: lyric.text,\n      is_synced: lyric.is_synced,\n      duration: lyric.duration,\n    },\n  });\n  const updateLyric = useUpdateLyric(form);\n\n  return (\n    <Dialog size=\"xl\">\n      <DialogHeader>\n        <Trans message=\"Update lyric\" />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateLyricForm\n          formId={formId}\n          form={form}\n          onSubmit={values => {\n            updateLyric.mutate(values, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={updateLyric.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Update\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Genre} from '@app/web-player/genres/genre';\n\ninterface Response extends BackendResponse {\n  genre: Genre;\n}\n\nexport interface CreateLyricPayload {\n  track_id: number;\n  text: string;\n  is_synced: boolean;\n  duration: number | null;\n}\n\nexport function useCreateLyric(form: UseFormReturn<CreateLyricPayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: CreateLyricPayload) => createNewTag(props),\n    onSuccess: () => {\n      toast(trans(message('Lyric created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('lyrics'),\n      });\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('tracks'),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createNewTag(payload: CreateLyricPayload) {\n  return apiClient.post<Response>('lyrics', payload).then(r => r.data);\n}\n","import {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {useForm} from 'react-hook-form';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {CrupdateLyricForm} from '@app/admin/lyrics-datatable-page/crupdate-lyric-form';\nimport {\n  CreateLyricPayload,\n  useCreateLyric,\n} from '@app/admin/lyrics-datatable-page/requests/use-create-lyric';\n\ninterface Props {\n  trackId?: number;\n}\nexport function CreateLyricDialog({trackId}: Props) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<CreateLyricPayload>({\n    defaultValues: {\n      track_id: trackId,\n      is_synced: false,\n    },\n  });\n  const createLyric = useCreateLyric(form);\n\n  return (\n    <Dialog size=\"xl\">\n      <DialogHeader>\n        <Trans message=\"Create new lyric\" />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateLyricForm\n          formId={formId}\n          form={form as any}\n          onSubmit={values => {\n            createLyric.mutate(values, {\n              onSuccess: () => close(),\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={createLyric.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ClosedCaptionIcon = createSvgIcon(\n  <path d=\"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H5V6h14v12zM7 15h3c.55 0 1-.45 1-1v-1H9.5v.5h-2v-3h2v.5H11v-1c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm7 0h3c.55 0 1-.45 1-1v-1h-1.5v.5h-2v-3h2v.5H18v-1c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1z\" />\n, 'ClosedCaptionOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const BarChartIcon = createSvgIcon(\n  <path d=\"M5 9.2h3V19H5V9.2zM10.6 5h2.8v14h-2.8V5zm5.6 8H19v6h-2.8v-6z\" />\n, 'BarChartOutlined');\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {Link} from 'react-router-dom';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport React from 'react';\nimport {Track} from '@app/web-player/tracks/track';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {FormattedDuration} from '@ui/i18n/formatted-duration';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {TrackLink} from '@app/web-player/tracks/track-link';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {UpdateLyricDialog} from '@app/admin/lyrics-datatable-page/update-lyric-dialog';\nimport {CreateLyricDialog} from '@app/admin/lyrics-datatable-page/create-lyric-dialog';\nimport {ClosedCaptionIcon} from '@ui/icons/material/ClosedCaption';\nimport {BarChartIcon} from '@ui/icons/material/BarChart';\n\nexport const TracksDatatableColumns: ColumnConfig<Track>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Track\" />,\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    body: track => (\n      <div className=\"flex items-center gap-12\">\n        <TrackImage\n          track={track}\n          className=\"flex-shrink-0\"\n          size=\"w-34 h-34 rounded\"\n        />\n        <TrackLink track={track} target=\"_blank\" />\n      </div>\n    ),\n  },\n  {\n    key: 'artist',\n    allowsSorting: false,\n    header: () => <Trans message=\"Artist\" />,\n    width: 'flex-2',\n    body: track => {\n      if (!track.artists?.[0]) return null;\n      return (\n        <div className=\"flex items-center gap-12\">\n          <SmallArtistImage\n            artist={track.artists[0]}\n            className=\"flex-shrink-0 rounded\"\n            size=\"w-34 h-34\"\n          />\n          <ArtistLink artist={track.artists[0]} />\n        </div>\n      );\n    },\n  },\n  {\n    key: 'duration',\n    minWidth: 'min-w-76',\n    allowsSorting: true,\n    header: () => <Trans message=\"Duration\" />,\n    body: track =>\n      track.duration ? <FormattedDuration ms={track.duration} /> : null,\n  },\n  {\n    key: 'plays',\n    allowsSorting: true,\n    minWidth: 'min-w-70',\n    header: () => <Trans message=\"Plays\" />,\n    body: track =>\n      track.plays ? <FormattedNumber value={track.plays} /> : null,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: track =>\n      track.updated_at ? <FormattedDate date={track.updated_at} /> : '',\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    visibleInMode: 'all',\n    width: 'w-128 flex-shrink-0',\n    body: track => (\n      <div className=\"text-muted\">\n        <IconButton size=\"md\" elementType={Link} to={`${track.id}/insights`}>\n          <BarChartIcon />\n        </IconButton>\n        <DialogTrigger type=\"modal\">\n          <IconButton size=\"md\">\n            <ClosedCaptionIcon />\n          </IconButton>\n          {track.lyric ? (\n            <UpdateLyricDialog lyric={track.lyric} />\n          ) : (\n            <CreateLyricDialog trackId={track.id} />\n          )}\n        </DialogTrigger>\n        <IconButton size=\"md\" elementType={Link} to={`${track.id}/edit`}>\n          <EditIcon />\n        </IconButton>\n      </div>\n    ),\n  },\n];\n","import {\n  ALL_NUMBER_OPERATORS,\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {ARTIST_MODEL} from '@app/web-player/artists/artist';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const TracksDatatableFilters: BackendFilter[] = [\n  {\n    key: 'image',\n    label: message('Artwork'),\n    description: message('Whether track has any artwork uploaded'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '02',\n      options: [\n        {\n          key: '01',\n          label: message('Has artwork'),\n          value: false,\n        },\n        {\n          key: '02',\n          label: message('Does not have artwork'),\n          value: true,\n        },\n      ],\n    },\n  },\n  {\n    key: 'album_id',\n    label: message('Album'),\n    description: message('Whether track is part of an album'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('Part of an album'),\n          value: {operator: FilterOperator.ne, value: null},\n        },\n        {\n          key: '02',\n          label: message('Single'),\n          value: {operator: FilterOperator.eq, value: null},\n        },\n      ],\n    },\n  },\n  {\n    key: 'plays',\n    label: message('Plays count'),\n    description: message('Number of times this track was played'),\n    defaultOperator: FilterOperator.gte,\n    operators: ALL_NUMBER_OPERATORS,\n    control: {\n      type: FilterControlType.Input,\n      inputType: 'number',\n      defaultValue: 100,\n    },\n  },\n  createdAtFilter({\n    description: message('Date artist was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date artist was last updated'),\n  }),\n  {\n    defaultOperator: FilterOperator.has,\n    key: 'artists',\n    label: message('Artist'),\n    description: message('Artist this track belongs to'),\n    control: {\n      type: FilterControlType.SelectModel,\n      model: ARTIST_MODEL,\n    },\n  },\n];\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {Track, TRACK_MODEL} from '@app/web-player/tracks/track';\n\ninterface Response extends BackendResponse {\n  track: Track;\n}\n\nexport interface ImportTrackPayload {\n  spotifyId: string;\n  importLyrics: boolean;\n}\n\nexport function useImportTrack() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: ImportTrackPayload) => importTrack(props),\n    onSuccess: () => {\n      toast(trans(message('Track imported')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('tracks'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction importTrack(payload: ImportTrackPayload): Promise<Response> {\n  return apiClient\n    .post('import-media/single-item', {\n      modelType: TRACK_MODEL,\n      spotifyId: payload.spotifyId,\n      importLyrics: payload.importLyrics,\n    })\n    .then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {\n  ImportTrackPayload,\n  useImportTrack,\n} from '@app/admin/tracks-datatable-page/requests/use-import-track';\n\nexport function ImportTrackDialog() {\n  const form = useForm<ImportTrackPayload>({\n    defaultValues: {\n      importLyrics: true,\n    },\n  });\n  const {formId, close} = useDialogContext();\n  const importTrack = useImportTrack();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Import track\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            importTrack.mutate(values, {\n              onSuccess: response => {\n                close(response.track);\n              },\n            });\n          }}\n        >\n          <FormTextField\n            autoFocus\n            required\n            name=\"spotifyId\"\n            minLength={22}\n            maxLength={22}\n            label={<Trans message=\"Spotify ID\" />}\n            className=\"mb-24\"\n            description={\n              <Trans message=\"This will also import all artists that collaborated on this track and album this track belongs to.\" />\n            }\n          />\n          <FormSwitch name=\"importLyrics\" className=\"mb-24\">\n            <Trans message=\"Import lyrics\" />\n          </FormSwitch>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={importTrack.isPending}\n        >\n          <Trans message=\"Import\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PublishIcon = createSvgIcon(\n  <path d=\"M5 4h14v2H5zm0 10h4v6h6v-6h4l-7-7-7 7zm8-2v6h-2v-6H9.83L12 9.83 14.17 12H13z\" />\n, 'PublishOutlined');\n","import React, {Fragment} from 'react';\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport marketing from './music.svg';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {Link} from 'react-router-dom';\nimport {TracksDatatableColumns} from '@app/admin/tracks-datatable-page/tracks-datatable-columns';\nimport {TracksDatatableFilters} from '@app/admin/tracks-datatable-page/tracks-datatable-filters';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {ImportTrackDialog} from '@app/admin/tracks-datatable-page/import-track-dialog';\nimport {PublishIcon} from '@ui/icons/material/Publish';\n\nexport function TracksDatatablePage() {\n  return (\n    <DataTablePage\n      endpoint=\"tracks\"\n      title={<Trans message=\"Tracks\" />}\n      filters={TracksDatatableFilters}\n      columns={TracksDatatableColumns}\n      queryParams={{\n        with: 'artists,lyric',\n      }}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={marketing}\n          title={<Trans message=\"No tracks have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching tracks\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  const {spotify_is_setup} = useSettings();\n  const navigate = useNavigate();\n  return (\n    <Fragment>\n      {spotify_is_setup && (\n        <DialogTrigger\n          type=\"modal\"\n          onClose={album => {\n            if (album) {\n              navigate(`/admin/tracks/${album.id}/edit`);\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Import by spotify ID\" />}>\n            <IconButton\n              variant=\"outline\"\n              color=\"primary\"\n              className=\"flex-shrink-0\"\n              size=\"sm\"\n            >\n              <PublishIcon />\n            </IconButton>\n          </Tooltip>\n          <ImportTrackDialog />\n        </DialogTrigger>\n      )}\n      <DataTableAddItemButton elementType={Link} to=\"new\">\n        <Trans message=\"Add new track\" />\n      </DataTableAddItemButton>\n    </Fragment>\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {Link} from 'react-router-dom';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport React from 'react';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {BarChartIcon} from '@ui/icons/material/BarChart';\n\nexport const AlbumsDatatableColumns: ColumnConfig<Album>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Album\" />,\n    width: 'flex-3',\n    visibleInMode: 'all',\n    body: album => (\n      <div className=\"flex items-center gap-12\">\n        <AlbumImage\n          album={album}\n          className=\"flex-shrink-0\"\n          size=\"w-34 h-34 rounded\"\n        />\n        <AlbumLink album={album} target=\"_blank\" />\n      </div>\n    ),\n  },\n  {\n    key: 'artist',\n    allowsSorting: false,\n    header: () => <Trans message=\"Artist\" />,\n    width: 'flex-2',\n    body: album => {\n      if (!album.artists?.[0]) return null;\n      return (\n        <div className=\"flex items-center gap-12\">\n          <SmallArtistImage\n            artist={album.artists[0]}\n            className=\"flex-shrink-0 rounded\"\n            size=\"w-34 h-34\"\n          />\n          <ArtistLink artist={album.artists[0]} />\n        </div>\n      );\n    },\n  },\n  {\n    key: 'release_date',\n    allowsSorting: true,\n    minWidth: 'min-w-100',\n    header: () => <Trans message=\"Release date\" />,\n    body: album =>\n      album.release_date ? <FormattedDate date={album.release_date} /> : null,\n  },\n  {\n    key: 'track_count',\n    allowsSorting: false,\n    minWidth: 'min-w-70',\n    header: () => <Trans message=\"Track count\" />,\n    body: album =>\n      album.tracks_count ? (\n        <FormattedNumber value={album.tracks_count} />\n      ) : null,\n  },\n  {\n    key: 'plays',\n    allowsSorting: true,\n    header: () => <Trans message=\"Plays\" />,\n    minWidth: 'min-w-70',\n    body: album =>\n      album.plays ? <FormattedNumber value={album.plays} /> : null,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: album =>\n      album.updated_at ? <FormattedDate date={album.updated_at} /> : '',\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    visibleInMode: 'all',\n    align: 'end',\n    width: 'w-84 flex-shrink-0',\n    body: album => (\n      <div className=\"text-muted\">\n        <IconButton size=\"md\" elementType={Link} to={`${album.id}/insights`}>\n          <BarChartIcon />\n        </IconButton>\n        <IconButton size=\"md\" elementType={Link} to={`${album.id}/edit`}>\n          <EditIcon />\n        </IconButton>\n      </div>\n    ),\n  },\n];\n","import {\n  ALL_NUMBER_OPERATORS,\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\nimport {ARTIST_MODEL} from '@app/web-player/artists/artist';\n\nexport const AlbumsDatatableFilters: BackendFilter[] = [\n  {\n    key: 'image',\n    label: message('Artwork'),\n    description: message('Whether album has any artwork uploaded'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '02',\n      options: [\n        {\n          key: '01',\n          label: message('Has artwork'),\n          value: false,\n        },\n        {\n          key: '02',\n          label: message('Does not have artwork'),\n          value: true,\n        },\n      ],\n    },\n  },\n  {\n    key: 'plays',\n    label: message('Plays count'),\n    description: message('Number of times this album was played'),\n    defaultOperator: FilterOperator.gte,\n    operators: ALL_NUMBER_OPERATORS,\n    control: {\n      type: FilterControlType.Input,\n      inputType: 'number',\n      defaultValue: 100,\n    },\n  },\n  createdAtFilter({\n    description: message('Date album was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date album was last updated'),\n  }),\n  {\n    defaultOperator: FilterOperator.has,\n    key: 'artists',\n    label: message('Artist'),\n    description: message('Artist this album belongs to'),\n    control: {\n      type: FilterControlType.SelectModel,\n      model: ARTIST_MODEL,\n    },\n  },\n];\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {Album, ALBUM_MODEL} from '@app/web-player/albums/album';\n\ninterface Response extends BackendResponse {\n  album: Album;\n}\n\nexport interface ImportAlbumPayload {\n  spotifyId: string;\n}\n\nexport function useImportAlbum() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: ImportAlbumPayload) => importAlbum(props),\n    onSuccess: () => {\n      toast(trans(message('Album imported')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('albums'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction importAlbum(payload: ImportAlbumPayload): Promise<Response> {\n  return apiClient\n    .post('import-media/single-item', {\n      modelType: ALBUM_MODEL,\n      spotifyId: payload.spotifyId,\n    })\n    .then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {\n  ImportAlbumPayload,\n  useImportAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-import-album';\n\nexport function ImportAlbumDialog() {\n  const form = useForm<ImportAlbumPayload>();\n  const {formId, close} = useDialogContext();\n  const importAlbum = useImportAlbum();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Import album\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            importAlbum.mutate(values, {\n              onSuccess: response => {\n                close(response.album);\n              },\n            });\n          }}\n        >\n          <FormTextField\n            autoFocus\n            required\n            name=\"spotifyId\"\n            minLength={22}\n            maxLength={22}\n            label={<Trans message=\"Spotify ID\" />}\n            description={\n              <Trans message=\"This will also import all artists that collaborated on this album and any tracks that it contains.\" />\n            }\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={importAlbum.isPending}\n        >\n          <Trans message=\"Import\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport musicImage from './../tracks-datatable-page/music.svg';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {Link} from 'react-router-dom';\nimport {AlbumsDatatableColumns} from '@app/admin/albums-datatable-page/albums-datatable-columns';\nimport {AlbumsDatatableFilters} from '@app/admin/albums-datatable-page/albums-datatable-filters';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {ImportAlbumDialog} from '@app/admin/albums-datatable-page/import-album-dialog';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {PublishIcon} from '@ui/icons/material/Publish';\n\nexport function AlbumsDatatablePage() {\n  return (\n    <DataTablePage\n      endpoint=\"albums\"\n      title={<Trans message=\"Albums\" />}\n      filters={AlbumsDatatableFilters}\n      columns={AlbumsDatatableColumns}\n      queryParams={{\n        withCount: 'tracks',\n      }}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={musicImage}\n          title={<Trans message=\"No albums have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching albums\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  const {spotify_is_setup} = useSettings();\n  const navigate = useNavigate();\n  return (\n    <Fragment>\n      {spotify_is_setup && (\n        <DialogTrigger\n          type=\"modal\"\n          onClose={album => {\n            if (album) {\n              navigate(`/admin/albums/${album.id}/edit`);\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Import by spotify ID\" />}>\n            <IconButton\n              variant=\"outline\"\n              color=\"primary\"\n              className=\"flex-shrink-0\"\n              size=\"sm\"\n            >\n              <PublishIcon />\n            </IconButton>\n          </Tooltip>\n          <ImportAlbumDialog />\n        </DialogTrigger>\n      )}\n      <DataTableAddItemButton elementType={Link} to=\"new\">\n        <Trans message=\"Add new album\" />\n      </DataTableAddItemButton>\n    </Fragment>\n  );\n}\n","export default \"__VITE_ASSET__dea3e5d8__\"","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {USER_MODEL} from '@ui/types/user';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const BackstageRequestDatatableFilters: BackendFilter[] = [\n  {\n    key: 'type',\n    label: message('Type'),\n    description: message('Type of the request'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: 'become-artist',\n      options: [\n        {\n          key: 'become-artist',\n          label: message('Become artist'),\n          value: 'become-artist',\n        },\n        {\n          key: 'verify-artist',\n          label: message('Verify artist'),\n          value: 'verify-artist',\n        },\n        {\n          key: 'claim-artist',\n          label: message('Claim artist'),\n          value: 'claim-artist',\n        },\n      ],\n    },\n  },\n  {\n    key: 'status',\n    label: message('Status'),\n    description: message('Status of the request'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: 'pending',\n      options: [\n        {\n          key: 'pending',\n          label: message('Pending'),\n          value: 'pending',\n        },\n        {\n          key: 'approved',\n          label: message('Approved'),\n          value: 'approved',\n        },\n        {\n          key: 'denied',\n          label: message('Denied'),\n          value: 'denied',\n        },\n      ],\n    },\n  },\n  {\n    key: 'user_id',\n    label: message('Requester'),\n    description: message('User that submitted the request'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.SelectModel,\n      model: USER_MODEL,\n    },\n  },\n  createdAtFilter({\n    description: message('Date request was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date request was last updated'),\n  }),\n];\n","import {BackstageRequest} from '@app/web-player/backstage/backstage-request';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\n\ninterface Props {\n  type: BackstageRequest['type'];\n}\nexport function BackstageRequestType({type}: Props) {\n  return (\n    <span className=\"capitalize\">\n      {<Trans message={type.replace('-', ' ')} />}\n    </span>\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {Link} from 'react-router-dom';\nimport React from 'react';\nimport {BackstageRequest} from '@app/web-player/backstage/backstage-request';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\nimport clsx from 'clsx';\nimport {Button} from '@ui/buttons/button';\nimport {BackstageRequestType} from '@app/admin/backstage-requests-datatable-page/backstage-request-type';\n\nexport const BackstageRequestsDatatableColumns: ColumnConfig<BackstageRequest>[] =\n  [\n    {\n      key: 'type',\n      allowsSorting: true,\n      minWidth: 'min-w-100',\n      header: () => <Trans message=\"Type\" />,\n      body: request => <BackstageRequestType type={request.type} />,\n    },\n    {\n      key: 'status',\n      allowsSorting: true,\n      visibleInMode: 'all',\n      minWidth: 'min-w-100',\n      header: () => <Trans message=\"Status\" />,\n      body: request => (\n        <div className=\"flex items-center gap-8\">\n          <div\n            className={clsx(\n              'h-10 w-10 flex-shrink-0 rounded-full',\n              request.status === 'approved' && 'bg-positive',\n              request.status === 'pending' && 'bg-warning',\n              request.status === 'denied' && 'bg-danger',\n            )}\n          />\n          <div className=\"capitalize\">\n            <Trans message={request.status} />\n          </div>\n        </div>\n      ),\n    },\n    {\n      key: 'user',\n      allowsSorting: true,\n      visibleInMode: 'all',\n      width: 'flex-3',\n      header: () => <Trans message=\"User\" />,\n      body: request =>\n        request.user ? (\n          <NameWithAvatar\n            image={request.user.image}\n            label={request.user.name}\n            description={request.user.email}\n          />\n        ) : null,\n    },\n    {\n      key: 'artist',\n      allowsSorting: true,\n      width: 'flex-3',\n      header: () => <Trans message=\"Artist\" />,\n      body: request => {\n        if (!request.artist) return request.artist_name;\n        return (\n          <div className=\"flex w-max items-center gap-12\">\n            <SmallArtistImage\n              artist={request.artist}\n              className=\"flex-shrink-0 rounded\"\n              size=\"w-34 h-34\"\n            />\n            <ArtistLink artist={request.artist} />\n          </div>\n        );\n      },\n    },\n    {\n      key: 'created_at',\n      allowsSorting: true,\n      width: 'w-100',\n      header: () => <Trans message=\"Requested at\" />,\n      body: request =>\n        request.created_at ? <FormattedDate date={request.created_at} /> : '',\n    },\n    {\n      key: 'actions',\n      header: () => <Trans message=\"Actions\" />,\n      hideHeader: true,\n      align: 'end',\n      visibleInMode: 'all',\n      width: 'w-60 flex-shrink-0',\n      body: request => (\n        <Button\n          elementType={Link}\n          to={`${request.id}`}\n          color=\"primary\"\n          variant=\"outline\"\n          size=\"xs\"\n        >\n          <Trans message=\"View\" />\n        </Button>\n      ),\n    },\n  ];\n","import React from 'react';\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport acceptRequest from './accept-request.svg';\nimport {BackstageRequestDatatableFilters} from '@app/admin/backstage-requests-datatable-page/backstage-request-datatable-filters';\nimport {BackstageRequestsDatatableColumns} from '@app/admin/backstage-requests-datatable-page/backstage-requests-datatable-columns';\n\nexport function BackstageRequestsDatatablePage() {\n  return (\n    <DataTablePage\n      endpoint=\"backstage-request\"\n      title={<Trans message=\"Backstage requests\" />}\n      filters={BackstageRequestDatatableFilters}\n      columns={BackstageRequestsDatatableColumns}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={acceptRequest}\n          title={<Trans message=\"No requests have been submitted yet\" />}\n          filteringTitle={<Trans message=\"No matching requests\" />}\n        />\n      }\n    />\n  );\n}\n","import {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {message} from '@ui/i18n/message';\nimport {useNavigate} from 'react-router-dom';\n\ninterface Response extends BackendResponse {\n  //\n}\n\nexport interface ApproveBackstageRequestPayload {\n  markArtistAsVerified?: boolean;\n  notes?: string;\n  requestId: number;\n}\n\nexport function useApproveBackstageRequest() {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: ApproveBackstageRequestPayload) =>\n      approveRequest(payload),\n    onSuccess: () => {\n      toast(message('Request approved'));\n      navigate('/admin/backstage-requests');\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('backstage-request'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction approveRequest({\n  requestId,\n  ...payload\n}: ApproveBackstageRequestPayload) {\n  return apiClient\n    .post<Response>(`backstage-request/${requestId}/approve`, payload)\n    .then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useForm} from 'react-hook-form';\nimport {\n  ApproveBackstageRequestPayload,\n  useApproveBackstageRequest,\n} from '@app/admin/backstage-requests-datatable-page/requests/use-approve-backstage-request';\nimport {Form} from '@ui/forms/form';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Button} from '@ui/buttons/button';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {BackstageRequest} from '@app/web-player/backstage/backstage-request';\n\ninterface Props {\n  request: BackstageRequest;\n}\nexport function ApproveBackstageRequestDialog({request}: Props) {\n  const {trans} = useTrans();\n  const {close, formId} = useDialogContext();\n  const form = useForm<Omit<ApproveBackstageRequestPayload, 'requestId'>>();\n  const approveRequest = useApproveBackstageRequest();\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Approve request\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            approveRequest.mutate({\n              ...values,\n              requestId: request.id,\n            });\n          }}\n        >\n          <div className=\"mb-14\">\n            <Trans message=\"Are you sure you want to approve this request?\" />\n          </div>\n          <div className=\"font-bold\">\n            <Trans\n              message=\"This will create a new artist profile and assign it to ':user', as well as give them artist role on the site.\"\n              values={{user: request.user.name}}\n            />\n          </div>\n          <FormSwitch name=\"markArtistAsVerified\" className=\"my-24\">\n            <Trans message=\"Also mark this artist as verified\" />\n          </FormSwitch>\n          <FormTextField\n            label={<Trans message=\"Notes (optional)\" />}\n            name=\"notes\"\n            placeholder={trans(\n              message(\n                'Add any extra notes that should be sent to use via notification email',\n              ),\n            )}\n            inputElementType=\"textarea\"\n            rows={6}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={approveRequest.isPending}\n        >\n          <Trans message=\"Approve\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {message} from '@ui/i18n/message';\nimport {useNavigate} from 'react-router-dom';\n\ninterface Response extends BackendResponse {\n  //\n}\n\ninterface Payload {\n  requestId: number;\n}\n\nexport function useDeleteBackstageRequest() {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: ({requestId}: Payload) => deleteRequest(requestId),\n    onSuccess: () => {\n      toast(message('Request deleted'));\n      navigate('/admin/backstage-requests');\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('backstage-request'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction deleteRequest(requestId: number) {\n  return apiClient\n    .delete<Response>(`backstage-request/${requestId}`)\n    .then(r => r.data);\n}\n","import {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {message} from '@ui/i18n/message';\nimport {useNavigate} from 'react-router-dom';\n\ninterface Response extends BackendResponse {\n  //\n}\n\nexport interface DenyBackstageRequestPayload {\n  notes?: string;\n  requestId: number;\n}\n\nexport function useDenyBackstageRequest() {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: DenyBackstageRequestPayload) => denyRequest(payload),\n    onSuccess: () => {\n      toast(message('Request denied'));\n      navigate('/admin/backstage-requests');\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('backstage-request'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction denyRequest({requestId, ...payload}: DenyBackstageRequestPayload) {\n  return apiClient\n    .post<Response>(`backstage-request/${requestId}/deny`, payload)\n    .then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Button} from '@ui/buttons/button';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {BackstageRequest} from '@app/web-player/backstage/backstage-request';\nimport {\n  DenyBackstageRequestPayload,\n  useDenyBackstageRequest,\n} from '@app/admin/backstage-requests-datatable-page/requests/use-deny-backstage-request';\n\ninterface Props {\n  request: BackstageRequest;\n}\nexport function DenyBackstageRequestDialog({request}: Props) {\n  const {trans} = useTrans();\n  const {close, formId} = useDialogContext();\n  const form = useForm<Omit<DenyBackstageRequestPayload, 'requestId'>>();\n  const denyRequest = useDenyBackstageRequest();\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Deny request\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={values => {\n            denyRequest.mutate({\n              ...values,\n              requestId: request.id,\n            });\n          }}\n        >\n          <div className=\"mb-14\">\n            <Trans message=\"Are you sure you want to deny this request?\" />\n          </div>\n          <div className=\"mb-24 font-bold\">\n            <Trans\n              message=\"This will mark request as denied and notify ':user'.\"\n              values={{user: request.user.name}}\n            />\n          </div>\n          <FormTextField\n            label={<Trans message=\"Notes (optional)\" />}\n            name=\"notes\"\n            placeholder={trans(\n              message(\n                'Add any extra notes that should be sent to use via notification email',\n              ),\n            )}\n            inputElementType=\"textarea\"\n            rows={6}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"danger\"\n          type=\"submit\"\n          form={formId}\n          disabled={denyRequest.isPending}\n        >\n          <Trans message=\"Deny\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {Button} from '@ui/buttons/button';\nimport {Link} from 'react-router-dom';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ApproveBackstageRequestDialog} from '@app/admin/backstage-requests-datatable-page/viewer/approve-backstage-request-dialog';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport React, {Fragment} from 'react';\nimport {useDeleteBackstageRequest} from '@app/admin/backstage-requests-datatable-page/requests/use-delete-backstage-request';\nimport {BackstageRequest} from '@app/web-player/backstage/backstage-request';\nimport {DenyBackstageRequestDialog} from '@app/admin/backstage-requests-datatable-page/viewer/deny-backstage-request-dialog';\n\ninterface Props {\n  request: BackstageRequest;\n}\nexport function BackstageRequestViewerHeader({request}: Props) {\n  return (\n    <div className=\"flex items-center gap-14\">\n      <Button\n        elementType={Link}\n        to=\"..\"\n        relative=\"path\"\n        variant=\"outline\"\n        className=\"mr-auto hidden md:inline-flex\"\n      >\n        <Trans message=\"Go back\" />\n      </Button>\n      {request.status === 'pending' && (\n        <Fragment>\n          <DialogTrigger type=\"modal\">\n            <Button variant=\"flat\" color=\"primary\">\n              <Trans message=\"Approve\" />\n            </Button>\n            <ApproveBackstageRequestDialog request={request} />\n          </DialogTrigger>\n          <DialogTrigger type=\"modal\">\n            <Button variant=\"outline\">\n              <Trans message=\"Deny\" />\n            </Button>\n            <DenyBackstageRequestDialog request={request} />\n          </DialogTrigger>\n        </Fragment>\n      )}\n      <DeleteButton request={request} />\n    </div>\n  );\n}\n\nfunction DeleteButton({request}: Props) {\n  const deleteRequest = useDeleteBackstageRequest();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          deleteRequest.mutate({requestId: request.id});\n        }\n      }}\n    >\n      <Button disabled={deleteRequest.isPending} variant=\"outline\">\n        <Trans message=\"Delete\" />\n      </Button>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Delete request\" />}\n        body={<Trans message=\"Are you sure you want to delete this request?\" />}\n        confirm={<Trans message=\"Delete\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import React, {cloneElement, ReactElement, ReactNode} from 'react';\nimport {useBackstageRequest} from '@app/web-player/backstage/requests/use-backstage-request';\nimport {Trans} from '@ui/i18n/trans';\nimport {BackstageRequest} from '@app/web-player/backstage/backstage-request';\nimport {BackstageRequestType} from '@app/admin/backstage-requests-datatable-page/backstage-request-type';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\nimport {SvgIconProps} from '@ui/icons/svg-icon';\nimport {TwitterIcon} from '@ui/icons/social/twitter';\nimport {FacebookIcon} from '@ui/icons/social/facebook';\nimport {DocumentScannerIcon} from '@ui/icons/material/DocumentScanner';\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\nimport {BackstageRequestViewerHeader} from '@app/admin/backstage-requests-datatable-page/viewer/backstage-request-viewer-header';\nimport {LinkStyle} from '@ui/buttons/external-link';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ImageZoomDialog} from '@ui/overlays/dialog/image-zoom-dialog';\nimport {Button} from '@ui/buttons/button';\nimport {PageStatus} from '@common/http/page-status';\nimport {UserAvatar} from '@common/auth/user-avatar';\n\nexport function ViewBackstageRequestPage() {\n  const query = useBackstageRequest();\n\n  if (query.data) {\n    return (\n      <div className=\"container mx-auto p-24\">\n        <BackstageRequestViewerHeader request={query.data.request} />\n        <RequestDetails request={query.data.request} />\n        <VerificationList request={query.data.request} />\n      </div>\n    );\n  }\n\n  return <PageStatus query={query} />;\n}\n\ninterface RequestDetailsProps {\n  request: BackstageRequest;\n}\nfunction RequestDetails({request}: RequestDetailsProps) {\n  return (\n    <div className=\"mt-60\">\n      <div className=\"mb-14 mt-24 text-2xl\">\n        <Trans message=\"Request details\" />\n      </div>\n      <div>\n        <Detail\n          name={<Trans message=\"Image\" />}\n          value={\n            request.data.image ? (\n              <img\n                src={request.data.image || request.artist?.image_small}\n                className=\"rounded\"\n                alt=\"\"\n              />\n            ) : null\n          }\n        />\n        <Detail\n          name={<Trans message=\"Type\" />}\n          value={<BackstageRequestType type={request.type} />}\n        />\n        <Detail\n          name={<Trans message=\"Requester\" />}\n          value={\n            <div className=\"flex items-center gap-8\">\n              <UserAvatar user={request.user} />\n              {request.user.name}\n            </div>\n          }\n        />\n        {request.artist && (\n          <Detail\n            name={<Trans message=\"Artist\" />}\n            value={\n              <div className=\"flex w-max items-center gap-12\">\n                <SmallArtistImage\n                  artist={request.artist}\n                  className=\"flex-shrink-0 rounded\"\n                  size=\"w-32 h-32\"\n                />\n                <ArtistLink artist={request.artist} />\n              </div>\n            }\n          />\n        )}\n        <Detail\n          name={<Trans message=\"Requested artist name\" />}\n          value={<BackstageRequestType type={request.artist_name} />}\n        />\n        <Detail\n          name={<Trans message=\"Requested role\" />}\n          value={\n            request.data.role ? (\n              <Trans message={request.data.role} />\n            ) : undefined\n          }\n        />\n        <Detail\n          name={<Trans message=\"First name\" />}\n          value={request.data.first_name}\n        />\n        <Detail\n          name={<Trans message=\"Last name\" />}\n          value={request.data.last_name}\n        />\n        <Detail\n          name={<Trans message=\"Company\" />}\n          value={request.data.company}\n        />\n      </div>\n    </div>\n  );\n}\n\ninterface DetailProps {\n  name: ReactNode;\n  value: ReactNode;\n}\nfunction Detail({name, value}: DetailProps) {\n  return (\n    <div className=\"items-center gap-24 border-b py-12 text-sm md:flex md:py-18\">\n      <div className=\"mb-8 min-w-200 md:mb-0\">{name}</div>\n      <div>{value}</div>\n    </div>\n  );\n}\n\nfunction VerificationList({request}: RequestDetailsProps) {\n  return (\n    <div className=\"mt-60\">\n      <div className=\"mb-14 mt-24 text-2xl\">\n        <Trans message=\"Attached verification\" />\n      </div>\n      <div>\n        {request.data.passport_scan_entry && (\n          <VerificationListItem\n            icon={<DocumentScannerIcon />}\n            title={<Trans message=\"Passport scan\" />}\n            description={`${\n              request.data.passport_scan_entry.name\n            } (${prettyBytes(request.data.passport_scan_entry.file_size)})`}\n            action={\n              <DialogTrigger type=\"modal\">\n                <Button variant=\"outline\" color=\"primary\" size=\"xs\">\n                  <Trans message=\"View\" />\n                </Button>\n                <ImageZoomDialog image={request.data.passport_scan_entry.url} />\n              </DialogTrigger>\n            }\n          />\n        )}\n        <SocialServiceVerification request={request} service=\"twitter\" />\n        <SocialServiceVerification request={request} service=\"facebook\" />\n      </div>\n    </div>\n  );\n}\n\ninterface SocialServiceVerificationProps {\n  service: 'twitter' | 'facebook';\n  request: BackstageRequest;\n}\nfunction SocialServiceVerification({\n  service,\n  request,\n}: SocialServiceVerificationProps) {\n  const account = request.user.social_profiles.find(\n    s => s.service_name === service,\n  );\n  if (!account) return null;\n\n  return (\n    <VerificationListItem\n      icon={\n        service === 'twitter' ? (\n          <TwitterIcon className=\"text-twitter\" />\n        ) : (\n          <FacebookIcon className=\"text-facebook\" />\n        )\n      }\n      title={\n        <span className=\"capitalize\">\n          <Trans message=\":service account\" values={{service}} />\n        </span>\n      }\n      action={\n        <Button\n          elementType=\"a\"\n          className={LinkStyle}\n          variant=\"outline\"\n          color=\"primary\"\n          size=\"xs\"\n          href={\n            service === 'twitter'\n              ? `https://twitter.com/${account.username}`\n              : `https://facebook.com/${account.username}`\n          }\n          target=\"_blank\"\n        >\n          <Trans message=\"View\" />\n        </Button>\n      }\n      description={account.username}\n    />\n  );\n}\n\ninterface AttachmentLayoutProps {\n  icon: ReactElement<SvgIconProps>;\n  title: ReactNode;\n  description: ReactNode;\n  action: ReactNode;\n}\nfunction VerificationListItem({\n  icon,\n  title,\n  description,\n  action,\n}: AttachmentLayoutProps) {\n  return (\n    <div className=\"mb-8 flex items-center gap-8 rounded border px-14 py-8\">\n      <div className=\"flex-shrink-0 text-muted\">\n        {cloneElement(icon, {size: 'lg'})}\n      </div>\n      <div className=\"mr-auto overflow-hidden whitespace-nowrap\">\n        <div className=\"overflow-hidden overflow-ellipsis text-xs text-muted\">\n          {title}\n        </div>\n        <div className=\"overflow-hidden overflow-ellipsis text-sm\">\n          {description}\n        </div>\n      </div>\n      {action}\n    </div>\n  );\n}\n","import {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\nimport {message} from '@ui/i18n/message';\n\nexport const GenreDatatablePageFilters = [\n  createdAtFilter({\n    description: message('Date genre was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date genre was last updated'),\n  }),\n];\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Genre} from '@app/web-player/genres/genre';\nimport {CreateGenrePayload} from '@app/admin/genres-datatable-page/requests/use-create-genre';\n\ninterface Response extends BackendResponse {\n  genre: Genre;\n}\n\nexport interface UpdateGenrePayload extends CreateGenrePayload {\n  id: number;\n}\n\nexport function useUpdateGenre(form: UseFormReturn<UpdateGenrePayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: UpdateGenrePayload) => updateGenre(props),\n    onSuccess: () => {\n      toast(trans(message('Genre updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('genres'),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateGenre({id, ...payload}: UpdateGenrePayload): Promise<Response> {\n  return apiClient.put(`genres/${id}`, payload).then(r => r.data);\n}\n","import {UseFormReturn} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {Form} from '@ui/forms/form';\nimport {UpdateGenrePayload} from '@app/admin/genres-datatable-page/requests/use-update-genre';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\n\ninterface Props {\n  onSubmit: (values: UpdateGenrePayload) => void;\n  formId: string;\n  form: UseFormReturn<UpdateGenrePayload>;\n}\nexport function CrupdateGenreFrom({form, onSubmit, formId}: Props) {\n  return (\n    <Form id={formId} form={form} onSubmit={onSubmit}>\n      <FileUploadProvider>\n        <FormImageSelector\n          name=\"image\"\n          diskPrefix=\"genre_media\"\n          variant=\"input\"\n          label={<Trans message=\"Image\" />}\n          className=\"mb-24\"\n        />\n      </FileUploadProvider>\n      <FormTextField\n        name=\"name\"\n        label={<Trans message=\"Name\" />}\n        description={<Trans message=\"Unique genre identifier.\" />}\n        className=\"mb-24\"\n        required\n        autoFocus\n      />\n      <FormTextField\n        name=\"display_name\"\n        label={<Trans message=\"Display name\" />}\n        description={<Trans message=\"User friendly genre name.\" />}\n      />\n    </Form>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {Genre, GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  //\n}\n\ninterface Payload {\n  genre: Genre;\n}\n\nexport function useImportGenreArtists() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: Payload) => importArtists(props),\n    onSuccess: () => {\n      toast(trans(message('Artists imported')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('genres'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction importArtists(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('import-media/single-item', {\n      modelType: GENRE_MODEL,\n      genreId: payload.genre.id,\n    })\n    .then(r => r.data);\n}\n","import {Genre} from '@app/web-player/genres/genre';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {useForm} from 'react-hook-form';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {\n  UpdateGenrePayload,\n  useUpdateGenre,\n} from '@app/admin/genres-datatable-page/requests/use-update-genre';\nimport {CrupdateGenreFrom} from '@app/admin/genres-datatable-page/crupdate-genre-form';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {useImportGenreArtists} from '@app/admin/genres-datatable-page/requests/use-import-genre-artists';\n\ninterface Props {\n  genre: Genre;\n}\nexport function UpdateGenreDialog({genre}: Props) {\n  const {spotify_is_setup} = useSettings();\n  const {close, formId} = useDialogContext();\n  const form = useForm<UpdateGenrePayload>({\n    defaultValues: {\n      id: genre.id,\n      name: genre.name,\n      display_name: genre.display_name,\n      image: genre.image,\n    },\n  });\n  const updateGenre = useUpdateGenre(form);\n  const importArtists = useImportGenreArtists();\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Update “:name“ genre\" values={{name: genre.name}} />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateGenreFrom\n          formId={formId}\n          form={form}\n          onSubmit={values => {\n            updateGenre.mutate(values, {\n              onSuccess: () => {\n                close();\n              },\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter\n        startAction={\n          spotify_is_setup && (\n            <Button\n              variant=\"outline\"\n              onClick={() =>\n                importArtists.mutate({genre}, {onSuccess: () => close()})\n              }\n              disabled={importArtists.isPending}\n            >\n              <Trans message=\"Import artists\" />\n            </Button>\n          )\n        }\n      >\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={updateGenre.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Genre} from '@app/web-player/genres/genre';\n\ninterface Response extends BackendResponse {\n  genre: Genre;\n}\n\nexport interface CreateGenrePayload {\n  name: string;\n  display_name: string;\n  image: string;\n}\n\nexport function useCreateGenre(form: UseFormReturn<CreateGenrePayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: CreateGenrePayload) => createNewTag(props),\n    onSuccess: () => {\n      toast(trans(message('Genre created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('genres'),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createNewTag(payload: CreateGenrePayload): Promise<Response> {\n  return apiClient.post('genres', payload).then(r => r.data);\n}\n","import {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {useForm} from 'react-hook-form';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {CrupdateGenreFrom} from '@app/admin/genres-datatable-page/crupdate-genre-form';\nimport {\n  CreateGenrePayload,\n  useCreateGenre,\n} from '@app/admin/genres-datatable-page/requests/use-create-genre';\n\nexport function CreateGenreDialog() {\n  const {close, formId} = useDialogContext();\n  const form = useForm<CreateGenrePayload>();\n  const createGenre = useCreateGenre(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create new genre\" />\n      </DialogHeader>\n      <DialogBody>\n        <CrupdateGenreFrom\n          formId={formId}\n          form={form as any}\n          onSubmit={values => {\n            createGenre.mutate(values, {\n              onSuccess: () => close(),\n            });\n          }}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          disabled={createGenre.isPending}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {Genre} from '@app/web-player/genres/genre';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\nimport React, {Fragment} from 'react';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {Trans} from '@ui/i18n/trans';\nimport {GenreDatatablePageFilters} from '@app/admin/genres-datatable-page/genre-datatable-page-filters';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {GenreLink} from '@app/web-player/genres/genre-link';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {UpdateGenreDialog} from '@app/admin/genres-datatable-page/update-genre-dialog';\nimport GenreImage from './../tracks-datatable-page/music.svg';\nimport {CreateGenreDialog} from '@app/admin/genres-datatable-page/create-genre-dialog';\n\nconst columnConfig: ColumnConfig<\n  Genre & {artists_count: number; updated_at: string}\n>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    header: () => <Trans message=\"Genre\" />,\n    body: genre => (\n      <NameWithAvatar image={genre.image} label={<GenreLink genre={genre} />} />\n    ),\n  },\n  {\n    key: 'display_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Display name\" />,\n    body: genre => genre.display_name || genre.name,\n  },\n  {\n    key: 'artists_count',\n    allowsSorting: true,\n    header: () => <Trans message=\"Number of artists\" />,\n    body: genre => genre.artists_count,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: genre => <FormattedDate date={genre.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    visibleInMode: 'all',\n    width: 'w-42 flex-shrink-0',\n    body: genre => {\n      return (\n        <DialogTrigger type=\"modal\">\n          <IconButton size=\"md\" className=\"text-muted\">\n            <EditIcon />\n          </IconButton>\n          <UpdateGenreDialog genre={genre} />\n        </DialogTrigger>\n      );\n    },\n  },\n];\n\nexport function GenresDatatablePage() {\n  return (\n    <DataTablePage\n      endpoint=\"genres\"\n      title={<Trans message=\"Genres\" />}\n      columns={columnConfig}\n      filters={GenreDatatablePageFilters}\n      queryParams={{\n        withCount: 'artists',\n      }}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={GenreImage}\n          title={<Trans message=\"No genres have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching genres\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <Fragment>\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new genre\" />\n        </DataTableAddItemButton>\n        <CreateGenreDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","export default \"__VITE_ASSET__ceea0447__\"","import {message} from '@ui/i18n/message';\nimport {\n  ALL_NUMBER_OPERATORS,\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const PlaylistDatatablePageFilters: BackendFilter[] = [\n  {\n    key: 'public',\n    label: message('Visibility'),\n    description: message('Whether playlist is publicly viewable'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {key: '01', label: message('Private'), value: false},\n        {key: '02', label: message('Public'), value: true},\n      ],\n    },\n  },\n  {\n    key: 'collaborative',\n    label: message('Collaborative'),\n    description: message('Whether playlist is marked as collaborative'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.BooleanToggle,\n      defaultValue: true,\n    },\n  },\n  {\n    key: 'plays',\n    label: message('Play count'),\n    description: message('Number of times this playlist was played'),\n    defaultOperator: FilterOperator.gte,\n    operators: ALL_NUMBER_OPERATORS,\n    control: {\n      type: FilterControlType.Input,\n      defaultValue: 100,\n      inputType: 'number',\n    },\n  },\n  {\n    key: 'views',\n    label: message('View count'),\n    description: message('Number of times this playlist page was viewed'),\n    defaultOperator: FilterOperator.gte,\n    operators: ALL_NUMBER_OPERATORS,\n    control: {\n      type: FilterControlType.Input,\n      inputType: 'number',\n      defaultValue: 100,\n    },\n  },\n  createdAtFilter({\n    description: message('Date playlist was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date playlist was last updated'),\n  }),\n];\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {Playlist, PLAYLIST_MODEL} from '@app/web-player/playlists/playlist';\n\ninterface Response extends BackendResponse {\n  playlist: Playlist;\n}\n\nexport interface ImportPlaylistPayload {\n  spotifyId: string;\n}\n\nexport function useImportPlaylist() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: ImportPlaylistPayload) => importArtists(props),\n    onSuccess: () => {\n      toast(trans(message('Playlist imported')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('playlists'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction importArtists(payload: ImportPlaylistPayload): Promise<Response> {\n  return apiClient\n    .post('import-media/single-item', {\n      modelType: PLAYLIST_MODEL,\n      spotifyId: payload.spotifyId,\n    })\n    .then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useForm} from 'react-hook-form';\nimport {\n  ImportPlaylistPayload,\n  useImportPlaylist,\n} from '@app/admin/playlist-datatable-page/requests/use-import-playlist';\nimport {Form} from '@ui/forms/form';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\n\nexport function ImportPlaylistDialog() {\n  const form = useForm<ImportPlaylistPayload>();\n  const {formId, close} = useDialogContext();\n  const importPlaylist = useImportPlaylist();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Import playlist\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            importPlaylist.mutate(values, {\n              onSuccess: response => {\n                close(response.playlist);\n              },\n            });\n          }}\n        >\n          <FormTextField\n            autoFocus\n            required\n            name=\"spotifyId\"\n            minLength={22}\n            maxLength={22}\n            label={<Trans message=\"Spotify ID\" />}\n            description={\n              <Trans message=\"Only public playlists can be imported.\" />\n            }\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={importPlaylist.isPending}\n        >\n          <Trans message=\"Import\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\nimport React, {Fragment} from 'react';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {Trans} from '@ui/i18n/trans';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {PlaylistLink} from '@app/web-player/playlists/playlist-link';\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\nimport playlistImage from '@app/admin/channels/playlist.svg';\nimport {CheckIcon} from '@ui/icons/material/Check';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {UpdatePlaylistDialog} from '@app/web-player/playlists/crupdate-dialog/update-playlist-dialog';\nimport {queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {CreatePlaylistDialog} from '@app/web-player/playlists/crupdate-dialog/create-playlist-dialog';\nimport {PlaylistDatatablePageFilters} from '@app/admin/playlist-datatable-page/playlist-datatable-page-filters';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {ImportPlaylistDialog} from '@app/admin/playlist-datatable-page/import-playlist-dialog';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {PublishIcon} from '@ui/icons/material/Publish';\n\nconst columnConfig: ColumnConfig<Playlist>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Playlist\" />,\n    body: playlist => (\n      <NameWithAvatar\n        image={playlist.image}\n        label={<PlaylistLink playlist={playlist} />}\n      />\n    ),\n  },\n  {\n    key: 'owner',\n    header: () => <Trans message=\"Owner\" />,\n    width: 'flex-2',\n    body: playlist =>\n      playlist.owner ? (\n        <NameWithAvatar\n          image={playlist.owner?.image}\n          label={<UserProfileLink user={playlist.owner} />}\n          description={playlist.owner.email}\n        />\n      ) : null,\n  },\n  {\n    key: 'public',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Public\" />,\n    body: entry =>\n      entry.public ? (\n        <CheckIcon className=\"text-positive icon-md\" />\n      ) : (\n        <CloseIcon className=\"text-danger icon-md\" />\n      ),\n  },\n  {\n    key: 'collaborative',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Collaborative\" />,\n    body: entry =>\n      entry.collaborative ? (\n        <CheckIcon className=\"text-positive icon-md\" />\n      ) : (\n        <CloseIcon className=\"text-danger icon-md\" />\n      ),\n  },\n  {\n    key: 'views',\n    maxWidth: 'max-w-100',\n    allowsSorting: true,\n    header: () => <Trans message=\"Views\" />,\n    body: playlist => <FormattedNumber value={playlist.views} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: playlist => <FormattedDate date={playlist.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    visibleInMode: 'all',\n    body: playlist => {\n      return (\n        <DialogTrigger\n          type=\"modal\"\n          onClose={updatedPlaylist => {\n            if (updatedPlaylist) {\n              invalidateQuery();\n            }\n          }}\n        >\n          <IconButton size=\"md\" className=\"text-muted\">\n            <EditIcon />\n          </IconButton>\n          <UpdatePlaylistDialog playlist={playlist} />\n        </DialogTrigger>\n      );\n    },\n  },\n];\n\nexport function PlaylistDatatablePage() {\n  return (\n    <DataTablePage\n      endpoint=\"playlists\"\n      title={<Trans message=\"Playlists\" />}\n      columns={columnConfig}\n      filters={PlaylistDatatablePageFilters}\n      queryParams={{\n        with: 'owner',\n      }}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={playlistImage}\n          title={<Trans message=\"No playlists have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching playlists\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  const {spotify_is_setup} = useSettings();\n  return (\n    <Fragment>\n      {spotify_is_setup && (\n        <DialogTrigger\n          type=\"modal\"\n          onClose={newPlaylist => {\n            if (newPlaylist) {\n              invalidateQuery();\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Import by spotify ID\" />}>\n            <IconButton\n              variant=\"outline\"\n              color=\"primary\"\n              className=\"flex-shrink-0\"\n              size=\"sm\"\n            >\n              <PublishIcon />\n            </IconButton>\n          </Tooltip>\n          <ImportPlaylistDialog />\n        </DialogTrigger>\n      )}\n      <DialogTrigger\n        type=\"modal\"\n        onClose={newPlaylist => {\n          if (newPlaylist) {\n            invalidateQuery();\n          }\n        }}\n      >\n        <DataTableAddItemButton>\n          <Trans message=\"Add new playlist\" />\n        </DataTableAddItemButton>\n        <CreatePlaylistDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n\nfunction invalidateQuery() {\n  queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('playlists')});\n}\n","export default \"__VITE_ASSET__7cfcdb6f__\"","import {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\nimport {message} from '@ui/i18n/message';\n\nexport const LyricDatatablePageFilters = [\n  createdAtFilter({\n    description: message('Date lyric was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date lyric was last updated'),\n  }),\n];\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\nimport React, {Fragment} from 'react';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {Trans} from '@ui/i18n/trans';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport lyricImage from './source-code.svg';\nimport {Lyric} from '@app/web-player/tracks/lyrics/lyric';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {TrackLink} from '@app/web-player/tracks/track-link';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {LyricDatatablePageFilters} from '@app/admin/lyrics-datatable-page/lyric-datatable-page-filters';\nimport {CreateLyricDialog} from '@app/admin/lyrics-datatable-page/create-lyric-dialog';\nimport {UpdateLyricDialog} from '@app/admin/lyrics-datatable-page/update-lyric-dialog';\n\nconst columnConfig: ColumnConfig<Lyric>[] = [\n  {\n    key: 'track_id',\n    allowsSorting: true,\n    header: () => <Trans message=\"Track\" />,\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    body: lyric =>\n      lyric.track ? (\n        <div className=\"flex items-center gap-12\">\n          <TrackImage\n            track={lyric.track}\n            className=\"flex-shrink-0 rounded\"\n            size=\"w-34 h-34\"\n          />\n          <TrackLink track={lyric.track} target=\"_blank\" />\n        </div>\n      ) : null,\n  },\n  {\n    key: 'album',\n    width: 'flex-2',\n    header: () => <Trans message=\"Album\" />,\n    body: lyric =>\n      lyric.track?.album ? <AlbumLink album={lyric.track.album} /> : null,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: lyric => <FormattedDate date={lyric.updated_at} />,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    visibleInMode: 'all',\n    width: 'w-42 flex-shrink-0',\n    body: lyric => {\n      return (\n        <DialogTrigger type=\"modal\">\n          <IconButton size=\"md\" className=\"text-muted\">\n            <EditIcon />\n          </IconButton>\n          <UpdateLyricDialog lyric={lyric} />\n        </DialogTrigger>\n      );\n    },\n  },\n];\n\nexport function LyricsDatatablePage() {\n  return (\n    <DataTablePage\n      endpoint=\"lyrics\"\n      title={<Trans message=\"Lyrics\" />}\n      columns={columnConfig}\n      filters={LyricDatatablePageFilters}\n      queryParams={{\n        with: 'track.album.artists',\n      }}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={lyricImage}\n          title={<Trans message=\"No lyrics have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching lyrics\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <Fragment>\n      <DialogTrigger type=\"modal\">\n        <DataTableAddItemButton>\n          <Trans message=\"Add new lyric\" />\n        </DataTableAddItemButton>\n        <CreateLyricDialog />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {Link} from 'react-router-dom';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport React from 'react';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {BarChartIcon} from '@ui/icons/material/BarChart';\n\nexport const ArtistDatatableColumns: ColumnConfig<Artist>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Artist\" />,\n    width: 'flex-3',\n    visibleInMode: 'all',\n    body: artist => (\n      <div className=\"flex w-max items-center gap-12\">\n        <SmallArtistImage\n          artist={artist}\n          className=\"flex-shrink-0\"\n          size=\"w-34 h-34 rounded\"\n        />\n        <ArtistLink artist={artist} target=\"_blank\" />\n      </div>\n    ),\n  },\n  {\n    key: 'albums_count',\n    allowsSorting: true,\n    header: () => <Trans message=\"Album count\" />,\n    body: artist =>\n      artist.albums_count ? (\n        <FormattedNumber value={artist.albums_count} />\n      ) : null,\n  },\n  {\n    key: 'plays',\n    allowsSorting: true,\n    header: () => <Trans message=\"Total plays\" />,\n    body: artist =>\n      artist.plays ? <FormattedNumber value={artist.plays} /> : null,\n  },\n  {\n    key: 'views',\n    allowsSorting: true,\n    header: () => <Trans message=\"Page views\" />,\n    body: artist =>\n      artist.views ? <FormattedNumber value={artist.views} /> : null,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: artist =>\n      artist.updated_at ? <FormattedDate date={artist.updated_at} /> : '',\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    visibleInMode: 'all',\n    align: 'end',\n    width: 'w-84 flex-shrink-0',\n    body: artist => (\n      <div className=\"text-muted\">\n        <IconButton size=\"md\" elementType={Link} to={`${artist.id}/insights`}>\n          <BarChartIcon />\n        </IconButton>\n        <IconButton size=\"md\" elementType={Link} to={`${artist.id}/edit`}>\n          <EditIcon />\n        </IconButton>\n      </div>\n    ),\n  },\n];\n","import {\n  ALL_NUMBER_OPERATORS,\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const ArtistDatatableFilters: BackendFilter[] = [\n  {\n    key: 'verified',\n    label: message('Status'),\n    description: message('Whether artist is verified'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('Verified'),\n          value: true,\n        },\n        {\n          key: '02',\n          label: message('Not verified'),\n          value: false,\n        },\n      ],\n    },\n  },\n  {\n    key: 'plays',\n    label: message('Plays count'),\n    description: message('Number of times artist tracks have been played'),\n    defaultOperator: FilterOperator.gte,\n    operators: ALL_NUMBER_OPERATORS,\n    control: {\n      type: FilterControlType.Input,\n      inputType: 'number',\n      defaultValue: 100,\n    },\n  },\n  {\n    key: 'views',\n    label: message('Views count'),\n    description: message('Number of times artist page have been viewed'),\n    defaultOperator: FilterOperator.gte,\n    operators: ALL_NUMBER_OPERATORS,\n    control: {\n      type: FilterControlType.Input,\n      inputType: 'number',\n      defaultValue: 100,\n    },\n  },\n  createdAtFilter({\n    description: message('Date artist was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date artist was last updated'),\n  }),\n];\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {Artist, ARTIST_MODEL} from '@app/web-player/artists/artist';\n\ninterface Response extends BackendResponse {\n  artist: Artist;\n}\n\nexport interface ImportArtistPayload {\n  spotifyId: string;\n  importSimilarArtists: boolean;\n  importAlbums: boolean;\n}\n\nexport function useImportArtist() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (props: ImportArtistPayload) => importArtists(props),\n    onSuccess: () => {\n      toast(trans(message('Artist imported')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('artists'),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction importArtists(payload: ImportArtistPayload): Promise<Response> {\n  return apiClient\n    .post('import-media/single-item', {\n      modelType: ARTIST_MODEL,\n      spotifyId: payload.spotifyId,\n      importSimilarArtists: payload.importSimilarArtists,\n      importAlbums: payload.importAlbums,\n    })\n    .then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {\n  ImportArtistPayload,\n  useImportArtist,\n} from '@app/admin/artist-datatable-page/requests/use-import-artist';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\n\nexport function ImportArtistDialog() {\n  const form = useForm<ImportArtistPayload>({\n    defaultValues: {\n      importAlbums: true,\n      importSimilarArtists: true,\n    },\n  });\n  const {formId, close} = useDialogContext();\n  const importArtist = useImportArtist();\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Import artist\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            importArtist.mutate(values, {\n              onSuccess: response => {\n                close(response.artist);\n              },\n            });\n          }}\n        >\n          <FormTextField\n            autoFocus\n            required\n            name=\"spotifyId\"\n            minLength={22}\n            maxLength={22}\n            label={<Trans message=\"Spotify ID\" />}\n            className=\"mb-24\"\n          />\n          <FormSwitch name=\"importAlbums\" className=\"mb-24\">\n            <Trans message=\"Import albums\" />\n          </FormSwitch>\n          <FormSwitch name=\"importSimilarArtists\">\n            <Trans message=\"Import similar artists\" />\n          </FormSwitch>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={importArtist.isPending}\n        >\n          <Trans message=\"Import\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {Trans} from '@ui/i18n/trans';\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport musicImage from './../tracks-datatable-page/music.svg';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {Link} from 'react-router-dom';\nimport {ArtistDatatableColumns} from '@app/admin/artist-datatable-page/artist-datatable-columns';\nimport {ArtistDatatableFilters} from '@app/admin/artist-datatable-page/artist-datatable-filters';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {ImportArtistDialog} from '@app/admin/artist-datatable-page/import-artist-dialog';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {PublishIcon} from '@ui/icons/material/Publish';\n\nexport function ArtistDatatablePage() {\n  return (\n    <DataTablePage\n      endpoint=\"artists\"\n      title={<Trans message=\"Artists\" />}\n      filters={ArtistDatatableFilters}\n      columns={ArtistDatatableColumns}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={musicImage}\n          title={<Trans message=\"No artists have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching artists\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  const {spotify_is_setup} = useSettings();\n  const navigate = useNavigate();\n  return (\n    <Fragment>\n      {spotify_is_setup && (\n        <DialogTrigger\n          type=\"modal\"\n          onClose={artist => {\n            if (artist) {\n              navigate(`/admin/artists/${artist.id}/edit`);\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Import by spotify ID\" />}>\n            <IconButton\n              variant=\"outline\"\n              color=\"primary\"\n              className=\"flex-shrink-0\"\n              size=\"sm\"\n            >\n              <PublishIcon />\n            </IconButton>\n          </Tooltip>\n          <ImportArtistDialog />\n        </DialogTrigger>\n      )}\n      <DataTableAddItemButton elementType={Link} to=\"new\">\n        <Trans message=\"Add new artist\" />\n      </DataTableAddItemButton>\n    </Fragment>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Artist} from '@app/web-player/artists/artist';\n\nconst endpoint = 'artists';\n\ninterface Response extends BackendResponse {\n  artist: Artist;\n}\n\nexport interface CreateArtistPayload {\n  name?: string;\n  image_small?: string;\n  verified?: boolean;\n  spotify_id?: string;\n  genres?: Artist['genres'];\n  links?: Artist['links'];\n  profile?: Artist['profile'];\n  profile_images?: Artist['profile_images'];\n}\n\nexport function useCreateArtist(form: UseFormReturn<CreateArtistPayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: CreateArtistPayload) => createAlbum(payload),\n    onSuccess: () => {\n      toast(trans(message('Artist created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createAlbum(payload: CreateArtistPayload) {\n  return apiClient.post<Response>(endpoint, payload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {\n  CreateArtistPayload,\n  useCreateArtist,\n} from '@app/admin/artist-datatable-page/requests/use-create-artist';\nimport {CrupdateArtistForm} from '@app/admin/artist-datatable-page/artist-form/crupdate-artist-form';\n\ninterface Props {\n  wrapInContainer?: boolean;\n  showExternalFields?: boolean;\n}\nexport function CreateArtistPage({wrapInContainer, showExternalFields}: Props) {\n  const navigate = useNavigate();\n  const form = useForm<CreateArtistPayload>();\n  const createArtist = useCreateArtist(form);\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createArtist.mutate(values, {\n          onSuccess: response => {\n            navigate(`../${response.artist.id}/edit`, {\n              relative: 'path',\n              replace: true,\n            });\n          },\n        });\n      }}\n      title={<Trans message=\"Add new artist\" />}\n      isLoading={createArtist.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <CrupdateArtistForm showExternalFields={showExternalFields} />\n    </CrupdateResourceLayout>\n  );\n}\n\nexport function CreateArtistPageWithExternalFields() {\n  return <CreateArtistPage showExternalFields />;\n}\n","import {useDeleteComments} from '@common/comments/requests/use-delete-comments';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {queryClient} from '@common/http/query-client';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport React from 'react';\nimport {ButtonVariant} from '@ui/buttons/get-shared-button-style';\nimport {ButtonSize} from '@ui/buttons/button-size';\n\ninterface DeleteCommentsButtonProps {\n  commentIds: number[];\n  variant?: ButtonVariant;\n  size?: ButtonSize;\n}\nexport function DeleteCommentsButton({\n  commentIds,\n  variant = 'outline',\n  size = 'xs',\n}: DeleteCommentsButtonProps) {\n  const deleteComments = useDeleteComments();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          deleteComments.mutate(\n            {commentIds},\n            {\n              onSuccess: () => {\n                queryClient.invalidateQueries({queryKey: ['comment']});\n              },\n            },\n          );\n        }\n      }}\n    >\n      <Button\n        variant={variant}\n        size={size}\n        color=\"danger\"\n        className=\"mr-10\"\n        disabled={deleteComments.isPending}\n      >\n        <Trans message=\"Delete\" />\n      </Button>\n      <ConfirmationDialog\n        isDanger\n        title={\n          <Trans\n            message=\"Delete [one comment|other :count comments]\"\n            values={{count: commentIds.length}}\n          />\n        }\n        body={\n          commentIds.length > 1 ? (\n            <Trans message=\"Are you sure you want to delete selected comments?\" />\n          ) : (\n            <Trans message=\"Are you sure you want to delete this comment?\" />\n          )\n        }\n        confirm={<Trans message=\"Delete\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  //\n}\n\ninterface Payload {\n  commentId: number;\n  content: string;\n}\n\nexport function useUpdateComment() {\n  return useMutation({\n    mutationFn: (props: Payload) => updateComment(props),\n    onSuccess: () => {\n      toast(message('Comment updated'));\n      queryClient.invalidateQueries({queryKey: ['comment']});\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateComment({commentId, content}: Payload): Promise<Response> {\n  return apiClient.put(`comment/${commentId}`, {content}).then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '../../http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  //\n}\n\ninterface Payload {\n  commentIds: number[];\n}\n\nexport function useRestoreComments() {\n  return useMutation({\n    mutationFn: (payload: Payload) => restoreComment(payload),\n    onSuccess: (response, payload) => {\n      toast(\n        message('Restored [one 1 comment|other :count comments]', {\n          values: {count: payload.commentIds.length},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction restoreComment({commentIds}: Payload): Promise<Response> {\n  return apiClient.post('comment/restore', {commentIds}).then(r => r.data);\n}\n","import {queryClient} from '@common/http/query-client';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {ButtonVariant} from '@ui/buttons/get-shared-button-style';\nimport {ButtonSize} from '@ui/buttons/button-size';\nimport {useRestoreComments} from '@common/comments/requests/use-restore-comments';\n\ninterface Props {\n  commentIds: number[];\n  variant?: ButtonVariant;\n  size?: ButtonSize;\n}\nexport function RestoreCommentsButton({\n  commentIds,\n  variant = 'outline',\n  size = 'xs',\n}: Props) {\n  const restoreComments = useRestoreComments();\n  return (\n    <Button\n      variant={variant}\n      size={size}\n      className=\"mr-10\"\n      disabled={restoreComments.isPending}\n      color=\"primary\"\n      onClick={() => {\n        restoreComments.mutate(\n          {commentIds},\n          {\n            onSuccess: () => {\n              queryClient.invalidateQueries({queryKey: ['comment']});\n            },\n          },\n        );\n      }}\n    >\n      <Trans message=\"Restore\" />\n    </Button>\n  );\n}\n","import {User} from '@ui/types/user';\nimport {Comment} from '@common/comments/comment';\nimport React, {Fragment, useContext, useState} from 'react';\nimport {Checkbox} from '@ui/forms/toggle/checkbox';\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\nimport {queryClient} from '@common/http/query-client';\nimport {DeleteCommentsButton} from '@common/comments/comments-datatable-page/delete-comments-button';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {useUpdateComment} from '@common/comments/requests/use-update-comment';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {Link} from 'react-router-dom';\nimport {LinkStyle} from '@ui/buttons/external-link';\nimport clsx from 'clsx';\nimport {RestoreCommentsButton} from '@common/comments/comments-datatable-page/restore-comments-button';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {UserAvatar} from '@common/auth/user-avatar';\n\ninterface Props {\n  comment: Comment;\n  isSelected: boolean;\n  onToggle: () => void;\n}\nexport function CommentDatatableItem({comment, isSelected, onToggle}: Props) {\n  const [isEditing, setIsEditing] = useState(false);\n  return (\n    <div className={clsx('border-b p-14', comment.deleted && 'bg-danger/6')}>\n      {comment.commentable && (\n        <CommentableHeader\n          isSelected={isSelected}\n          onToggle={onToggle}\n          commentable={comment.commentable}\n        />\n      )}\n      <div className=\"flex items-start gap-10 pt-14 md:pl-20\">\n        <UserAvatar className=\"flex-shrink-0\" user={comment.user} size=\"md\" />\n        <div className=\"flex-auto\">\n          <CommentHeader comment={comment} />\n          {isEditing ? (\n            <EditCommentForm\n              comment={comment}\n              onClose={isSaved => {\n                setIsEditing(false);\n                if (isSaved) {\n                  queryClient.invalidateQueries({queryKey: ['comment']});\n                }\n              }}\n            />\n          ) : (\n            <Fragment>\n              <div className=\"my-14 text-sm\">{comment.content}</div>\n              <div className=\"flex items-center justify-between gap-24\">\n                <div>\n                  {comment.deleted ? (\n                    <RestoreCommentsButton commentIds={[comment.id]} />\n                  ) : (\n                    <DeleteCommentsButton commentIds={[comment.id]} />\n                  )}\n                  <Button\n                    variant=\"outline\"\n                    size=\"xs\"\n                    onClick={() => {\n                      setIsEditing(true);\n                    }}\n                  >\n                    <Trans message=\"Edit\" />\n                  </Button>\n                </div>\n                <div className=\"text-xs text-danger\">\n                  <Trans\n                    message=\"Reported [one 1 time|other :count times]\"\n                    values={{count: comment.reports_count}}\n                  />\n                </div>\n              </div>\n            </Fragment>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface CommentableHeaderProps {\n  isSelected: boolean;\n  onToggle: Props['onToggle'];\n  commentable: NormalizedModel;\n}\nfunction CommentableHeader({\n  isSelected,\n  onToggle,\n  commentable,\n}: CommentableHeaderProps) {\n  return (\n    <div className=\"flex items-center\">\n      <div className=\"mr-14\">\n        <Checkbox checked={isSelected} onChange={() => onToggle()} />\n      </div>\n      {commentable.image && (\n        <img\n          className=\"mr-6 h-20 w-20 overflow-hidden rounded object-cover\"\n          src={commentable.image}\n          alt=\"\"\n        />\n      )}\n      <div className=\"mr-4 text-sm\">{commentable.name}</div>\n      <div className=\"text-xs text-muted\">({commentable.model_type})</div>\n    </div>\n  );\n}\n\ninterface CommentHeaderProps {\n  comment: Comment;\n}\nfunction CommentHeader({comment}: CommentHeaderProps) {\n  return (\n    <div className=\"flex items-center gap-4 text-sm\">\n      <div>\n        {comment.user && <UserDisplayName user={comment.user} show=\"name\" />}\n      </div>\n      <div>&bull;</div>\n      <time>\n        <FormattedRelativeTime date={comment.created_at} />\n      </time>\n      {comment.user && (\n        <div className=\"ml-auto hidden md:block\">\n          {<UserDisplayName user={comment.user} show=\"email\" />}\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface EditCommentFormProps {\n  comment: Comment;\n  onClose: (saved: boolean) => void;\n}\nfunction EditCommentForm({comment, onClose}: EditCommentFormProps) {\n  const [content, setContent] = useState(comment.content);\n  const updateComment = useUpdateComment();\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        updateComment.mutate(\n          {commentId: comment.id, content},\n          {onSuccess: () => onClose(true)},\n        );\n      }}\n    >\n      <TextField\n        autoFocus\n        inputElementType=\"textarea\"\n        className=\"my-14\"\n        rows={2}\n        value={content}\n        onChange={e => setContent(e.target.value)}\n      />\n      <Button\n        size=\"xs\"\n        variant=\"outline\"\n        color=\"primary\"\n        type=\"submit\"\n        className=\"mr-6\"\n        disabled={updateComment.isPending}\n      >\n        <Trans message=\"Save edit\" />\n      </Button>\n      <Button\n        size=\"xs\"\n        variant=\"outline\"\n        className=\"mr-6\"\n        onClick={e => onClose(false)}\n        disabled={updateComment.isPending}\n      >\n        <Trans message=\"Cancel\" />\n      </Button>\n    </form>\n  );\n}\n\ninterface UserDisplayNameProps {\n  user: User;\n  show: 'name' | 'email';\n}\nfunction UserDisplayName({user, show}: UserDisplayNameProps) {\n  const {auth} = useContext(SiteConfigContext);\n  if (auth.getUserProfileLink) {\n    return (\n      <Link\n        to={auth.getUserProfileLink(user)}\n        className={LinkStyle}\n        target=\"_blank\"\n      >\n        {user[show]}\n      </Link>\n    );\n  }\n  return <div className=\"text-muted\">{user[show]}</div>;\n}\n","export default \"__VITE_ASSET__a97a5552__\"","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {message} from '@ui/i18n/message';\nimport {USER_MODEL} from '@ui/types/user';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const CommentsDatatableFilters: BackendFilter[] = [\n  {\n    key: 'deleted',\n    label: message('Status'),\n    description: message('Whether comment is active or deleted'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '01',\n      options: [\n        {\n          key: '01',\n          label: message('Active'),\n          value: false,\n        },\n        {\n          key: '02',\n          label: message('Deleted'),\n          value: true,\n        },\n      ],\n    },\n  },\n  {\n    key: 'reports',\n    label: message('Reported'),\n    description: message('Show only reported comments'),\n    defaultOperator: FilterOperator.has,\n    control: {\n      type: FilterControlType.BooleanToggle,\n      defaultValue: '*',\n    },\n  },\n  {\n    key: 'user_id',\n    label: message('User'),\n    description: message('User comment was created by'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.SelectModel,\n      model: USER_MODEL,\n    },\n  },\n  createdAtFilter({\n    description: message('Date comment was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date comment was last updated'),\n  }),\n];\n","import React, {useCallback, useMemo, useState} from 'react';\nimport {Trans} from '@ui/i18n/trans';\nimport clsx from 'clsx';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\nimport {DataTableHeader} from '@common/datatable/data-table-header';\nimport {useBackendFilterUrlParams} from '@common/datatable/filters/backend-filter-url-params';\nimport {\n  GetDatatableDataParams,\n  useDatatableData,\n} from '@common/datatable/requests/paginated-resources';\nimport {Comment} from '@common/comments/comment';\nimport {FilterList} from '@common/datatable/filters/filter-list/filter-list';\nimport {SelectedStateDatatableHeader} from '@common/datatable/selected-state-datatable-header';\nimport {AnimatePresence} from 'framer-motion';\nimport {DeleteCommentsButton} from '@common/comments/comments-datatable-page/delete-comments-button';\nimport {CommentDatatableItem} from '@common/comments/comments-datatable-page/comment-datatable-item';\nimport {DataTablePaginationFooter} from '@common/datatable/data-table-pagination-footer';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport publicDiscussionsImage from './public-discussion.svg';\nimport {FullPageLoader} from '@ui/progress/full-page-loader';\nimport {Commentable} from '@common/comments/commentable';\nimport {CommentsDatatableFilters} from '@common/comments/comments-datatable-page/comments-datatable-filters';\n\ninterface Props {\n  hideTitle?: boolean;\n  commentable?: Commentable;\n}\nexport function CommentsDatatablePage({hideTitle, commentable}: Props) {\n  const filters = useMemo(() => {\n    return CommentsDatatableFilters.filter(\n      f => f.key !== 'commentable_id' || !commentable,\n    );\n  }, [commentable]);\n  const {encodedFilters} = useBackendFilterUrlParams(filters);\n  const [params, setParams] = useState<GetDatatableDataParams>({perPage: 15});\n  const [selectedComments, setSelectedComments] = useState<number[]>([]);\n  const query = useDatatableData<Comment>(\n    'comment',\n    {\n      ...params,\n      with: 'commentable',\n      withCount: 'reports',\n      filters: encodedFilters,\n      commentable_type: commentable?.model_type,\n      commentable_id: commentable?.id,\n    },\n    undefined,\n    () => {\n      setSelectedComments([]);\n    },\n  );\n\n  const toggleComment = useCallback(\n    (id: number) => {\n      const newValues = [...selectedComments];\n      if (!newValues.includes(id)) {\n        newValues.push(id);\n      } else {\n        const index = newValues.indexOf(id);\n        newValues.splice(index, 1);\n      }\n      setSelectedComments(newValues);\n    },\n    [selectedComments, setSelectedComments],\n  );\n\n  const isFiltering = !!(params.query || params.filters || encodedFilters);\n  const pagination = query.data?.pagination;\n\n  return (\n    <div className={clsx(!hideTitle && 'p-12 md:p-24')}>\n      <div className={clsx('mb-16')}>\n        <StaticPageTitle>\n          <Trans message=\"Comments\" />\n        </StaticPageTitle>\n        {!hideTitle && (\n          <h1 className=\"text-3xl font-light\">\n            <Trans message=\"Comments\" />\n          </h1>\n        )}\n      </div>\n      <div>\n        <AnimatePresence initial={false} mode=\"wait\">\n          {selectedComments.length ? (\n            <SelectedStateDatatableHeader\n              selectedItemsCount={selectedComments.length}\n              actions={\n                <DeleteCommentsButton\n                  size=\"sm\"\n                  variant=\"flat\"\n                  commentIds={selectedComments}\n                />\n              }\n              key=\"selected\"\n            />\n          ) : (\n            <DataTableHeader\n              filters={filters}\n              searchValue={params.query}\n              onSearchChange={query => setParams({...params, query})}\n              key=\"default\"\n            />\n          )}\n        </AnimatePresence>\n        <FilterList className=\"mb-14\" filters={filters} />\n\n        {query.isLoading ? (\n          <FullPageLoader className=\"min-h-200\" />\n        ) : (\n          <div className=\"rounded border-x border-t\">\n            {pagination?.data.map(comment => (\n              <CommentDatatableItem\n                key={comment.id}\n                comment={comment}\n                isSelected={selectedComments.includes(comment.id)}\n                onToggle={() => toggleComment(comment.id)}\n              />\n            ))}\n          </div>\n        )}\n\n        {(query.isFetched || query.isPlaceholderData) &&\n        !pagination?.data.length ? (\n          <DataTableEmptyStateMessage\n            className=\"pt-50\"\n            isFiltering={isFiltering}\n            image={publicDiscussionsImage}\n            title={<Trans message=\"No comments have been created yet\" />}\n            filteringTitle={<Trans message=\"No matching comments\" />}\n          />\n        ) : undefined}\n\n        <DataTablePaginationFooter\n          className=\"mt-10\"\n          query={query}\n          onPageChange={page => setParams({...params, page})}\n          onPerPageChange={perPage => setParams({...params, perPage})}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {ButtonColor, ButtonVariant} from './get-shared-button-style';\nimport {ButtonProps} from './button';\nimport {ButtonSize} from './button-size';\n\nexport interface ButtonGroupProps {\n  children: React.ReactNode[];\n  color?: ButtonColor;\n  variant?: ButtonVariant;\n  size?: ButtonSize;\n  radius?: string;\n  className?: string;\n  value?: any;\n  onChange?: (newValue: any) => void;\n  multiple?: boolean;\n  disabled?: boolean;\n}\nexport function ButtonGroup({\n  children,\n  color,\n  variant,\n  radius = 'rounded-button',\n  size,\n  className,\n  value,\n  onChange,\n  multiple,\n  disabled,\n}: ButtonGroupProps) {\n  const isActive = (childValue: any): boolean => {\n    // assume that button group is not used as a toggle group, if there is no value given\n    if (value === undefined) return false;\n    if (multiple) {\n      return (value as any[]).includes(childValue);\n    }\n    return childValue === value;\n  };\n\n  const toggleMultipleValue = (childValue: any) => {\n    const newValue = [...value];\n    const childIndex = value.indexOf(childValue);\n    if (childIndex > -1) {\n      newValue.splice(childIndex, 1);\n    } else {\n      newValue.push(childValue);\n    }\n    return newValue;\n  };\n\n  const buttons = React.Children.map(children, (button, i) => {\n    if (React.isValidElement(button)) {\n      const active = isActive(button.props.value);\n      const adjustedColor = active ? 'primary' : color;\n      return React.cloneElement<ButtonProps>(button as any, {\n        color: active ? 'primary' : color,\n        variant,\n        size,\n        radius: null,\n        disabled: button.props.disabled || disabled,\n        ...button.props,\n        onClick: e => {\n          if (button.props.onClick) {\n            button.props.onClick(e);\n          }\n          if (!onChange) return;\n          if (multiple) {\n            onChange?.(toggleMultipleValue(button.props.value));\n          } else {\n            onChange?.(button.props.value);\n          }\n        },\n        className: clsx(\n          button.props.className,\n          // borders are hidden via negative margin, make sure both are visible for active item\n          active ? 'z-20' : 'z-10',\n          getStyle(i, children, radius, adjustedColor),\n        ),\n      });\n    }\n  });\n  return (\n    <div className={clsx(radius, 'isolate inline-flex', className)}>\n      {buttons}\n    </div>\n  );\n}\n\nfunction getStyle(\n  i: number,\n  children: ButtonGroupProps['children'],\n  radius: ButtonGroupProps['radius'],\n  color?: ButtonColor,\n): string {\n  // first\n  if (i === 0) {\n    return clsx(\n      radius,\n      'rounded-tr-none rounded-br-none',\n      !color && 'border-r-transparent disabled:border-r-transparent',\n    );\n  }\n  // last\n  if (i === children.length - 1) {\n    return clsx(radius, 'rounded-tl-none rounded-bl-none -ml-1');\n  }\n  return clsx(\n    'rounded-none -ml-1',\n    !color && 'border-r-transparent disabled:border-r-transparent',\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {Link, Outlet, useParams} from 'react-router-dom';\nimport React, {useState} from 'react';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {DateRangePresets} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {ReportDateSelector} from '@common/admin/analytics/report-date-selector';\nimport {Button} from '@ui/buttons/button';\nimport {ButtonGroup} from '@ui/buttons/button-group';\nimport {AdminHeaderReport} from '@common/admin/analytics/admin-header-report';\nimport {useAdminReport} from '@common/admin/analytics/use-admin-report';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\n\nexport interface AdminReportOutletContext {\n  dateRange: DateRangeValue;\n  setDateRange: (dateRange: DateRangeValue) => void;\n}\n\nexport function MarinaModaMusicProdAdminReportPage() {\n  const [dateRange, setDateRange] = useState<DateRangeValue>(() => {\n    // This week\n    return DateRangePresets[2].getRangeValue();\n  });\n  const params = useParams();\n  const channel = params['*'] || 'plays';\n\n  const title =\n    channel === 'visitors' ? (\n      <Trans message=\"Visitors report\" />\n    ) : (\n      <Trans message=\"Plays report\" />\n    );\n\n  return (\n    <div className=\"min-h-full overflow-x-hidden p-12 md:p-24\">\n      <div className=\"mb-24 items-center justify-between gap-24 md:flex\">\n        <StaticPageTitle>{title}</StaticPageTitle>\n        <h1 className=\"mb-24 text-3xl font-light md:mb-0\">{title}</h1>\n        <div className=\"flex flex-shrink-0 items-center justify-between gap-10 md:gap-24\">\n          <ButtonGroup variant=\"outline\" value={channel}>\n            <Button value=\"plays\" elementType={Link} to=\"plays\">\n              <Trans message=\"Plays\" />\n            </Button>\n            <Button value=\"visitors\" elementType={Link} to=\"visitors\">\n              <Trans message=\"Visitors\" />\n            </Button>\n          </ButtonGroup>\n          <ReportDateSelector value={dateRange} onChange={setDateRange} />\n        </div>\n      </div>\n      <Header dateRange={dateRange} />\n      <Outlet context={{dateRange, setDateRange}} />\n    </div>\n  );\n}\n\ninterface HeaderProps {\n  dateRange: DateRangeValue;\n}\nfunction Header({dateRange}: HeaderProps) {\n  const {data} = useAdminReport({types: ['header'], dateRange});\n  return <AdminHeaderReport report={data?.headerReport} />;\n}\n","import React from 'react';\nimport {useOutletContext} from 'react-router-dom';\nimport {AdminReportOutletContext} from '@app/admin/reports/MarinaModaMusicProd-admin-report-page';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\n\nexport function AdminInsightsReport() {\n  const {dateRange} = useOutletContext<AdminReportOutletContext>();\n  return (\n    <InsightsReportCharts\n      dateRange={dateRange}\n      model=\"track_play=0\"\n      showTracks\n      showArtistsAndAlbums\n    />\n  );\n}\n","import React from 'react';\nimport {useOutletContext} from 'react-router-dom';\nimport {AdminReportOutletContext} from '@app/admin/reports/MarinaModaMusicProd-admin-report-page';\nimport {VisitorsReportCharts} from '@common/admin/analytics/visitors-report-charts';\nimport {useAdminReport} from '@common/admin/analytics/use-admin-report';\n\nexport function AdminVisitorsReport() {\n  const {dateRange} = useOutletContext<AdminReportOutletContext>();\n  const {data, isLoading, isPlaceholderData} = useAdminReport({\n    types: ['visitors'],\n    dateRange: dateRange,\n  });\n  return (\n    <VisitorsReportCharts\n      isLoading={isLoading || isPlaceholderData}\n      report={data?.visitorsReport}\n    />\n  );\n}\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Channel, ChannelConfig} from '@common/channels/channel';\n\nconst endpoint = 'channel';\n\ninterface Response extends BackendResponse {\n  channel: Channel;\n}\n\nexport interface CreateChannelPayload {\n  name: string;\n  slug: string;\n  type: string;\n  public: boolean;\n  description?: string;\n  config: ChannelConfig;\n  content: PaginationResponse<NormalizedModel>;\n}\n\nexport function useCreateChannel(form: UseFormReturn<CreateChannelPayload>) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: (payload: CreateChannelPayload) => createChannel(payload),\n    onSuccess: async response => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n      toast(trans(message('Channel created')));\n      navigate(`/admin/channels/${response.channel.id}/edit`, {\n        replace: true,\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createChannel(payload: CreateChannelPayload) {\n  return apiClient.post<Response>(endpoint, payload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport React, {ReactNode} from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {EMPTY_PAGINATION_RESPONSE} from '@common/http/backend-response/pagination-response';\nimport {UpdateChannelPayload} from '@common/admin/channels/requests/use-update-channel';\nimport {\n  CreateChannelPayload,\n  useCreateChannel,\n} from '@common/admin/channels/requests/use-create-channel';\n\ninterface Props {\n  defaultValues?: Partial<UpdateChannelPayload['config']>;\n  children: ReactNode;\n  submitButtonText?: ReactNode;\n}\nexport function CreateChannelPageLayout({\n  defaultValues,\n  children,\n  submitButtonText,\n}: Props) {\n  const form = useForm<CreateChannelPayload>({\n    defaultValues: {\n      content: EMPTY_PAGINATION_RESPONSE.pagination,\n      config: {\n        contentType: 'listAll',\n        contentOrder: 'created_at:desc',\n        nestedLayout: 'carousel',\n        ...defaultValues,\n      },\n    },\n  });\n  const createChannel = useCreateChannel(form);\n\n  return (\n    <CrupdateResourceLayout\n      submitButtonText={submitButtonText}\n      form={form}\n      onSubmit={values => {\n        createChannel.mutate(values);\n      }}\n      title={<Trans message=\"New channel\" />}\n      isLoading={createChannel.isPending}\n    >\n      {children}\n    </CrupdateResourceLayout>\n  );\n}\n","import {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {Fragment} from 'react';\nimport {useFormContext} from 'react-hook-form';\nimport {UpdateChannelPayload} from '@common/admin/channels/requests/use-update-channel';\nimport {SlugEditor} from '@common/ui/other/slug-editor';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport clsx from 'clsx';\n\ninterface Props {\n  className?: string;\n  autoFocus?: boolean;\n}\nexport function ChannelNameField({className, autoFocus}: Props) {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"name\"\n        label={<Trans message=\"Title\" />}\n        required\n        autoFocus={autoFocus}\n        className={clsx('mb-10', className)}\n      />\n      <FormSlugField />\n    </Fragment>\n  );\n}\n\nfunction FormSlugField() {\n  const {watch, setValue} = useFormContext<UpdateChannelPayload>();\n  const value = watch('slug');\n  const name = watch('name');\n  const disableSlugEditing = watch('config.lockSlug');\n  const restriction = watch('config.restriction');\n  const restrictionId = watch('config.restrictionModelId');\n  const {trans} = useTrans();\n  return (\n    <SlugEditor\n      hideButton={disableSlugEditing}\n      placeholder={name}\n      suffix={\n        restriction && restrictionId === 'urlParam'\n          ? trans(message(':restriction_name', {values: {restriction}}))\n          : undefined\n      }\n      className=\"text-sm\"\n      pattern=\"[A-Za-z0-9_-]+\"\n      minLength={3}\n      maxLength={20}\n      value={value}\n      onChange={newSlug => {\n        setValue('slug', newSlug);\n      }}\n    />\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {UpdateChannelPayload} from '@common/admin/channels/requests/use-update-channel';\nimport {ChannelContentConfig} from '@common/admin/channels/channel-editor/channel-content-config';\n\ninterface Props {\n  config: ChannelContentConfig;\n  className?: string;\n}\nexport function ContentTypeField({config, className}: Props) {\n  const {setValue} = useFormContext<UpdateChannelPayload>();\n  return (\n    <FormSelect\n      className={className}\n      selectionMode=\"single\"\n      name=\"config.contentType\"\n      label={<Trans message=\"Content\" />}\n      onSelectionChange={newValue => {\n        // if content type is \"auto update\" select first model that\n        // can be auto updated, otherwise select first available model\n        let model = Object.entries(config.models)[0];\n        if (newValue === 'autoUpdate') {\n          const newModel = Object.entries(config.models).find(\n            ([, modelConfig]) => modelConfig.autoUpdateMethods?.length,\n          );\n          if (newModel) {\n            model = newModel;\n          }\n        }\n        const [modelName, modelConfig] = model;\n\n        setValue('config.contentModel', modelName);\n        setValue('config.restrictionModelId', undefined);\n        setValue(\n          'config.autoUpdateMethod',\n          newValue === 'autoUpdate' ? modelConfig.autoUpdateMethods?.[0] : '',\n        );\n        setValue('config.contentOrder', modelConfig.sortMethods[0]);\n        (setValue as any)('config.restriction', null);\n      }}\n    >\n      <Option value=\"listAll\">\n        <Trans message=\"List all content of specified type\" />\n      </Option>\n      <Option value=\"manual\">\n        <Trans message=\"Manage content manually\" />\n      </Option>\n      <Option value=\"autoUpdate\">\n        <Trans message=\"Automatically update content with specified method\" />\n      </Option>\n    </FormSelect>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ViewWeekIcon = createSvgIcon(\n  <path d=\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM8 18H4V6h4v12zm6 0h-4V6h4v12zm6 0h-4V6h4v12z\" />\n, 'ViewWeekOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ViewListIcon = createSvgIcon(\n  <path d=\"M3 5v14h18V5H3zm4 2v2H5V7h2zm-2 6v-2h2v2H5zm0 2h2v2H5v-2zm14 2H9v-2h10v2zm0-4H9v-2h10v2zm0-4H9V7h10v2z\" />\n, 'ViewListOutlined');\n","import {message} from '@ui/i18n/message';\nimport {Channel, CHANNEL_MODEL} from '@common/channels/channel';\nimport {ChannelContentConfig} from '@common/admin/channels/channel-editor/channel-content-config';\nimport {GridViewIcon} from '@ui/icons/material/GridView';\nimport {ViewWeekIcon} from '@ui/icons/material/ViewWeek';\nimport {ViewListIcon} from '@ui/icons/material/ViewList';\nimport {Artist, ARTIST_MODEL} from '@app/web-player/artists/artist';\nimport {Album, ALBUM_MODEL} from '@app/web-player/albums/album';\nimport {Track, TRACK_MODEL} from '@app/web-player/tracks/track';\nimport {Playlist, PLAYLIST_MODEL} from '@app/web-player/playlists/playlist';\nimport {User, USER_MODEL} from '@ui/types/user';\nimport {Genre, GENRE_MODEL} from '@app/web-player/genres/genre';\n\nexport enum Sort {\n  popular = 'popularity:desc',\n  recent = 'created_at:desc',\n  releaseDate = 'release_date:desc',\n  curated = 'channelables.order:asc',\n  attachDate = 'channelables.created_at:desc',\n}\nexport enum Layout {\n  grid = 'grid',\n  table = 'trackTable',\n  list = 'list',\n  carousel = 'carousel',\n}\n\nenum Auto {\n  topTracks = 'topTracks',\n  newAlbums = 'newAlbums',\n  playlistTracks = 'playlistTracks',\n  topGenres = 'topGenres',\n  nonEmptyGenres = 'nonEmptyGenres',\n}\n\nenum Restrictions {\n  genre = 'genre',\n}\n\nconst contentModels: ChannelContentConfig['models'] = {\n  [ARTIST_MODEL]: {\n    label: message('Artists'),\n    sortMethods: [Sort.popular, Sort.recent],\n    layoutMethods: [Layout.grid, Layout.carousel],\n    autoUpdateMethods: [],\n    restrictions: [Restrictions.genre],\n  },\n  [ALBUM_MODEL]: {\n    label: message('Albums'),\n    sortMethods: [Sort.popular, Sort.recent, Sort.releaseDate],\n    layoutMethods: [Layout.grid, Layout.carousel],\n    autoUpdateMethods: [Auto.newAlbums],\n    restrictions: [Restrictions.genre],\n  },\n  [TRACK_MODEL]: {\n    label: message('Tracks'),\n    sortMethods: [Sort.popular, Sort.recent],\n    layoutMethods: [Layout.grid, Layout.table, Layout.list, Layout.carousel],\n    autoUpdateMethods: [Auto.topTracks, Auto.playlistTracks],\n    restrictions: [Restrictions.genre],\n  },\n  [PLAYLIST_MODEL]: {\n    label: message('Playlists'),\n    sortMethods: [Sort.popular, Sort.recent],\n    layoutMethods: [Layout.grid, Layout.carousel],\n  },\n  [USER_MODEL]: {\n    label: message('Users'),\n    sortMethods: [Sort.recent],\n    layoutMethods: [Layout.grid, Layout.carousel],\n    autoUpdateMethods: [],\n  },\n  [GENRE_MODEL]: {\n    label: message('Genres'),\n    sortMethods: [Sort.popular, Sort.recent],\n    layoutMethods: [Layout.grid, Layout.carousel],\n    autoUpdateMethods: [Auto.topGenres, Auto.nonEmptyGenres],\n  },\n  [CHANNEL_MODEL]: {\n    label: message('Channels'),\n    sortMethods: [],\n    layoutMethods: [Layout.list],\n  },\n};\n\nconst contentSortingMethods: Record<\n  Sort,\n  ChannelContentConfig['sortingMethods']['any']\n> = {\n  [Sort.popular]: {\n    label: message('Most popular first'),\n  },\n  [Sort.recent]: {\n    label: message('Recently added first'),\n  },\n  [Sort.curated]: {\n    label: message('Curated (reorder below)'),\n    contentTypes: ['manual'],\n  },\n  [Sort.attachDate]: {\n    label: message('Items recently added to channel first'),\n  },\n  [Sort.releaseDate]: {\n    label: message('Most recent first (by release date)'),\n  },\n};\n\nconst contentLayoutMethods: Record<\n  Layout,\n  ChannelContentConfig['layoutMethods']['any']\n> = {\n  [Layout.grid]: {\n    label: message('Grid'),\n    icon: <GridViewIcon />,\n  },\n  [Layout.table]: {\n    label: message('Table'),\n    icon: <ViewWeekIcon />,\n  },\n  [Layout.list]: {\n    label: message('List'),\n    icon: <ViewListIcon />,\n  },\n  [Layout.carousel]: {\n    label: message('Carousel'),\n  },\n};\n\nconst contentAutoUpdateMethods: Record<\n  Auto,\n  ChannelContentConfig['autoUpdateMethods']['any']\n> = {\n  [Auto.topTracks]: {\n    label: message('Top tracks'),\n    providers: ['spotify', 'local'],\n  },\n  [Auto.newAlbums]: {\n    label: message('New releases'),\n    providers: ['spotify', 'local'],\n  },\n  [Auto.playlistTracks]: {\n    label: message('Playlist tracks'),\n    providers: ['spotify', 'local'],\n    value: {\n      label: message('Playlist ID'),\n      inputType: 'text',\n    },\n  },\n  [Auto.topGenres]: {\n    label: message('Popular genres'),\n    providers: ['lastfm', 'local'],\n  },\n  [Auto.nonEmptyGenres]: {\n    label: message('Genres that have content'),\n    providers: ['local'],\n  },\n};\n\nconst contentRestrictions: Record<\n  Restrictions,\n  ChannelContentConfig['restrictions']['any']\n> = {\n  [Restrictions.genre]: {\n    label: message('Genre'),\n    value: Restrictions.genre,\n  },\n};\n\nexport const channelContentConfig: ChannelContentConfig = {\n  models: contentModels,\n  sortingMethods: contentSortingMethods,\n  layoutMethods: contentLayoutMethods,\n  autoUpdateMethods: contentAutoUpdateMethods,\n  userSelectableLayouts: [Layout.grid, Layout.table, Layout.list],\n  restrictions: contentRestrictions,\n};\n\nexport type ChannelContentModel = (\n  | Artist\n  | Album\n  | Track\n  | Playlist\n  | User\n  | Genre\n  | Channel\n) & {\n  channelable_id?: number;\n  channelable_order?: number;\n};\n","import {useFormContext} from 'react-hook-form';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {UpdateChannelPayload} from '@common/admin/channels/requests/use-update-channel';\nimport React from 'react';\nimport {ChannelContentConfig} from '@common/admin/channels/channel-editor/channel-content-config';\n\ninterface Props {\n  config: ChannelContentConfig;\n  className?: string;\n  exclude?: string[];\n}\nexport function ContentModelField({config, className, exclude}: Props) {\n  const {setValue, getValues} = useFormContext<UpdateChannelPayload>();\n  return (\n    <FormSelect\n      className={className}\n      selectionMode=\"single\"\n      name=\"config.contentModel\"\n      label={<Trans message=\"Type of content\" />}\n      onSelectionChange={newValue => {\n        const modelConfig = config.models[newValue];\n        if (\n          getValues('config.contentType') === 'autoUpdate' &&\n          !modelConfig.autoUpdateMethods?.length\n        ) {\n          (setValue as any)('config.contentType', 'manual');\n        }\n\n        // sync auto update config\n        const firstAutoUpdateMethod = modelConfig.autoUpdateMethods?.[0];\n        setValue('config.autoUpdateMethod', firstAutoUpdateMethod);\n        setValue(\n          'config.autoUpdateProvider',\n          firstAutoUpdateMethod\n            ? config.autoUpdateMethods[firstAutoUpdateMethod]?.providers[0]\n            : undefined,\n        );\n\n        // sync restrictions\n        setValue('config.restriction', null);\n        setValue('config.restrictionModelId', null);\n\n        // sync order\n        setValue(\n          'config.contentOrder',\n          modelConfig.sortMethods[0] || 'channelables.order:asc',\n        );\n\n        // sync layout\n        setValue('config.layout', modelConfig.layoutMethods[0]);\n      }}\n    >\n      {Object.entries(config.models)\n        .filter(([model]) => !exclude?.includes(model))\n        .map(([model, {label}]) => (\n          <Option value={model} key={model}>\n            <Trans {...label} />\n          </Option>\n        ))}\n    </FormSelect>\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {UpdateChannelPayload} from '@common/admin/channels/requests/use-update-channel';\nimport {ChannelContentConfig} from '@common/admin/channels/channel-editor/channel-content-config';\n\ninterface Props {\n  config: ChannelContentConfig;\n  className?: string;\n}\nexport function ContentOrderField({config, className}: Props) {\n  const {watch} = useFormContext<UpdateChannelPayload>();\n  const contentType = watch('config.contentType');\n  const modelConfig = config.models[watch('config.contentModel')];\n  const sortMethods = [\n    ...modelConfig.sortMethods,\n    'channelables.order:asc',\n    'channelables.created_at:desc',\n  ];\n\n  return (\n    <FormSelect\n      className={className}\n      selectionMode=\"single\"\n      name=\"config.contentOrder\"\n      label={<Trans message=\"How to order content\" />}\n    >\n      {sortMethods.map(method => {\n        const sortConfig = config.sortingMethods[method];\n        if (\n          !sortConfig.contentTypes ||\n          sortConfig.contentTypes.includes(contentType)\n        ) {\n          return (\n            <Option value={method} key={method}>\n              <Trans {...sortConfig.label} />\n            </Option>\n          );\n        }\n      })}\n    </FormSelect>\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {UpdateChannelPayload} from '@common/admin/channels/requests/use-update-channel';\nimport {ReactNode} from 'react';\nimport {ChannelContentConfig} from '@common/admin/channels/channel-editor/channel-content-config';\nimport clsx from 'clsx';\n\ninterface Props {\n  config: ChannelContentConfig;\n  className?: string;\n}\nexport function ContentLayoutFields({config, className}: Props) {\n  return (\n    <div className={clsx('items-end gap-14 md:flex', className)}>\n      <LayoutField\n        config={config}\n        name=\"config.layout\"\n        label={<Trans message=\"Layout\" />}\n      />\n      <LayoutField\n        config={config}\n        name=\"config.nestedLayout\"\n        label={<Trans message=\"Layout when nested\" />}\n      />\n    </div>\n  );\n}\n\ninterface LayoutFieldProps extends Props {\n  name: string;\n  label: ReactNode;\n}\nfunction LayoutField({config, name, label}: LayoutFieldProps) {\n  const {watch} = useFormContext<UpdateChannelPayload>();\n  const contentModel = watch('config.contentModel');\n  const modelConfig = config.models[contentModel];\n\n  if (!modelConfig.layoutMethods?.length) {\n    return null;\n  }\n\n  return (\n    <FormSelect\n      className=\"w-full flex-auto\"\n      selectionMode=\"single\"\n      name={name}\n      label={label}\n    >\n      {modelConfig.layoutMethods.map(method => {\n        const label = config.layoutMethods[method].label;\n        return (\n          <Option key={method} value={method}>\n            <Trans {...label} />\n          </Option>\n        );\n      })}\n    </FormSelect>\n  );\n}\n","import {TabList} from '@ui/tabs/tab-list';\nimport {Tab} from '@ui/tabs/tab';\nimport {Trans} from '@ui/i18n/trans';\nimport {TabPanel, TabPanels} from '@ui/tabs/tab-panels';\nimport {Tabs} from '@ui/tabs/tabs';\nimport React, {Fragment, ReactNode} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\n\ninterface Props {\n  children: ReactNode;\n}\nexport function ChannelEditorTabs({children}: Props) {\n  return (\n    <Tabs isLazy>\n      <TabList>\n        <Tab>\n          <Trans message=\"Details\" />\n        </Tab>\n        <Tab>\n          <Trans message=\"SEO\" />\n        </Tab>\n      </TabList>\n      <TabPanels className=\"pt-20\">\n        <TabPanel>{children}</TabPanel>\n        <TabPanel>\n          <SeoFields />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n\nfunction SeoFields() {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"config.seoTitle\"\n        label={<Trans message=\"SEO title\" />}\n        className=\"mb-24\"\n      />\n      <FormTextField\n        name=\"config.seoDescription\"\n        label={<Trans message=\"SEO description\" />}\n        inputElementType=\"textarea\"\n        rows={6}\n      />\n    </Fragment>\n  );\n}\n","import {useContext} from 'react';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\n\ninterface Props {\n  className?: string;\n  hash?: string;\n}\nexport function ChannelsDocsLink({className, hash}: Props) {\n  const {admin} = useContext(SiteConfigContext);\n  if (!admin?.channelsDocsLink) return null;\n  const link = hash\n    ? `${admin.channelsDocsLink}#${hash}`\n    : admin.channelsDocsLink;\n  return <LearnMoreLink link={link} className={className} />;\n}\n","import {useFormContext} from 'react-hook-form';\nimport {FormSelect, Option} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {InfoDialogTrigger} from '@ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\nimport {Fragment} from 'react';\nimport {UpdateChannelPayload} from '@common/admin/channels/requests/use-update-channel';\nimport {ChannelContentConfig} from '@common/admin/channels/channel-editor/channel-content-config';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport clsx from 'clsx';\nimport {ChannelsDocsLink} from '@common/admin/channels/channels-docs-link';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\n\ninterface AutoUpdateProvider {\n  label: MessageDescriptor;\n  value: string;\n}\n\ninterface Props {\n  config: ChannelContentConfig;\n  className?: string;\n  providers?: AutoUpdateProvider[];\n}\nexport function ChannelAutoUpdateField({config, className, providers}: Props) {\n  const {watch, setValue} = useFormContext<UpdateChannelPayload>();\n  const modelConfig = config.models[watch('config.contentModel')];\n  const selectedMethodConfig =\n    config.autoUpdateMethods[watch('config.autoUpdateMethod')!];\n\n  if (\n    watch('config.contentType') !== 'autoUpdate' ||\n    !modelConfig.autoUpdateMethods?.length\n  ) {\n    return null;\n  }\n\n  return (\n    <div className={clsx('items-end gap-14 md:flex', className)}>\n      <FormSelect\n        required\n        className=\"flex-auto\"\n        selectionMode=\"single\"\n        name=\"config.autoUpdateMethod\"\n        onSelectionChange={value => {\n          setValue(\n            'config.autoUpdateProvider',\n            config.autoUpdateMethods[value].providers[0],\n          );\n        }}\n        label={\n          <Fragment>\n            <Trans message=\"Auto update method\" />\n            <InfoDialogTrigger\n              body={\n                <Fragment>\n                  <div className=\"mb-20\">\n                    <Trans message=\"This option will automatically update channel content every 24 hours using the specified method.\" />\n                  </div>\n                  <ChannelsDocsLink hash=\"automatically-update-content-with-specified-method\" />\n                </Fragment>\n              }\n            />\n          </Fragment>\n        }\n      >\n        {modelConfig.autoUpdateMethods.map(method => (\n          <Option value={method} key={method}>\n            <Trans {...config.autoUpdateMethods[method].label} />\n          </Option>\n        ))}\n      </FormSelect>\n      {selectedMethodConfig?.value ? (\n        <FormTextField\n          name=\"config.autoUpdateValue\"\n          required\n          className=\"flex-auto\"\n          label={<Trans {...selectedMethodConfig?.value.label} />}\n          type={selectedMethodConfig?.value.inputType}\n        />\n      ) : null}\n      {providers?.length ? (\n        <FormSelect\n          selectionMode=\"single\"\n          className=\"mt-24 flex-auto md:mt-0\"\n          name=\"config.autoUpdateProvider\"\n          label={<Trans message=\"Fetch content from\" />}\n          required\n        >\n          {providers\n            .filter(p => selectedMethodConfig?.providers.includes(p.value))\n            .map(provider => (\n              <Option value={provider.value} key={provider.value}>\n                <Trans {...provider.label} />\n              </Option>\n            ))}\n        </FormSelect>\n      ) : null}\n    </div>\n  );\n}\n","import {useSettings} from '@ui/settings/use-settings';\nimport {useMemo} from 'react';\nimport {message} from '@ui/i18n/message';\nimport {ChannelAutoUpdateField} from '@common/admin/channels/channel-editor/controls/channel-auto-update-field';\nimport {ChannelContentConfig} from '@common/admin/channels/channel-editor/channel-content-config';\n\ninterface Props {\n  className?: string;\n  config: ChannelContentConfig;\n}\nexport function AppChannelAutoUpdateField({className, config}: Props) {\n  const {spotify_is_setup, lastfm_is_setup} = useSettings();\n\n  const providers = useMemo(() => {\n    const providers = [{label: message('Local database'), value: 'local'}];\n    if (spotify_is_setup) {\n      providers.push({label: message('Spotify'), value: 'spotify'});\n    }\n    if (lastfm_is_setup) {\n      providers.push({label: message('Last.fm'), value: 'lastfm'});\n    }\n    return providers;\n  }, [spotify_is_setup, lastfm_is_setup]);\n\n  return (\n    <ChannelAutoUpdateField\n      config={config}\n      providers={providers}\n      className={className}\n    />\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\nimport {FormSelect} from '@ui/forms/select/select';\nimport React, {Fragment, ReactElement} from 'react';\nimport {useFormContext} from 'react-hook-form';\nimport {UpdateChannelPayload} from '@common/admin/channels/requests/use-update-channel';\nimport {InfoDialogTrigger} from '@ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\nimport clsx from 'clsx';\nimport {ChannelsDocsLink} from '@common/admin/channels/channels-docs-link';\nimport {ChannelContentConfig} from '@common/admin/channels/channel-editor/channel-content-config';\n\ninterface Props {\n  config: ChannelContentConfig;\n  className?: string;\n  children: ReactElement;\n}\nexport function ChannelRestrictionField({config, className, children}: Props) {\n  const {setValue} = useFormContext<UpdateChannelPayload>();\n  const {watch} = useFormContext<UpdateChannelPayload>();\n  const modelConfig = config.models[watch('config.contentModel')];\n  const contentType = watch('config.contentType');\n\n  if (!modelConfig.restrictions || contentType === 'manual') {\n    return null;\n  }\n\n  return (\n    <div className={clsx('items-end gap-14 md:flex', className)}>\n      <FormSelect\n        className=\"w-full flex-auto\"\n        name=\"config.restriction\"\n        selectionMode=\"single\"\n        label={\n          <Fragment>\n            <Trans message=\"Filter content by\" />\n            <InfoTrigger />\n          </Fragment>\n        }\n        onSelectionChange={() => {\n          setValue('config.restrictionModelId', 'urlParam');\n        }}\n      >\n        <Item value={null}>\n          <Trans message=\"Don't filter content\" />\n        </Item>\n        {Object.values(config.restrictions).map(r => (\n          <Item key={r.value} value={r.value}>\n            <Trans {...r.label} />\n          </Item>\n        ))}\n      </FormSelect>\n      {children}\n    </div>\n  );\n}\n\nfunction InfoTrigger() {\n  return (\n    <InfoDialogTrigger\n      body={\n        <Fragment>\n          <Trans message=\"Allows specifying additional condition channel content should be filtered on. \" />\n          <ChannelsDocsLink className=\"mt-20\" hash=\"filter-content-by\" />\n        </Fragment>\n      }\n    />\n  );\n}\n","import {useTrans} from '@ui/i18n/use-trans';\nimport React, {useState} from 'react';\nimport {useFormContext} from 'react-hook-form';\nimport {UpdateChannelPayload} from '@common/admin/channels/requests/use-update-channel';\nimport {useValueLists} from '@common/http/value-lists';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {message} from '@ui/i18n/message';\nimport {Trans} from '@ui/i18n/trans';\nimport {Item} from '@ui/forms/listbox/item';\nimport {ChannelContentConfig} from '@common/admin/channels/channel-editor/channel-content-config';\nimport {ChannelRestrictionField} from '@common/admin/channels/channel-editor/controls/channel-restriction-field';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\n\ninterface Props {\n  className?: string;\n  config: ChannelContentConfig;\n}\nexport function AppChannelRestrictionField({className, config}: Props) {\n  const {watch} = useFormContext<UpdateChannelPayload>();\n  const contentType = watch('config.contentType');\n\n  if (contentType !== 'listAll') return null;\n\n  return (\n    <ChannelRestrictionField config={config} className={className}>\n      <RestrictionModelField config={config} />\n    </ChannelRestrictionField>\n  );\n}\n\ninterface RestrictionModelFieldProps {\n  config: ChannelContentConfig;\n}\nfunction RestrictionModelField({config}: RestrictionModelFieldProps) {\n  const {trans} = useTrans();\n  const [searchValue, setSearchValue] = useState('');\n  const {watch} = useFormContext<UpdateChannelPayload>();\n  const selectedId = watch('config.restrictionModelId');\n  const query = useValueLists(['genres'], {\n    searchQuery: searchValue,\n    selectedValue: selectedId,\n    type: watch('config.autoUpdateProvider'),\n  });\n\n  const selectedRestriction = watch(\n    'config.restriction',\n  ) as keyof typeof config.restrictions;\n\n  if (!selectedRestriction) return null;\n\n  const options = {\n    [GENRE_MODEL]: query.data?.genres,\n  } as Record<string, {value: string; name: string}[]>;\n  const restrictionLabel = config.restrictions[selectedRestriction].label;\n\n  // allow setting keyword to custom value, because there are too many keywords\n  // to put into autocomplete, ideally it would use async search from backend though\n\n  return (\n    <FormSelect\n      className=\"w-full flex-auto\"\n      name=\"config.restrictionModelId\"\n      selectionMode=\"single\"\n      showSearchField\n      searchPlaceholder={trans(message('Search...'))}\n      isAsync={selectedRestriction === 'genre'}\n      isLoading={selectedRestriction === 'genre' && query.isLoading}\n      inputValue={searchValue}\n      onInputValueChange={setSearchValue}\n      label={\n        <Trans\n          message=\":restriction name\"\n          values={{restriction: trans(restrictionLabel)}}\n        />\n      }\n    >\n      <Item value=\"urlParam\">\n        <Trans message=\"Dynamic (from url)\" />\n      </Item>\n      {options[selectedRestriction]?.map(option => (\n        <Item key={option.value} value={option.value}>\n          <Trans message={option.name} />\n        </Item>\n      ))}\n    </FormSelect>\n  );\n}\n","import React from 'react';\nimport {TRACK_MODEL} from '@app/web-player/tracks/track';\nimport {CreateChannelPageLayout} from '@common/admin/channels/channel-editor/create-channel-page-layout';\nimport {ChannelNameField} from '@common/admin/channels/channel-editor/controls/channel-name-field';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {ContentTypeField} from '@common/admin/channels/channel-editor/controls/content-type-field';\nimport {channelContentConfig} from '@app/admin/channels/channel-content-config';\nimport {ContentModelField} from '@common/admin/channels/channel-editor/controls/content-model-field';\nimport {ContentOrderField} from '@common/admin/channels/channel-editor/controls/content-order-field';\nimport {ContentLayoutFields} from '@common/admin/channels/channel-editor/controls/content-layout-fields';\nimport {ChannelEditorTabs} from '@common/admin/channels/channel-editor/channel-editor-tabs';\nimport {AppChannelAutoUpdateField} from '@app/admin/channels/app-channel-auto-update-field';\nimport {AppChannelRestrictionField} from '@app/admin/channels/app-channel-restriction-field';\n\nexport function CreateChannelPage() {\n  return (\n    <CreateChannelPageLayout\n      defaultValues={{\n        contentType: 'listAll',\n        contentModel: TRACK_MODEL,\n        contentOrder: 'created_at:desc',\n        layout: 'trackTable',\n        nestedLayout: 'carousel',\n        paginationType: 'infiniteScroll',\n      }}\n    >\n      <ChannelEditorTabs>\n        <ChannelNameField />\n        <FormSwitch\n          className=\"mt-24\"\n          name=\"config.hideTitle\"\n          description={\n            <Trans message=\"Whether title should be shown when displaying this channel on the site.\" />\n          }\n        >\n          <Trans message=\"Hide title\" />\n        </FormSwitch>\n        <FormTextField\n          name=\"description\"\n          label={<Trans message=\"Description\" />}\n          inputElementType=\"textarea\"\n          rows={2}\n          className=\"my-24\"\n        />\n        <ContentTypeField config={channelContentConfig} />\n        <AppChannelAutoUpdateField config={channelContentConfig} />\n        <ContentModelField config={channelContentConfig} className=\"my-24\" />\n        <AppChannelRestrictionField\n          config={channelContentConfig}\n          className=\"mb-24\"\n        />\n        <ContentOrderField config={channelContentConfig} className=\"mb-24\" />\n        <ContentLayoutFields config={channelContentConfig} className=\"mb-24\" />\n      </ChannelEditorTabs>\n    </CreateChannelPageLayout>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Channel} from '@common/channels/channel';\nimport {CreateChannelPayload} from '@common/admin/channels/requests/use-create-channel';\n\ninterface Response extends BackendResponse {\n  channel: Channel;\n}\n\nexport interface UpdateChannelPayload extends CreateChannelPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `channel/${id}`;\n\nexport function useUpdateChannel(form: UseFormReturn<UpdateChannelPayload>) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: (payload: UpdateChannelPayload) => updateChannel(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('channel'),\n      });\n      toast(trans(message('Channel updated')));\n      navigate('/admin/channels');\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateChannel({\n  id,\n  content, // don't need to send content to the server\n  ...payload\n}: UpdateChannelPayload): Promise<Response> {\n  return apiClient.put(Endpoint(id), payload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport React, {ReactNode} from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {PageStatus} from '@common/http/page-status';\nimport {useChannel} from '@common/channels/requests/use-channel';\nimport {Channel} from '@common/channels/channel';\nimport {\n  UpdateChannelPayload,\n  useUpdateChannel,\n} from '@common/admin/channels/requests/use-update-channel';\n\ninterface Props {\n  children: ReactNode;\n}\nexport function EditChannelPageLayout({children}: Props) {\n  const query = useChannel(undefined, 'editChannelPage');\n  if (query.data) {\n    return <PageContent channel={query.data.channel}>{children}</PageContent>;\n  }\n  return <PageStatus query={query} loaderIsScreen={false} />;\n}\n\ninterface PageContentProps {\n  channel: Channel;\n  children: ReactNode;\n}\nfunction PageContent({channel, children}: PageContentProps) {\n  const form = useForm<UpdateChannelPayload>({\n    // @ts-ignore\n    defaultValues: {\n      ...channel,\n    },\n  });\n  const updateChannel = useUpdateChannel(form);\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateChannel.mutate(values);\n      }}\n      title={\n        <Trans message=\"Edit “:name“ channel\" values={{name: channel.name}} />\n      }\n      isLoading={updateChannel.isPending}\n    >\n      {children}\n    </CrupdateResourceLayout>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DescriptionIcon = createSvgIcon(\n  <path d=\"M8 16h8v2H8zm0-4h8v2H8zm6-10H6c-1.1 0-2 .9-2 2v16c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm4 18H6V4h7v5h5v11z\" />\n, 'DescriptionOutlined');\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DashboardIcon = createSvgIcon(\n  <path d=\"M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z\" />\n, 'DashboardOutlined');\n","import {FormSelect, Option} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {ChannelContentConfig} from '@common/admin/channels/channel-editor/channel-content-config';\n\ninterface Props {\n  config: ChannelContentConfig;\n  className?: string;\n}\nexport function ChannelPaginationTypeField({className}: Props) {\n  return (\n    <FormSelect\n      className={className}\n      selectionMode=\"single\"\n      name=\"config.paginationType\"\n      label={<Trans message=\"Pagination type\" />}\n    >\n      <Option value=\"infiniteScroll\">\n        <Trans message=\"Infinite scroll\" />\n      </Option>\n      <Option value=\"lengthAware\">\n        <Trans message=\"List of page buttons\" />\n      </Option>\n      <Option value=\"simple\">\n        <Trans message=\"Next/previous page buttons only\" />\n      </Option>\n    </FormSelect>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PublicIcon = createSvgIcon(\n  <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-.61.08-1.21.21-1.78L8.99 15v1c0 1.1.9 2 2 2v1.93C7.06 19.43 4 16.07 4 12zm13.89 5.4c-.26-.81-1-1.4-1.9-1.4h-1v-3c0-.55-.45-1-1-1h-6v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41C17.92 5.77 20 8.65 20 12c0 2.08-.81 3.98-2.11 5.4z\" />\n, 'PublicOutlined');\n","import React, {Fragment} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function ChannelSeoFields() {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"config.seoTitle\"\n        label={<Trans message=\"SEO title\" />}\n        className=\"mb-24\"\n      />\n      <FormTextField\n        name=\"config.seoDescription\"\n        label={<Trans message=\"SEO description\" />}\n        inputElementType=\"textarea\"\n        rows={6}\n      />\n    </Fragment>\n  );\n}\n","export default \"__VITE_ASSET__4ae22a04__\"","import {createSvgIcon} from '../create-svg-icon';\n\nexport const RefreshIcon = createSvgIcon(\n  <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\n, 'RefreshOutlined');\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {Channel, ChannelConfig} from '@common/channels/channel';\nimport {channelQueryKey} from '@common/channels/requests/use-channel';\n\ninterface Response extends BackendResponse {\n  channel: Channel<NormalizedModel>;\n}\n\ninterface Payload {\n  channelConfig?: Partial<ChannelConfig>;\n}\n\nexport function useUpdateChannelContent(channelId: number | string) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: Payload) => updateChannel(channelId, payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: channelQueryKey(channelId),\n      });\n      toast(trans(message('Channel content updated')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateChannel(channelId: number | string, payload: Payload) {\n  return apiClient\n    .post<Response>(`channel/${channelId}/update-content`, {\n      ...payload,\n      normalizeContent: true,\n    })\n    .then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {Channel} from '@common/channels/channel';\n\ninterface Response extends BackendResponse {\n  channel: Channel<NormalizedModel>;\n}\n\ninterface Payload {\n  channelId: number | string;\n  modelType: string;\n  ids: (number | string)[];\n}\n\nexport function useReorderChannelContent() {\n  return useMutation({\n    mutationFn: (payload: Payload) => reorderContent(payload),\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction reorderContent({channelId, ids, modelType}: Payload) {\n  return apiClient\n    .post<Response>(`channel/${channelId}/reorder-content`, {\n      modelType,\n      ids,\n    })\n    .then(r => r.data);\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {channelQueryKey} from '@common/channels/requests/use-channel';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  channelId: number | string;\n  item: NormalizedModel;\n}\n\nexport function useAddToChannel() {\n  return useMutation({\n    mutationFn: (payload: Payload) => addToChannel(payload),\n    onSuccess: async (_, payload) => {\n      await queryClient.invalidateQueries({\n        queryKey: channelQueryKey(payload.channelId),\n      });\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction addToChannel({channelId, item}: Payload): Promise<Response> {\n  return apiClient\n    .post(`channel/${channelId}/add`, {\n      itemId: item.id,\n      itemType: item.model_type,\n    })\n    .then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {channelQueryKey} from '@common/channels/requests/use-channel';\n\ninterface Payload {\n  channelId: number | string;\n  item: NormalizedModel;\n}\n\nexport function useRemoveFromChannel() {\n  return useMutation({\n    mutationFn: (payload: Payload) => removeFromChannel(payload),\n    onSuccess: async (_, payload) => {\n      await queryClient.invalidateQueries({\n        queryKey: channelQueryKey(payload.channelId),\n      });\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction removeFromChannel({channelId, item}: Payload) {\n  return apiClient\n    .post(`channel/${channelId}/remove`, {\n      itemId: item.id,\n      itemType: item.model_type,\n    })\n    .then(r => r.data);\n}\n","import {useFormContext} from 'react-hook-form';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {Trans} from '@ui/i18n/trans';\nimport {Table} from '@common/ui/tables/table';\nimport {RowElementProps} from '@common/ui/tables/table-row';\nimport {useIsTouchDevice} from '@ui/utils/hooks/is-touch-device';\nimport React, {\n  cloneElement,\n  ReactElement,\n  ReactNode,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport {TableContext} from '@common/ui/tables/table-context';\nimport {DragPreviewRenderer} from '@ui/interactions/dnd/use-draggable';\nimport {\n  DropPosition,\n  useSortable,\n} from '@ui/interactions/dnd/sortable/use-sortable';\nimport clsx from 'clsx';\nimport {mergeProps} from '@react-aria/utils';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {DragHandleIcon} from '@ui/icons/material/DragHandle';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {DragPreview} from '@ui/interactions/dnd/drag-preview';\nimport {WarningIcon} from '@ui/icons/material/Warning';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport playlist from '../playlist.svg';\nimport {SvgImage} from '@ui/images/svg-image';\nimport {Link, useParams} from 'react-router-dom';\nimport {Button} from '@ui/buttons/button';\nimport {RefreshIcon} from '@ui/icons/material/Refresh';\nimport {UpdateChannelPayload} from '@common/admin/channels/requests/use-update-channel';\nimport {useUpdateChannelContent} from '@common/admin/channels/requests/use-update-channel-content';\nimport {ChannelContentSearchFieldProps} from '@common/admin/channels/channel-editor/channel-content-search-field';\nimport {useChannelContent} from '@common/channels/requests/use-channel-content';\nimport {PaginationControls} from '@common/ui/navigation/pagination-controls';\nimport {queryClient} from '@common/http/query-client';\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {moveItemInNewArray} from '@ui/utils/array/move-item-in-new-array';\nimport {useReorderChannelContent} from '@common/admin/channels/requests/use-reorder-channel-content';\nimport {useAddToChannel} from '@common/admin/channels/requests/use-add-to-channel';\nimport {useRemoveFromChannel} from '@common/admin/channels/requests/use-remove-from-channel';\nimport {Channel, ChannelContentItem} from '@common/channels/channel';\nimport {Select} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {UseQueryResult} from '@tanstack/react-query';\n\nconst columnConfig: ColumnConfig<NormalizedModel>[] = [\n  {\n    key: 'dragHandle',\n    width: 'w-42 flex-shrink-0',\n    header: () => <Trans message=\"Drag handle\" />,\n    hideHeader: true,\n    body: () => (\n      <DragHandleIcon className=\"cursor-pointer text-muted hover:text\" />\n    ),\n  },\n  {\n    key: 'name',\n    header: () => <Trans message=\"Content item\" />,\n    visibleInMode: 'all',\n    body: item => {\n      return (\n        <NameWithAvatar\n          image={item.image}\n          label={\n            item.model_type === 'channel' ? (\n              <Link\n                className=\"hover:underline\"\n                to={`/admin/channels/${item.id}/edit`}\n                target=\"_blank\"\n              >\n                {item.name}\n              </Link>\n            ) : (\n              item.name\n            )\n          }\n          description={item.description}\n        />\n      );\n    },\n  },\n  {\n    key: 'type',\n    header: () => <Trans message=\"Content type\" />,\n    width: 'w-100 flex-shrink-0',\n    body: item => <span className=\"capitalize\">{item.model_type}</span>,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    visibleInMode: 'all',\n    body: item => <RemoveItemColumn item={item} />,\n  },\n];\n\ninterface Props {\n  searchField: ReactElement<ChannelContentSearchFieldProps>;\n  title?: ReactNode;\n  noResultsMessage?: ReactNode;\n}\nexport function ChannelContentEditor({\n  searchField,\n  title,\n  noResultsMessage,\n}: Props) {\n  const {watch, getValues} = useFormContext<UpdateChannelPayload>();\n  const channel = getValues() as Channel<ChannelContentItem<NormalizedModel>>;\n  const [perPage, setPerPage] = useState<string | number>(\n    channel.content?.per_page ?? 100,\n  );\n  const contentType = watch('config.contentType');\n  const contentOrder = watch('config.contentOrder');\n  const addToChannel = useAddToChannel();\n  const query = useChannelContent<ChannelContentItem<NormalizedModel>>(\n    channel,\n    {loader: 'editChannelPage', paginate: 'simple', perPage: `${perPage}`},\n  );\n  const pagination = query.data!;\n\n  const filteredColumns = columnConfig.filter(col => {\n    // only show delete button when channel content is managed manually\n    if (col.key === 'actions' && contentType !== 'manual') {\n      return false;\n    }\n    // only show drag button when channel content and sorting is set to manual\n    if (\n      col.key === 'dragHandle' &&\n      (contentType !== 'manual' || contentOrder !== 'channelables.order:asc')\n    ) {\n      return false;\n    }\n    return true;\n  });\n\n  return (\n    <div className=\"mt-40\">\n      <div className=\"mb-40\">\n        <h2 className=\"mb-10 text-2xl\">\n          {title || <Trans message=\"Channel content\" />}\n        </h2>\n        <ContentNotEditableWarning />\n        <UpdateContentButton />\n        {contentType === 'manual'\n          ? cloneElement<ChannelContentSearchFieldProps>(searchField, {\n              onResultSelected: result => {\n                addToChannel.mutate({\n                  channelId: channel.id,\n                  item: result,\n                });\n              },\n            })\n          : null}\n      </div>\n      <Pagination\n        query={query}\n        perPage={perPage}\n        onPageChange={setPerPage}\n        className=\"mb-24\"\n      />\n      <Table\n        className=\"mt-24\"\n        columns={filteredColumns}\n        data={pagination?.data || []}\n        meta={query.queryKey}\n        renderRowAs={contentType === 'manual' ? ContentTableRow : undefined}\n        enableSelection={false}\n        hideHeaderRow\n      />\n      {!pagination?.data?.length\n        ? noResultsMessage || (\n            <IllustratedMessage\n              title={<Trans message=\"Channel is empty\" />}\n              description={\n                contentType === 'manual' ? (\n                  <Trans message=\"No content is attached to this channel yet.\" />\n                ) : (\n                  <Trans message=\"No content to show for this channel yet.\" />\n                )\n              }\n              image={<SvgImage src={playlist} />}\n            />\n          )\n        : null}\n      <Pagination\n        query={query}\n        perPage={perPage}\n        onPageChange={setPerPage}\n        className=\"mt-24\"\n      />\n    </div>\n  );\n}\n\ninterface PaginationProps {\n  query: UseQueryResult<PaginationResponse<unknown>, unknown>;\n  perPage: number | string;\n  onPageChange: (perPage: number | string) => void;\n  className?: string;\n}\nfunction Pagination({\n  query,\n  perPage,\n  onPageChange,\n  className,\n}: PaginationProps) {\n  if (!query.data) return;\n\n  return (\n    <div\n      className={clsx('flex items-center justify-between gap-24', className)}\n    >\n      <PaginationControls pagination={query.data} type=\"simple\" />\n      {query.data?.data.length >= query.data?.per_page && (\n        <Select\n          minWidth=\"min-w-auto\"\n          selectionMode=\"single\"\n          disabled={query.isLoading}\n          labelPosition=\"side\"\n          size=\"xs\"\n          label={<Trans message=\"Per page\" />}\n          selectedValue={`${perPage}`}\n          onSelectionChange={value => onPageChange(value)}\n          className=\"ml-auto\"\n        >\n          <Item value=\"50\">50</Item>\n          <Item value=\"100\">100</Item>\n          <Item value=\"200\">200</Item>\n          <Item value=\"500\">500</Item>\n        </Select>\n      )}\n    </div>\n  );\n}\n\nfunction ContentTableRow({\n  item,\n  children,\n  className,\n  ...domProps\n}: RowElementProps<NormalizedModel>) {\n  const isTouchDevice = useIsTouchDevice();\n  const {data, meta} = useContext(TableContext);\n  const {getValues} = useFormContext<UpdateChannelPayload>();\n  const domRef = useRef<HTMLTableRowElement>(null);\n  const reorderContent = useReorderChannelContent();\n  const previewRef = useRef<DragPreviewRenderer>(null);\n  const [dropPosition, setDropPosition] = useState<DropPosition>(null);\n\n  const {sortableProps} = useSortable({\n    ref: domRef,\n    disabled: isTouchDevice ?? false,\n    item,\n    items: data,\n    type: 'channelContentItem',\n    preview: previewRef,\n    strategy: 'line',\n    onDropPositionChange: position => {\n      setDropPosition(position);\n    },\n    onSortEnd: (oldIndex, newIndex) => {\n      // do optimistic reorder\n      const newPagination = queryClient.setQueryData<\n        PaginationResponse<unknown>\n      >(meta, pagination => {\n        if (pagination) {\n          pagination = {\n            ...pagination,\n            data: moveItemInNewArray(pagination.data, oldIndex, newIndex),\n          };\n        }\n        return pagination;\n      });\n\n      // reorder on backend\n      if (newPagination) {\n        reorderContent.mutate({\n          channelId: getValues('id'),\n          modelType: item.model_type,\n          ids: newPagination.data.map(item => (item as NormalizedModel).id),\n        });\n      }\n    },\n  });\n\n  return (\n    <div\n      className={clsx(\n        className,\n        dropPosition === 'before' && 'sort-preview-before',\n        dropPosition === 'after' && 'sort-preview-after',\n      )}\n      ref={domRef}\n      {...mergeProps(sortableProps, domProps)}\n    >\n      {children}\n      {!item.isPlaceholder && <RowDragPreview item={item} ref={previewRef} />}\n    </div>\n  );\n}\n\ninterface RowDragPreviewProps {\n  item: NormalizedModel;\n}\nconst RowDragPreview = React.forwardRef<\n  DragPreviewRenderer,\n  RowDragPreviewProps\n>(({item}, ref) => {\n  return (\n    <DragPreview ref={ref}>\n      {() => (\n        <div className=\"rounded bg-chip p-8 text-base shadow\">{item.name}</div>\n      )}\n    </DragPreview>\n  );\n});\n\ninterface RemoveItemColumnProps {\n  item: NormalizedModel;\n}\nfunction RemoveItemColumn({item}: RemoveItemColumnProps) {\n  const removeFromChannel = useRemoveFromChannel();\n  const {getValues} = useFormContext<UpdateChannelPayload>();\n  return (\n    <IconButton\n      size=\"md\"\n      className=\"text-muted\"\n      disabled={removeFromChannel.isPending}\n      onClick={() => {\n        removeFromChannel.mutate({\n          channelId: getValues('id'),\n          item: item,\n        });\n      }}\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n}\n\nfunction ContentNotEditableWarning() {\n  const {watch} = useFormContext<UpdateChannelPayload>();\n  const contentType = watch('config.contentType');\n\n  if (contentType === 'manual') {\n    return null;\n  }\n\n  return (\n    <div className=\"mb-20 mt-4 flex items-center gap-8\">\n      <WarningIcon size=\"xs\" />\n      <div className=\"text-xs text-muted\">\n        {contentType === 'listAll' ? (\n          <Trans message=\"This channel is listing all available content of specified type, and can't be curated manually.\" />\n        ) : null}\n        {contentType === 'autoUpdate' ? (\n          <Trans message=\"This channel content is set to update automatically and can't be curated manually.\" />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nfunction UpdateContentButton() {\n  const {slugOrId} = useParams();\n  const updateContent = useUpdateChannelContent(slugOrId!);\n  const {setValue, watch, getValues} = useFormContext<UpdateChannelPayload>();\n\n  if (watch('config.contentType') !== 'autoUpdate') {\n    return null;\n  }\n\n  return (\n    <Button\n      size=\"xs\"\n      variant=\"outline\"\n      color=\"primary\"\n      startIcon={<RefreshIcon />}\n      onClick={() => {\n        updateContent.mutate(\n          {\n            channelConfig: (getValues as any)('config'),\n          },\n          {\n            onSuccess: response => {\n              if (response.channel.content) {\n                (setValue as any)('content', response.channel.content);\n              }\n            },\n          },\n        );\n      }}\n      disabled={\n        updateContent.isPending ||\n        !watch('config.autoUpdateMethod') ||\n        !watch('id')\n      }\n    >\n      <Trans message=\"Update content now\" />\n    </Button>\n  );\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {NormalizedModel} from '@ui/types/normalized-model';\n\nexport interface SearchResponse extends BackendResponse {\n  results: NormalizedModel[];\n}\n\ninterface SearchParams {\n  query?: string;\n  limit?: number;\n  modelType: string;\n}\n\nexport function useAddableContent(params: SearchParams) {\n  return useQuery({\n    queryKey: ['search', params],\n    queryFn: () => search(params),\n    //enabled: !!params.query,\n    placeholderData: params.query ? keepPreviousData : undefined,\n  });\n}\n\nfunction search(params: SearchParams) {\n  return apiClient\n    .get<SearchResponse>(`channel/search-for-addable-content`, {params})\n    .then(response => response.data);\n}\n","import {NormalizedModel} from '@ui/types/normalized-model';\nimport {useFormContext} from 'react-hook-form';\nimport {UpdateChannelPayload} from '@common/admin/channels/requests/use-update-channel';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport React, {useState} from 'react';\nimport {useAddableContent} from '@common/admin/channels/requests/use-addable-content';\nimport {ComboBox} from '@ui/forms/combobox/combobox';\nimport {message} from '@ui/i18n/message';\nimport {SearchIcon} from '@ui/icons/material/Search';\nimport {Item} from '@ui/forms/listbox/item';\n\nexport interface ChannelContentSearchFieldProps {\n  onResultSelected?: (result: NormalizedModel) => void;\n  imgRenderer?: (result: NormalizedModel) => React.ReactNode;\n}\nexport function ChannelContentSearchField({\n  onResultSelected,\n  imgRenderer,\n}: ChannelContentSearchFieldProps) {\n  const {watch} = useFormContext<UpdateChannelPayload>();\n  const contentModel = watch('config.contentModel');\n  const {trans} = useTrans();\n  const [query, setQuery] = useState('');\n  const {isFetching, data} = useAddableContent({\n    query,\n    modelType: contentModel,\n    limit: 20,\n  });\n  return (\n    <ComboBox\n      isAsync\n      placeholder={trans(message('Search for content to add...'))}\n      isLoading={isFetching}\n      inputValue={query}\n      onInputValueChange={setQuery}\n      clearInputOnItemSelection\n      blurReferenceOnItemSelection\n      selectionMode=\"none\"\n      openMenuOnFocus\n      floatingMaxHeight={670}\n      startAdornment={<SearchIcon />}\n      hideEndAdornment\n    >\n      {data?.results.map(result => (\n        <Item\n          key={result.id}\n          value={result.id}\n          onSelected={() => onResultSelected?.(result)}\n          startIcon={imgRenderer ? imgRenderer(result) : null}\n          description={result.description}\n          textLabel={result.name}\n        >\n          {result.name}\n        </Item>\n      ))}\n    </ComboBox>\n  );\n}\n","import {NormalizedModel} from '@ui/types/normalized-model';\nimport clsx from 'clsx';\nimport {ImageIcon} from '@ui/icons/material/Image';\n\ninterface Props {\n  item: NormalizedModel;\n}\nexport function ChannelContentItemImage({item}: Props) {\n  const imageClassName = clsx(\n    'aspect-square w-46 rounded object-cover',\n    !item.image ? 'flex items-center justify-center' : 'block',\n  );\n\n  return item.image ? (\n    <img className={imageClassName} src={item.image} alt=\"\" />\n  ) : (\n    <span className={imageClassName}>\n      <ImageIcon className=\"max-w-[60%] text-divider\" size=\"text-6xl\" />\n    </span>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {EditChannelPageLayout} from '@common/admin/channels/channel-editor/edit-channel-page-layout';\nimport {ChannelNameField} from '@common/admin/channels/channel-editor/controls/channel-name-field';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {ContentTypeField} from '@common/admin/channels/channel-editor/controls/content-type-field';\nimport {channelContentConfig} from '@app/admin/channels/channel-content-config';\nimport {ContentModelField} from '@common/admin/channels/channel-editor/controls/content-model-field';\nimport {ContentOrderField} from '@common/admin/channels/channel-editor/controls/content-order-field';\nimport {ContentLayoutFields} from '@common/admin/channels/channel-editor/controls/content-layout-fields';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {DescriptionIcon} from '@ui/icons/material/Description';\nimport {InfoDialogTrigger} from '@ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\nimport {SettingsIcon} from '@ui/icons/material/Settings';\nimport {DashboardIcon} from '@ui/icons/material/Dashboard';\nimport {ChannelPaginationTypeField} from '@common/admin/channels/channel-editor/controls/channel-pagination-type-field';\nimport {PublicIcon} from '@ui/icons/material/Public';\nimport {ChannelSeoFields} from '@common/admin/channels/channel-editor/controls/channel-seo-fields';\nimport {ChannelContentEditor} from '@common/admin/channels/channel-editor/channel-content-editor';\nimport {\n  ChannelContentSearchField,\n  ChannelContentSearchFieldProps,\n} from '@common/admin/channels/channel-editor/channel-content-search-field';\nimport {ChannelContentItemImage} from '@app/admin/channels/channel-content-item-image';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {AppChannelAutoUpdateField} from '@app/admin/channels/app-channel-auto-update-field';\nimport {AppChannelRestrictionField} from '@app/admin/channels/app-channel-restriction-field';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\n\nexport function EditChannelPage() {\n  const {spotify_is_setup, lastfm_is_setup} = useSettings();\n  return (\n    <EditChannelPageLayout>\n      <Fragment>\n        <Accordion variant=\"outline\">\n          <AccordionItem\n            label={<Trans message=\"Title & description\" />}\n            startIcon={<DescriptionIcon />}\n          >\n            <ChannelNameField />\n            <FormSwitch\n              className=\"mt-24\"\n              name=\"config.hideTitle\"\n              description={\n                <Trans message=\"Whether title should be shown when displaying this channel on the site.\" />\n              }\n            >\n              <Trans message=\"Hide title\" />\n            </FormSwitch>\n            <FormTextField\n              name=\"description\"\n              label={<Trans message=\"Description\" />}\n              inputElementType=\"textarea\"\n              rows={1}\n              className=\"mt-24\"\n            />\n            <FormTextField\n              name=\"config.adminDescription\"\n              label={\n                <Fragment>\n                  <Trans message=\"Internal description\" />\n                  <InfoDialogTrigger\n                    body={\n                      <Trans message=\"This describes the purpose of the channel and is only visible in admin area.\" />\n                    }\n                  />\n                </Fragment>\n              }\n              inputElementType=\"textarea\"\n              rows={1}\n              className=\"mt-24\"\n            />\n          </AccordionItem>\n          <AccordionItem\n            label={<Trans message=\"Content settings\" />}\n            startIcon={<SettingsIcon />}\n          >\n            <ContentTypeField config={channelContentConfig} className=\"mb-24\" />\n            <AppChannelAutoUpdateField\n              config={channelContentConfig}\n              className=\"mb-24\"\n            />\n            <ContentModelField\n              config={channelContentConfig}\n              className=\"mb-24\"\n            />\n            <AppChannelRestrictionField\n              config={channelContentConfig}\n              className=\"mb-24\"\n            />\n            <ContentOrderField\n              config={channelContentConfig}\n              className=\"mb-24\"\n            />\n          </AccordionItem>\n          <AccordionItem\n            label={<Trans message=\"Layout\" />}\n            startIcon={<DashboardIcon />}\n          >\n            <ContentLayoutFields\n              config={channelContentConfig}\n              className=\"mb-24\"\n            />\n            <ChannelPaginationTypeField config={channelContentConfig} />\n          </AccordionItem>\n          <AccordionItem\n            label={<Trans message=\"SEO\" />}\n            startIcon={<PublicIcon />}\n          >\n            <ChannelSeoFields />\n          </AccordionItem>\n        </Accordion>\n        <ChannelContentEditor searchField={<SearchField />} />\n      </Fragment>\n    </EditChannelPageLayout>\n  );\n}\n\nfunction SearchField(props: ChannelContentSearchFieldProps) {\n  return (\n    <ChannelContentSearchField\n      {...props}\n      imgRenderer={item => <ChannelContentItemImage item={item} />}\n    />\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const HomeIcon = createSvgIcon(\n  <path d=\"M240-200h120v-240h240v240h120v-360L480-740 240-560v360Zm-80 80v-480l320-240 320 240v480H520v-240h-80v240H160Zm320-350Z\" />,\n  'HomeOutlined',\n  '0 -960 960 960',\n);\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Link} from 'react-router-dom';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport React from 'react';\nimport {Channel} from '@common/channels/channel';\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {HomeIcon} from '@ui/icons/material/Home';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\n\nexport const ChannelsDatatableColumns: ColumnConfig<Channel>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    width: 'flex-3',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Name\" />,\n    body: channel => {\n      return (\n        <div>\n          <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap font-medium\">\n            <ChannelName channel={channel} />\n          </div>\n          {channel.config.adminDescription && (\n            <p className=\"max-w-680 whitespace-normal text-xs text-muted\">\n              {channel.config.adminDescription}\n            </p>\n          )}\n        </div>\n      );\n    },\n  },\n  {\n    key: 'content',\n    allowsSorting: false,\n    header: () => <Trans message=\"Content\" />,\n    body: channel => <ContentType channel={channel} />,\n  },\n  {\n    key: 'content_type',\n    allowsSorting: false,\n    header: () => <Trans message=\"Content type\" />,\n    body: channel => (\n      <span className=\"capitalize\">\n        {channel.config.contentModel ? (\n          <Trans message={channel.config.contentModel} />\n        ) : undefined}\n      </span>\n    ),\n  },\n  {\n    key: 'internal',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    hideHeader: true,\n    header: () => <Trans message=\"Internal\" />,\n    body: channel => <InternalColumn channel={channel} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    maxWidth: 'max-w-100',\n    header: () => <Trans message=\"Last updated\" />,\n    body: channel =>\n      channel.updated_at ? <FormattedDate date={channel.updated_at} /> : '',\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    hideHeader: true,\n    visibleInMode: 'all',\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    body: channel => (\n      <Link to={`${channel.id}/edit`} className=\"text-muted\">\n        <IconButton size=\"md\">\n          <EditIcon />\n        </IconButton>\n      </Link>\n    ),\n  },\n];\n\ninterface ContentTypeProps {\n  channel: Channel;\n}\nfunction ContentType({channel}: ContentTypeProps) {\n  switch (channel.config.contentType) {\n    case 'listAll':\n      return <Trans message=\"List all\" />;\n    case 'manual':\n      return <Trans message=\"Managed manually\" />;\n    case 'autoUpdate':\n      return <Trans message=\"Updated automatically\" />;\n  }\n}\n\ninterface ChannelNameProps {\n  channel: Channel;\n}\nfunction ChannelName({channel}: ChannelNameProps) {\n  // link will not work without specific genre name in channel url\n  if (\n    channel.config.restriction &&\n    channel.config.restrictionModelId === 'urlParam'\n  ) {\n    return channel.name;\n  }\n  return (\n    <a\n      className=\"outline-none hover:underline focus-visible:underline\"\n      href={`channel/${channel.slug}`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      {channel.name}\n    </a>\n  );\n}\n\nfunction InternalColumn({channel}: ChannelNameProps) {\n  const {homepage} = useSettings();\n  const internalLabel = channel.internal ? (\n    <Tooltip\n      label={\n        <Trans message=\"This channel is required for some site functionality to work properly and can't be deleted.\" />\n      }\n    >\n      <div>\n        <Chip className=\"w-max\" size=\"xs\" radius=\"rounded-panel\">\n          <Trans message=\"Internal\" />\n        </Chip>\n      </div>\n    </Tooltip>\n  ) : (\n    ''\n  );\n\n  const isHomepage =\n    homepage?.type === 'channels' && `${homepage.value}` === `${channel.id}`;\n\n  return (\n    <div className=\"flex items-center gap-6\">\n      {internalLabel}\n      {isHomepage ? <HomeIcon className=\"text-muted\" size=\"sm\" /> : null}\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  preset: string;\n}\n\nexport function useApplyChannelPreset() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: Payload) => resetChannels(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('channel'),\n      });\n      toast(trans(message('Channel preset applied')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction resetChannels(payload: Payload) {\n  return apiClient\n    .post<Response>('channel/apply-preset', payload)\n    .then(r => r.data);\n}\n","import React, {Fragment} from 'react';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport playlist from './playlist.svg';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {InfoDialogTrigger} from '@ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\nimport {Link} from 'react-router-dom';\nimport {ChannelsDatatableColumns} from '@common/admin/channels/channels-datatable-columns';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useApplyChannelPreset} from '@common/admin/channels/requests/use-apply-channel-preset';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\nimport {useDataTable} from '@common/datatable/page/data-table-context';\nimport {Channel} from '@common/channels/channel';\nimport {Item} from '@ui/forms/listbox/item';\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\nimport {openDialog} from '@ui/overlays/store/dialog-store';\nimport {ChannelsDocsLink} from '@common/admin/channels/channels-docs-link';\nimport {Trans} from '@ui/i18n/trans';\nimport {Menu, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {Button} from '@ui/buttons/button';\n\ninterface ChannelPresetConfig {\n  preset: string;\n  name: string;\n  description: string;\n}\n\nexport function ChannelsDatatablePage() {\n  return (\n    <DataTablePage\n      endpoint=\"channel\"\n      title={<Trans message=\"Channels\" />}\n      headerContent={<InfoTrigger />}\n      headerItemsAlign=\"items-center\"\n      queryParams={{type: 'channel'}}\n      columns={ChannelsDatatableColumns}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      cellHeight=\"h-52\"\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={playlist}\n          title={<Trans message=\"No channels have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching channels\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction InfoTrigger() {\n  return (\n    <InfoDialogTrigger\n      body={\n        <Fragment>\n          <Trans message=\"Channels are used to create pages that show various content on the site.\" />\n          <ChannelsDocsLink className=\"mt-14\" />\n        </Fragment>\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  const {query} = useDataTable<Channel, {presets: ChannelPresetConfig[]}>();\n  return (\n    <Fragment>\n      <MenuTrigger\n        onItemSelected={preset => openDialog(ApplyPresetDialog, {preset})}\n      >\n        <Button\n          variant=\"outline\"\n          color=\"primary\"\n          size=\"sm\"\n          endIcon={<KeyboardArrowDownIcon />}\n          disabled={!query.data?.presets.length}\n        >\n          <Trans message=\"Apply preset\" />\n        </Button>\n        <Menu>\n          {query.data?.presets.map(preset => (\n            <Item\n              key={preset.preset}\n              value={preset.preset}\n              description={<Trans message={preset.description} />}\n            >\n              <Trans message={preset.name} />\n            </Item>\n          ))}\n        </Menu>\n      </MenuTrigger>\n      <DataTableAddItemButton elementType={Link} to=\"new\">\n        <Trans message=\"Add new channel\" />\n      </DataTableAddItemButton>\n    </Fragment>\n  );\n}\n\ninterface ApplyPresetDialogProps {\n  preset: string;\n}\nfunction ApplyPresetDialog({preset}: ApplyPresetDialogProps) {\n  const {close} = useDialogContext();\n  const resetChannels = useApplyChannelPreset();\n  return (\n    <ConfirmationDialog\n      isLoading={resetChannels.isPending}\n      onConfirm={() => {\n        resetChannels.mutate({preset}, {onSuccess: () => close()});\n      }}\n      isDanger\n      title={<Trans message=\"Apply preset\" />}\n      body={\n        <Trans message=\"Are you sure you want to apply this channel preset? This will delete all current channels and leave only channels from the selected preset.\" />\n      }\n      confirm={<Trans message=\"Apply\" />}\n    />\n  );\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {useQuery} from '@tanstack/react-query';\n\ninterface Response extends BackendResponse {\n  models: {model: string; name: string}[];\n}\n\nexport function useSearchModels() {\n  return useQuery({\n    queryKey: ['search-models'],\n    queryFn: () => fetchModels(),\n  });\n}\n\nfunction fetchModels(): Promise<Response> {\n  return apiClient.get('admin/search/models').then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Payload {\n  model: string;\n  driver: string;\n}\n\nexport function useImportSearchModels() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: Payload) => importModels(payload),\n    onSuccess: () => {\n      toast(trans(message('Imported search models')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction importModels(payload: Payload): Promise<Response> {\n  return apiClient.post('admin/search/import', payload).then(r => r.data);\n}\n","import {FormSelect, Select} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {AdminSettingsWithFiles} from '@common/admin/settings/requests/use-update-admin-settings';\nimport {Item} from '@ui/forms/listbox/item';\nimport {SectionHelper} from '@common/ui/other/section-helper';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport React, {Fragment, useState} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {useSearchModels} from '@common/admin/settings/pages/search-settings/requests/use-search-models';\nimport {Button} from '@ui/buttons/button';\nimport {useImportSearchModels} from '@common/admin/settings/pages/search-settings/requests/use-import-search-models';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\n\nexport function SearchSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Search\" />}\n      description={\n        <Trans message=\"Configure search method used on the site as well as related 3rd party integrations.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      server: {\n        scout_driver: data.server.scout_driver ?? 'mysql',\n        scout_mysql_mode: data.server.scout_mysql_mode ?? 'basic',\n        algolia_app_id: data.server.algolia_app_id ?? '',\n        algolia_secret: data.server.algolia_secret ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <SearchMethodSelect />\n      <ImportRecordsPanel />\n    </AdminSettingsForm>\n  );\n}\n\nfunction SearchMethodSelect() {\n  const {watch} = useFormContext<AdminSettingsWithFiles>();\n  const selectedMethod = watch('server.scout_driver');\n\n  return (\n    <SettingsErrorGroup name=\"search_group\" separatorBottom={false}>\n      {isInvalid => (\n        <Fragment>\n          <FormSelect\n            invalid={isInvalid}\n            name=\"server.scout_driver\"\n            selectionMode=\"single\"\n            label={<Trans message=\"Search method\" />}\n            description={\n              <Trans message=\"Which method should be used for search related functionality across the site.\" />\n            }\n          >\n            <Item value=\"mysql\">Mysql</Item>\n            <Item value=\"meilisearch\">Meilisearch</Item>\n            <Item value=\"tntsearch\">TNTSearch</Item>\n            <Item value=\"Matchish\\ScoutElasticSearch\\Engines\\ElasticSearchEngine\">\n              Elasticsearch\n            </Item>\n            <Item value=\"algolia\">Algolia</Item>\n          </FormSelect>\n          {selectedMethod === 'mysql' && <MysqlFields />}\n          {selectedMethod === 'meilisearch' && <MeilisearchFields />}\n          {selectedMethod === 'algolia' && <AlgoliaFields />}\n          {selectedMethod ===\n            'Matchish\\\\ScoutElasticSearch\\\\Engines\\\\ElasticSearchEngine' && (\n            <ElasticsearchField />\n          )}\n        </Fragment>\n      )}\n    </SettingsErrorGroup>\n  );\n}\n\nfunction MysqlFields() {\n  const {clearErrors} = useFormContext<AdminSettingsWithFiles>();\n  return (\n    <FormSelect\n      className=\"mt-24\"\n      name=\"server.scout_mysql_mode\"\n      selectionMode=\"single\"\n      label={<Trans message=\"MySQL mode\" />}\n      onSelectionChange={() => {\n        clearErrors();\n      }}\n    >\n      <Item value=\"basic\">\n        <Trans message=\"Basic\" />\n      </Item>\n      <Item value=\"extended\">\n        <Trans message=\"Extended\" />\n      </Item>\n      <Item value=\"fulltext\">\n        <Trans message=\"Fulltext\" />\n      </Item>\n    </FormSelect>\n  );\n}\n\nfunction MeilisearchFields() {\n  return (\n    <SectionHelper\n      className=\"mt-24\"\n      color=\"warning\"\n      title={<Trans message=\"Important!\" />}\n      description={\n        <Trans\n          message=\"<a>Meilisearch</a> needs to be installed and running for this method to work.\"\n          values={{\n            a: parts => (\n              <a\n                href=\"https://www.meilisearch.com\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {parts}\n              </a>\n            ),\n          }}\n        />\n      }\n    />\n  );\n}\n\nfunction ElasticsearchField() {\n  return (\n    <SectionHelper\n      className=\"mt-24\"\n      color=\"warning\"\n      title={<Trans message=\"Important!\" />}\n      description={\n        <Trans\n          message=\"<a>Elasticsearch</a> needs to be installed and running for this method to work.\"\n          values={{\n            a: parts => (\n              <a href=\"https://www.elastic.co\" target=\"_blank\" rel=\"noreferrer\">\n                {parts}\n              </a>\n            ),\n          }}\n        />\n      }\n    />\n  );\n}\n\nfunction AlgoliaFields() {\n  return (\n    <Fragment>\n      <FormTextField\n        className=\"mt-24\"\n        name=\"server.algolia_app_id\"\n        label={<Trans message=\"Algolia app ID\" />}\n        required\n      />\n      <FormTextField\n        className=\"mt-24\"\n        name=\"server.algolia_secret\"\n        label={<Trans message=\"Algolia app secret\" />}\n        required\n      />\n    </Fragment>\n  );\n}\n\nfunction ImportRecordsPanel() {\n  const {getValues} = useFormContext<AdminSettingsWithFiles>();\n  const {data} = useSearchModels();\n  const importModels = useImportSearchModels();\n  const [selectedModel, setSelectedModel] = useState('*');\n  return (\n    <SectionHelper\n      className=\"mt-34\"\n      color=\"neutral\"\n      title={<Trans message=\"Import records\" />}\n      description={\n        <span>\n          <Trans message=\"Whenever a new search method is enabled, records that already exist in database need to be imported into the index. All records created after search method is enabled will be imported automatically.\" />\n          <br />\n          <br />\n          <Trans message=\"Depending on number of records in database, importing could take some time. Don't close this window while it is in progress.\" />\n        </span>\n      }\n      actions={\n        <div className=\"mt-10 border-t pt-14\">\n          <Select\n            selectionMode=\"single\"\n            label={<Trans message=\"What to import?\" />}\n            selectedValue={selectedModel}\n            onSelectionChange={newValue => {\n              setSelectedModel(newValue as string);\n            }}\n          >\n            <Item value=\"*\">\n              <Trans message=\"Everything\" />\n            </Item>\n            {data?.models.map(item => (\n              <Item value={item.model} key={item.model}>\n                <Trans message={item.name} />\n              </Item>\n            ))}\n          </Select>\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            className=\"mb-8 mt-24\"\n            disabled={importModels.isPending}\n            onClick={() => {\n              importModels.mutate({\n                model: selectedModel,\n                driver: getValues('server.scout_driver')!,\n              });\n            }}\n          >\n            <Trans message=\"Import now\" />\n          </Button>\n        </div>\n      }\n    />\n  );\n}\n","import {FormSelect} from '@ui/forms/select/select';\nimport {Trans} from '@ui/i18n/trans';\nimport {useForm, useFormContext} from 'react-hook-form';\nimport {Item} from '@ui/forms/listbox/item';\nimport React, {Fragment} from 'react';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {AdminSettingsWithFiles} from '@common/admin/settings/requests/use-update-admin-settings';\nimport {SettingsErrorGroup} from '@common/admin/settings/form/settings-error-group';\nimport {LearnMoreLink} from '@common/admin/settings/form/learn-more-link';\n\nexport function AutomationSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"Content automation\" />}\n      description={\n        <Trans message=\"Select and configure providers that will be used to automatically import artist, album, track and other content.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        artist_provider: data.client.artist_provider ?? 'local',\n        album_provider: data.client.album_provider ?? 'local',\n        search_provider: data.client.search_provider ?? 'local',\n        artist_bio_provider: data.client.artist_bio_provider ?? 'local',\n        wikipedia_language: data.client.wikipedia_language ?? 'en',\n        player: {\n          lyrics_automate: data.client.player?.lyrics_automate ?? false,\n        },\n      },\n      server: {\n        spotify_id: data.server.spotify_id ?? '',\n        spotify_secret: data.server.spotify_secret ?? '',\n        lastfm_api_key: data.server.lastfm_api_key ?? '',\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <div className=\"mb-20 border-b\">\n        <FormSwitch\n          className=\"mb-24\"\n          name=\"client.artist_provider\"\n          value=\"spotify\"\n          description={\n            <Trans message=\"This will automatically import, and periodically update, all metadata available on spotify about the artist when user visits that artist's page.\" />\n          }\n        >\n          <Trans message=\"Artist automation\" />\n        </FormSwitch>\n        <WikipediaFields />\n      </div>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.album_provider\"\n        value=\"spotify\"\n        description={\n          <Trans message=\"This will automatically import, and periodically update, all metadata available on spotify about an when user visits that album's page.\" />\n        }\n      >\n        <Trans message=\"Album automation\" />\n      </FormSwitch>\n      <FormSelect\n        className=\"mb-24\"\n        name=\"client.search_provider\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Search method\" />}\n        description={\n          <Trans message=\"Which method should be used for user facing search in the web player.\" />\n        }\n      >\n        <Item\n          value=\"spotify\"\n          description={\n            <Trans message=\"Search on the site will directly connect to, and search spotify. Any artist, album and track available on spotify will be discoverable via search, without needing to import or create it first.\" />\n          }\n        >\n          <Trans message=\"Spotify\" />\n        </Item>\n        <Item\n          value=\"local\"\n          description={\n            <Trans message=\"Will only search content that was created or imported from backstage or admin area. This can be further configured from 'Local search' settings page.\" />\n          }\n        >\n          <Trans message=\"Local\" />\n        </Item>\n        <Item\n          value=\"localAndSpotify\"\n          description={\n            <Trans message=\"Will combine search results from both 'local' and 'spotify' methods. If there are identical matches, local results will be preferred.\" />\n          }\n        >\n          <Trans message=\"Local and spotify\" />\n        </Item>\n      </FormSelect>\n      <SpotifyFields />\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.player.lyrics_automate\"\n        value=\"spotify\"\n        description={\n          <Trans message=\"Try to automatically find and import lyrics based on song and artist name. Lyrics can still be added manually, if this is disabled.\" />\n        }\n      >\n        <Trans message=\"Lyrics automation\" />\n      </FormSwitch>\n    </AdminSettingsForm>\n  );\n}\n\nfunction WikipediaFields() {\n  const {watch} = useFormContext<AdminSettingsWithFiles>();\n  return (\n    <Fragment>\n      <FormSelect\n        className=\"mb-24\"\n        name=\"client.artist_bio_provider\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Artist biography provider\" />}\n        description={\n          <Trans message=\"Which method should be used for user facing search in the web player.\" />\n        }\n      >\n        <Item\n          value=\"wikipedia\"\n          description={\n            <Trans message=\"Will import artist biography from wikipedia in the selected language.\" />\n          }\n        >\n          <Trans message=\"Wikipedia\" />\n        </Item>\n        <Item\n          value=\"local\"\n          description={\n            <Trans message=\"Will only show artist biography that was manually added from admin area or backstage.\" />\n          }\n        >\n          <Trans message=\"Local\" />\n        </Item>\n      </FormSelect>\n      {watch('client.artist_bio_provider') === 'wikipedia' && (\n        <FormTextField\n          className=\"mb-24\"\n          minLength={2}\n          maxLength={2}\n          name=\"client.wikipedia_language\"\n          label={<Trans message=\"Wikipedia language\" />}\n          description={\n            <Trans message=\"ISO 639-1 (two letter) language code.\" />\n          }\n        />\n      )}\n    </Fragment>\n  );\n}\n\nfunction SpotifyFields() {\n  const {watch: w} = useFormContext<AdminSettingsWithFiles>();\n  const shouldShow = [\n    w('client.artist_provider'),\n    w('client.album_provider'),\n    w('client.search_provider'),\n  ].some(provider => `${provider}`.toLowerCase().includes('spotify'));\n\n  if (!shouldShow) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <SettingsErrorGroup name=\"spotify_group\">\n        {isInvalid => (\n          <Fragment>\n            <FormTextField\n              invalid={isInvalid}\n              name=\"server.spotify_id\"\n              label={<Trans message=\"Spotify ID\" />}\n              className=\"mb-24\"\n              required\n            />\n            <FormTextField\n              invalid={isInvalid}\n              name=\"server.spotify_secret\"\n              label={<Trans message=\"Spotify secret\" />}\n              required\n              description={\n                <LearnMoreLink link=\"https://marina.moda\" />\n              }\n            />\n          </Fragment>\n        )}\n      </SettingsErrorGroup>\n      <FormTextField\n        className=\"mb-24\"\n        name=\"server.lastfm_api_key\"\n        label={<Trans message=\"LastFM Api Key\" />}\n        description={\n          <LearnMoreLink link=\"https://marina.moda\" />\n        }\n      />\n    </Fragment>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {artistPageTabs} from '@app/web-player/artists/artist-page-tabs';\nimport React, {Fragment, ReactNode, useRef} from 'react';\nimport {DragPreviewRenderer} from '@ui/interactions/dnd/use-draggable';\nimport {useFormContext} from 'react-hook-form';\nimport {moveItemInNewArray} from '@ui/utils/array/move-item-in-new-array';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {DragHandleIcon} from '@ui/icons/material/DragHandle';\nimport {Checkbox} from '@ui/forms/toggle/checkbox';\nimport {DragPreview} from '@ui/interactions/dnd/drag-preview';\nimport clsx from 'clsx';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {Item} from '@ui/forms/listbox/item';\nimport {useSortable} from '@ui/interactions/dnd/sortable/use-sortable';\nimport {AdminSettingsWithFiles} from '@common/admin/settings/requests/use-update-admin-settings';\n\nexport function ArtistPagePanel() {\n  const {watch} = useFormContext<AdminSettingsWithFiles>();\n  const tabs = watch('client.artistPage.tabs') || [];\n  return (\n    <div>\n      <div className=\"mb-14 text-sm\">\n        <Trans message=\"Artist page tabs\" />\n        <div className=\"text-xs text-muted\">\n          <Trans message=\"Select which tabs should appear on artist page and in which order.\" />\n        </div>\n      </div>\n      {tabs.map(tab => (\n        <Fragment key={tab.id}>{getListItem(tab.id)}</Fragment>\n      ))}\n      <FormSelect\n        className=\"my-24\"\n        name=\"client.player.default_artist_view\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Default albums layout\" />}\n        description={\n          <Trans message=\"How should albums on main artist page be displayed by default.\" />\n        }\n      >\n        <Item value=\"list\">\n          <Trans message=\"List\" />\n        </Item>\n        <Item value=\"grid\">\n          <Trans message=\"Grid\" />\n        </Item>\n      </FormSelect>\n      <FormSwitch\n        name=\"client.artistPage.showDescription\"\n        description={\n          <Trans message=\"Whether short artist biography be shown in main artist page header.\" />\n        }\n      >\n        <Trans message=\"Show description\" />\n      </FormSwitch>\n    </div>\n  );\n}\n\nfunction getListItem(id: string) {\n  switch (id) {\n    case artistPageTabs.tracks:\n      return (\n        <ArtistTabListItem\n          id={artistPageTabs.tracks}\n          title={<Trans message=\"Tracks\" />}\n          description={\n            <Trans message=\"Show all artist tracks in a list view.\" />\n          }\n        />\n      );\n    case artistPageTabs.albums:\n      return (\n        <ArtistTabListItem\n          id={artistPageTabs.albums}\n          title={<Trans message=\"Albums\" />}\n          description={\n            <Trans message=\"Show all artist albums in a list view.\" />\n          }\n        />\n      );\n    case artistPageTabs.followers:\n      return (\n        <ArtistTabListItem\n          id={artistPageTabs.followers}\n          title={<Trans message=\"Followers\" />}\n          description={\n            <Trans message=\"Shows all users that are currently following an artist.\" />\n          }\n        />\n      );\n    case artistPageTabs.similar:\n      return (\n        <ArtistTabListItem\n          id={artistPageTabs.similar}\n          title={<Trans message=\"Similar artists\" />}\n          description={<Trans message=\"Shows similar artists.\" />}\n        />\n      );\n    case artistPageTabs.about:\n      return (\n        <ArtistTabListItem\n          id={artistPageTabs.about}\n          title={<Trans message=\"About\" />}\n          description={\n            <Trans message=\"Shows artist biography/description as well as extra images\" />\n          }\n        />\n      );\n    case artistPageTabs.discography:\n      return (\n        <ArtistTabListItem\n          id={artistPageTabs.discography}\n          title={<Trans message=\"Discography\" />}\n          description={\n            <Trans message=\"Shows all artist albums in grid or list view.\" />\n          }\n        />\n      );\n  }\n}\n\ninterface ArtistTabListItemProps {\n  id: string;\n  title: ReactNode;\n  description: ReactNode;\n}\nfunction ArtistTabListItem({title, description, id}: ArtistTabListItemProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const previewRef = useRef<DragPreviewRenderer>(null);\n  const {watch, setValue} = useFormContext<AdminSettingsWithFiles>();\n  const tabs = watch('client.artistPage.tabs') || [];\n  const ids = tabs.map(tab => tab.id);\n  const isChecked = tabs.find(tab => tab.id === id)?.active;\n  const isFirst = ids[0] === id;\n\n  const {sortableProps, dragHandleRef} = useSortable({\n    ref,\n    item: id,\n    items: ids,\n    type: 'artistPageTabs',\n    preview: previewRef,\n    strategy: 'line',\n    onSortEnd: (oldIndex, newIndex) => {\n      setValue(\n        'client.artistPage.tabs',\n        moveItemInNewArray(tabs, oldIndex, newIndex),\n        {shouldDirty: true},\n      );\n    },\n  });\n\n  return (\n    <Fragment>\n      <div\n        className={clsx(\n          'flex w-full items-center gap-8 border-b py-6',\n          isFirst && 'border-t border-t-transparent',\n        )}\n        ref={ref}\n        {...sortableProps}\n      >\n        <IconButton ref={dragHandleRef}>\n          <DragHandleIcon />\n        </IconButton>\n        <div className=\"flex-auto\">\n          <div className=\"text-sm\">{title}</div>\n          <div className=\"text-xs\">{description}</div>\n        </div>\n        <Checkbox\n          checked={isChecked}\n          onChange={() => {\n            const newTabs = tabs.map(tab => {\n              if (tab.id === id) {\n                return {...tab, active: !tab.active};\n              }\n              return tab;\n            });\n            setValue('client.artistPage.tabs', newTabs, {shouldDirty: true});\n          }}\n        />\n      </div>\n      <TabDragPreview title={title} ref={previewRef} />\n    </Fragment>\n  );\n}\n\ninterface DragPreviewProps {\n  title: ReactNode;\n}\nconst TabDragPreview = React.forwardRef<DragPreviewRenderer, DragPreviewProps>(\n  ({title}, ref) => {\n    return (\n      <DragPreview ref={ref}>\n        {() => (\n          <div className=\"rounded bg-chip p-8 text-sm shadow\">{title}</div>\n        )}\n      </DragPreview>\n    );\n  },\n);\n","import {Trans} from '@ui/i18n/trans';\nimport React, {Fragment} from 'react';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {TabList} from '@ui/tabs/tab-list';\nimport {Tab} from '@ui/tabs/tab';\nimport {TabPanel, TabPanels} from '@ui/tabs/tab-panels';\nimport {Tabs} from '@ui/tabs/tabs';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormSelect} from '@ui/forms/select/select';\nimport {Item} from '@ui/forms/listbox/item';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {\n  AdminSettingsForm,\n  AdminSettingsLayout,\n} from '@common/admin/settings/form/admin-settings-form';\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\nimport {useForm} from 'react-hook-form';\nimport {ArtistPagePanel} from '@app/admin/settings/interface-settings/artist-page-panel';\n\nexport function PlayerSettings() {\n  return (\n    <AdminSettingsLayout\n      title={<Trans message=\"General\" />}\n      description={\n        <Trans message=\"Configure site url, homepage, theme and other general settings.\" />\n      }\n    >\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>\n  );\n}\n\ninterface FormProps {\n  data: AdminSettings;\n}\nfunction Form({data}: FormProps) {\n  const form = useForm<AdminSettings>({\n    defaultValues: {\n      client: {\n        player: {\n          sort_method: data.client.player?.sort_method ?? 'external',\n          seekbar_type: data.client.player?.seekbar_type ?? 'waveform',\n          hide_queue: data.client.player?.hide_queue ?? false,\n          hide_radio_button: data.client.player?.hide_radio_button ?? false,\n          enable_repost: data.client.player?.enable_repost ?? false,\n          track_comments: data.client.player?.track_comments ?? false,\n          show_upload_btn: data.client.player?.show_upload_btn ?? false,\n          show_become_artist_btn:\n            data.client.player?.show_become_artist_btn ?? false,\n          default_volume: data.client.player?.default_volume ?? 100,\n          hide_lyrics: data.client.player?.hide_lyrics ?? false,\n          enable_download: data.client.player?.enable_download ?? false,\n          hide_video_button: data.client.player?.hide_video_button ?? false,\n          hide_video: data.client.player?.hide_video ?? false,\n          mobile: {\n            auto_open_overlay:\n              data.client.player?.mobile?.auto_open_overlay ?? false,\n          },\n          default_artist_view:\n            data.client.player?.default_artist_view ?? 'grid',\n        },\n        uploads: {\n          autoMatch: data.client.uploads?.autoMatch ?? false,\n        },\n        artistPage: {\n          tabs: data.client.artistPage?.tabs ?? [],\n          showDescription: data.client.artistPage?.showDescription ?? false,\n        },\n      },\n    },\n  });\n\n  return (\n    <AdminSettingsForm form={form}>\n      <Tabs>\n        <TabList>\n          <Tab>\n            <Trans message=\"General\" />\n          </Tab>\n          <Tab>\n            <Trans message=\"Controls\" />\n          </Tab>\n          <Tab>\n            <Trans message=\"Artist page\" />\n          </Tab>\n        </TabList>\n        <TabPanels className=\"pt-20\">\n          <TabPanel>\n            <GeneralPanel />\n          </TabPanel>\n          <TabPanel>\n            <ControlsPanel />\n          </TabPanel>\n          <TabPanel>\n            <ArtistPagePanel />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </AdminSettingsForm>\n  );\n}\n\nfunction GeneralPanel() {\n  const {spotify_is_setup} = useSettings();\n  return (\n    <Fragment>\n      {spotify_is_setup && (\n        <FormSelect\n          className=\"mb-24\"\n          name=\"client.player.sort_method\"\n          selectionMode=\"single\"\n          label={<Trans message=\"Content popularity\" />}\n          description={\n            <Trans message=\"When content is sorted by popularity (eg. In track table), should it be sorted based on how popular that content is on spotify or by number of plays on the site.\" />\n          }\n        >\n          <Item value=\"external\">\n            <Trans message=\"Spotify popularity\" />\n          </Item>\n          <Item value=\"local\">\n            <Trans message=\"Local plays\" />\n          </Item>\n        </FormSelect>\n      )}\n      <FormSelect\n        className=\"mb-24\"\n        name=\"client.player.seekbar_type\"\n        selectionMode=\"single\"\n        label={<Trans message=\"Track seekbar type\" />}\n        description={\n          <Trans message=\"Waveform is generated when uploading audio or video file and will default to 'simple' for auto-imported tracks.\" />\n        }\n      >\n        <Item value=\"waveform\">\n          <Trans message=\"Waveform\" />\n        </Item>\n        <Item value=\"line\">\n          <Trans message=\"Simple\" />\n        </Item>\n      </FormSelect>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.player.hide_queue\"\n        description={\n          <Trans message=\"Whether player queue (right sidebar) should be shown by default. It can still be toggled via queue button, even if this is disabled.\" />\n        }\n      >\n        <Trans message=\"Hide queue sidebar\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.player.hide_radio_button\"\n        description={\n          <Trans message=\"Whether 'Go to radio' buttons should be shown.\" />\n        }\n      >\n        <Trans message=\"Hide radio buttons\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.player.enable_repost\"\n        description={\n          <Trans message=\"Enable reposting functionality for albums and tracks.\" />\n        }\n      >\n        <Trans message=\"Enable reposts\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.player.track_comments\"\n        description={\n          <Trans message=\"Enable commenting functionality for albums and tracks.\" />\n        }\n      >\n        <Trans message=\"Enable commenting\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.player.show_upload_btn\"\n        description={\n          <Trans message=\"Whether upload button should be shown in left sidebar (if user has permissions to upload tracks).\" />\n        }\n      >\n        <Trans message=\"Upload button\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.player.show_become_artist_btn\"\n        description={\n          <Trans message=\"Whether become artist menu item should be shown (if user is not yet an artist).\" />\n        }\n      >\n        <Trans message=\"Become artist menu item\" />\n      </FormSwitch>\n      <FormSwitch\n        name=\"client.uploads.autoMatch\"\n        description={\n          <Trans message=\"When uploading audio or video file, this will autofill track and album form with existing album and artist based on file metadata, or create a new album and artist if they do not yet exist.\" />\n        }\n      >\n        <Trans message=\"Metadata matching\" />\n      </FormSwitch>\n    </Fragment>\n  );\n}\n\nfunction ControlsPanel() {\n  return (\n    <Fragment>\n      <FormTextField\n        className=\"mb-24\"\n        name=\"client.player.default_volume\"\n        label={<Trans message=\"Default player volume\" />}\n        type=\"number\"\n        min={1}\n        max={100}\n      />\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.player.hide_lyrics\"\n        description={\n          <Trans message=\"Whether lyrics button should be shown in player controls.\" />\n        }\n      >\n        <Trans message=\"Hide lyrics button\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.player.enable_download\"\n        description={\n          <Trans message=\"Whether download track button should be shown in player controls. It will only appear if track has an audio or video file uploaded.\" />\n        }\n      >\n        <Trans message=\"Download button\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.player.hide_video_button\"\n        description={\n          <Trans message=\"Whether toggle video button should be shown in player controls.\" />\n        }\n      >\n        <Trans message=\"Hide video button\" />\n      </FormSwitch>\n      <FormSwitch\n        className=\"mb-24\"\n        name=\"client.player.hide_video\"\n        description={\n          <Trans message=\"Should small video in the bottom right corner be hidden by default. Note that this might cause issues with background playback for youtube embed, especially on mobile.\" />\n        }\n      >\n        <Trans message=\"Hide video\" />\n      </FormSwitch>\n      <FormSwitch\n        name=\"client.player.mobile.auto_open_overlay\"\n        description={\n          <Trans message=\"Should fullscreen video overlay be opened automatically on mobile when user starts playback. This will only apply when streaming from youtube.\" />\n        }\n      >\n        <Trans message=\"Automatically open overlay on mobile\" />\n      </FormSwitch>\n    </Fragment>\n  );\n}\n","import {useAppearanceEditorValues} from '@common/admin/appearance/requests/use-appearance-editor-values';\nimport {useForm} from 'react-hook-form';\nimport {AppearanceEditorForm} from '@common/admin/appearance/appearance-editor-form';\nimport {Outlet, useLocation} from 'react-router-dom';\nimport {AppearanceEditorBreadcrumb} from '@common/admin/appearance/appearance-editor-breadcrumb';\nimport {Trans} from '@ui/i18n/trans';\nimport {LandingPageContent} from '@app/landing-page/landing-page-content';\n\ninterface FormValue {\n  settings: {\n    homepage: {\n      appearance: LandingPageContent;\n      trending: boolean;\n      pricing: boolean;\n    };\n  };\n}\n\nexport function LandingPageAppearanceForm() {\n  const values = useAppearanceEditorValues();\n  const form = useForm<FormValue>({\n    defaultValues: {\n      settings: {\n        homepage: {\n          appearance: {\n            headerTitle: values.settings.homepage?.appearance.headerTitle ?? '',\n            headerSubtitle:\n              values.settings.homepage?.appearance.headerSubtitle ?? '',\n            headerImage: values.settings.homepage?.appearance.headerImage ?? '',\n            headerImageOpacity:\n              values.settings.homepage?.appearance.headerImageOpacity ?? 0,\n            headerOverlayColor1:\n              values.settings.homepage?.appearance.headerOverlayColor1 ?? '',\n            headerOverlayColor2:\n              values.settings.homepage?.appearance.headerOverlayColor2 ?? '',\n            footerTitle: values.settings.homepage?.appearance.footerTitle ?? '',\n            footerSubtitle:\n              values.settings.homepage?.appearance.footerSubtitle ?? '',\n            footerImage: values.settings.homepage?.appearance.footerImage ?? '',\n            primaryFeatures:\n              values.settings.homepage?.appearance.primaryFeatures ?? [],\n            secondaryFeatures:\n              values.settings.homepage?.appearance.secondaryFeatures ?? [],\n            actions: values.settings.homepage?.appearance.actions ?? {},\n            pricingTitle:\n              values.settings.homepage?.appearance.pricingTitle ?? '',\n            pricingSubtitle:\n              values.settings.homepage?.appearance.pricingSubtitle ?? '',\n          },\n          trending: values.settings.homepage?.trending ?? false,\n          pricing: values.settings.homepage?.pricing ?? false,\n        },\n      },\n    },\n  });\n\n  return (\n    <AppearanceEditorForm\n      form={form}\n      breadcrumb={<Breadcrumb />}\n      blockerAllowedPath=\"landing-page\"\n    >\n      <Outlet />\n    </AppearanceEditorForm>\n  );\n}\n\nfunction Breadcrumb() {\n  const {pathname} = useLocation();\n  const lastSegment = pathname.split('/').pop();\n\n  return (\n    <AppearanceEditorBreadcrumb>\n      <Trans message=\"Landing page\" />\n      {lastSegment === 'action-buttons' && <Trans message=\"Action buttons\" />}\n      {lastSegment === 'primary-features' && (\n        <Trans message=\"Primary features\" />\n      )}\n      {lastSegment === 'secondary-features' && (\n        <Trans message=\"Secondary features\" />\n      )}\n    </AppearanceEditorBreadcrumb>\n  );\n}\n","import {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {Trans} from '@ui/i18n/trans';\nimport {\n  appearanceState,\n  useAppearanceStore,\n} from '@common/admin/appearance/appearance-store';\nimport {useFieldArray} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {useState} from 'react';\n\nexport function LandingPageSectionPrimaryFeatures() {\n  const {fields, remove, append} = useFieldArray({\n    name: 'settings.homepage.appearance.primaryFeatures',\n  });\n  const [expandedValues, setExpandedValues] = useState([0]);\n  return (\n    <div>\n      <Accordion\n        variant=\"outline\"\n        expandedValues={expandedValues}\n        onExpandedChange={values => {\n          setExpandedValues(values as number[]);\n          if (values.length) {\n            appearanceState().preview.setHighlight(\n              `[data-testid=\"primary-root-${values[0]}\"]`,\n            );\n          }\n        }}\n      >\n        {fields.map((field, index) => {\n          return (\n            <AccordionItem\n              key={field.id}\n              value={index}\n              label={<Trans message={`Primary feature ${index + 1}`} />}\n            >\n              <FeatureForm index={index} />\n              <div className=\"text-right\">\n                <Button\n                  size=\"xs\"\n                  variant=\"outline\"\n                  color=\"danger\"\n                  onClick={() => {\n                    remove(index);\n                  }}\n                >\n                  <Trans message=\"Remove\" />\n                </Button>\n              </div>\n            </AccordionItem>\n          );\n        })}\n      </Accordion>\n      <div className=\"mt-20 text-right\">\n        <Button\n          size=\"xs\"\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            append({});\n            setExpandedValues([fields.length]);\n          }}\n        >\n          <Trans message=\"Add feature\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface FeatureFormProps {\n  index: number;\n}\nfunction FeatureForm({index}: FeatureFormProps) {\n  const defaultImage = useAppearanceStore(\n    s =>\n      s.defaults?.settings.homepage.appearance?.primaryFeatures[index]?.image,\n  );\n\n  return (\n    <>\n      <FormImageSelector\n        name={`settings.homepage.appearance.primaryFeatures.${index}.image`}\n        className=\"mb-30\"\n        label={<Trans message=\"Image\" />}\n        defaultValue={defaultImage}\n        diskPrefix=\"homepage\"\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.primaryFeatures.${index}.title`}\n        label={<Trans message=\"Title\" />}\n        className=\"mb-20\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"primary-title-${index}\"]`,\n          );\n        }}\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.primaryFeatures.${index}.subtitle`}\n        label={<Trans message=\"Subtitle\" />}\n        className=\"mb-20\"\n        inputElementType=\"textarea\"\n        rows={4}\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"primary-subtitle-${index}\"]`,\n          );\n        }}\n      />\n    </>\n  );\n}\n","import {MenuItemForm} from '@common/admin/menus/menu-item-form';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {Trans} from '@ui/i18n/trans';\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\nimport {useState} from 'react';\n\nexport function LandingPageSectionActionButtons() {\n  const [expandedValues, setExpandedValues] = useState(['cta1']);\n  return (\n    <Accordion\n      variant=\"outline\"\n      expandedValues={expandedValues}\n      onExpandedChange={values => {\n        setExpandedValues(values as string[]);\n        if (values.length) {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"${values[0]}\"]`,\n          );\n        }\n      }}\n    >\n      <AccordionItem value=\"cta1\" label={<Trans message=\"Header button 1\" />}>\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta1\" />\n      </AccordionItem>\n      <AccordionItem value=\"ct2\" label={<Trans message=\"Header button 2\" />}>\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta2\" />\n      </AccordionItem>\n      <AccordionItem value=\"cta3\" label={<Trans message=\"Footer button\" />}>\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta3\" />\n      </AccordionItem>\n    </Accordion>\n  );\n}\n","import {useFormContext} from 'react-hook-form';\nimport {\n  AppearanceEditorValues,\n  appearanceState,\n  useAppearanceStore,\n} from '@common/admin/appearance/appearance-store';\nimport {Fragment, ReactNode} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {FormSlider} from '@ui/forms/slider/slider';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\nimport {Link} from 'react-router-dom';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {LandingPageContent} from '@app/landing-page/landing-page-content';\nimport {ColorPickerDialog} from '@ui/color-picker/color-picker-dialog';\n\nexport function LandingPageSectionGeneral() {\n  return (\n    <Fragment>\n      <HeaderSection />\n      <div className=\"my-24 border-y py-24\">\n        <AppearanceButton\n          to=\"action-buttons\"\n          elementType={Link}\n          className=\"mb-20\"\n        >\n          <Trans message=\"Action buttons\" />\n        </AppearanceButton>\n        <AppearanceButton to=\"primary-features\" elementType={Link}>\n          <Trans message=\"Primary features\" />\n        </AppearanceButton>\n        <AppearanceButton to=\"secondary-features\" elementType={Link}>\n          <Trans message=\"Secondary features\" />\n        </AppearanceButton>\n      </div>\n      <FooterSection />\n      <PricingSection />\n    </Fragment>\n  );\n}\n\nfunction HeaderSection() {\n  const defaultImage = useAppearanceStore(\n    s => s.defaults?.settings.homepage.appearance?.headerImage,\n  );\n\n  return (\n    <Fragment>\n      <FormTextField\n        label={<Trans message=\"Header title\" />}\n        className=\"mb-20\"\n        name=\"settings.homepage.appearance.headerTitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight('[data-testid=\"headerTitle\"]');\n        }}\n      />\n      <FormTextField\n        label={<Trans message=\"Header subtitle\" />}\n        className=\"mb-30\"\n        inputElementType=\"textarea\"\n        rows={4}\n        name=\"settings.homepage.appearance.headerSubtitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            '[data-testid=\"headerSubtitle\"]',\n          );\n        }}\n      />\n      <FormImageSelector\n        name=\"settings.homepage.appearance.headerImage\"\n        className=\"mb-30\"\n        label={<Trans message=\"Header image\" />}\n        defaultValue={defaultImage}\n        diskPrefix=\"homepage\"\n      />\n      <FormSlider\n        name=\"settings.homepage.appearance.headerImageOpacity\"\n        label={<Trans message=\"Header image opacity\" />}\n        minValue={0}\n        step={0.1}\n        maxValue={1}\n        formatOptions={{style: 'percent'}}\n      />\n      <div className=\"mb-20 text-xs text-muted\">\n        <Trans message=\"In order for overlay colors to appear, header image opacity will need to be less then 100%\" />\n      </div>\n      <ColorPickerTrigger\n        formKey=\"settings.homepage.appearance.headerOverlayColor1\"\n        label={<Trans message=\"Header overlay color 1\" />}\n      />\n      <ColorPickerTrigger\n        formKey=\"settings.homepage.appearance.headerOverlayColor2\"\n        label={<Trans message=\"Header overlay color 2\" />}\n      />\n    </Fragment>\n  );\n}\n\nfunction FooterSection() {\n  const defaultImage = useAppearanceStore(\n    s =>\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\n        ?.footerImage,\n  );\n  return (\n    <Fragment>\n      <FormSwitch className=\"mb-24\" name=\"settings.homepage.trending\">\n        <Trans message=\"Show trending artists\" />\n      </FormSwitch>\n      <FormTextField\n        label={<Trans message=\"Footer title\" />}\n        className=\"mb-20\"\n        name=\"settings.homepage.appearance.footerTitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight('[data-testid=\"footerTitle\"]');\n        }}\n      />\n      <FormTextField\n        label={<Trans message=\"Footer subtitle\" />}\n        className=\"mb-20\"\n        name=\"settings.homepage.appearance.footerSubtitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            '[data-testid=\"footerSubtitle\"]',\n          );\n        }}\n      />\n      <FormImageSelector\n        name=\"settings.homepage.appearance.footerImage\"\n        className=\"mb-30\"\n        label={<Trans message=\"Footer background image\" />}\n        defaultValue={defaultImage}\n        diskPrefix=\"homepage\"\n      />\n    </Fragment>\n  );\n}\n\nfunction PricingSection() {\n  return (\n    <div className=\"mt-24 border-t pt-24\">\n      <FormTextField\n        label={<Trans message=\"Pricing title\" />}\n        className=\"mb-20\"\n        name=\"settings.homepage.appearance.pricingTitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            '[data-testid=\"pricingTitle\"]',\n          );\n        }}\n      />\n      <FormTextField\n        label={<Trans message=\"Pricing subtitle\" />}\n        className=\"mb-20\"\n        name=\"settings.homepage.appearance.pricingSubtitle\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            '[data-testid=\"pricingSubtitle\"]',\n          );\n        }}\n      />\n      <FormSwitch className=\"mb-24\" name=\"settings.homepage.pricing\">\n        <Trans message=\"Show pricing table\" />\n      </FormSwitch>\n    </div>\n  );\n}\n\ninterface ColorPickerTriggerProps {\n  formKey: string;\n  label: ReactNode;\n}\nfunction ColorPickerTrigger({label, formKey}: ColorPickerTriggerProps) {\n  const key = formKey as 'settings.homepage.appearance.headerOverlayColor1';\n  const {watch, setValue} = useFormContext<AppearanceEditorValues>();\n\n  const formValue = watch(key);\n\n  const setColor = (value: string | null) => {\n    setValue(formKey as any, value, {\n      shouldDirty: true,\n    });\n  };\n\n  return (\n    <DialogTrigger\n      value={formValue}\n      type=\"popover\"\n      onValueChange={newValue => setColor(newValue)}\n      onClose={value => setColor(value)}\n    >\n      <AppearanceButton\n        className=\"capitalize\"\n        startIcon={\n          <ColorIcon\n            viewBox=\"0 0 48 48\"\n            className=\"icon-lg\"\n            style={{fill: formValue}}\n          />\n        }\n      >\n        {label}\n      </AppearanceButton>\n      <ColorPickerDialog />\n    </DialogTrigger>\n  );\n}\n","import {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {Trans} from '@ui/i18n/trans';\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\nimport {useFieldArray} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {useState} from 'react';\n\nexport function LandingPageSecondaryFeatures() {\n  const {fields, remove, append} = useFieldArray({\n    name: 'settings.homepage.appearance.secondaryFeatures',\n  });\n  const [expandedValues, setExpandedValues] = useState([0]);\n  return (\n    <div>\n      <Accordion\n        variant=\"outline\"\n        expandedValues={expandedValues}\n        onExpandedChange={values => {\n          setExpandedValues(values as number[]);\n          if (values.length) {\n            appearanceState().preview.setHighlight(\n              `[data-testid=\"secondary-root-${values[0]}\"]`,\n            );\n          }\n        }}\n      >\n        {fields.map((field, index) => {\n          return (\n            <AccordionItem\n              key={field.id}\n              value={index}\n              label={<Trans message={`Secondary feature ${index + 1}`} />}\n            >\n              <FeatureForm index={index} />\n              <div className=\"text-right\">\n                <Button\n                  size=\"xs\"\n                  variant=\"outline\"\n                  color=\"danger\"\n                  onClick={() => {\n                    remove(index);\n                  }}\n                >\n                  <Trans message=\"Remove\" />\n                </Button>\n              </div>\n            </AccordionItem>\n          );\n        })}\n      </Accordion>\n      <div className=\"mt-20 text-right\">\n        <Button\n          size=\"xs\"\n          variant=\"outline\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            append({});\n            setExpandedValues([fields.length]);\n          }}\n        >\n          <Trans message=\"Add feature\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface FeatureFormProps {\n  index: number;\n}\nfunction FeatureForm({index}: FeatureFormProps) {\n  return (\n    <>\n      <FormImageSelector\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.image`}\n        className=\"mb-30\"\n        label={<Trans message=\"Image\" />}\n        defaultValue={getDefaultImage(index)}\n        diskPrefix=\"homepage\"\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.title`}\n        label={<Trans message=\"Title\" />}\n        className=\"mb-20\"\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"secondary-title-${index}\"]`,\n          );\n        }}\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.subtitle`}\n        label={<Trans message=\"Subtitle\" />}\n        className=\"mb-20\"\n        inputElementType=\"textarea\"\n        rows={4}\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"secondary-subtitle-${index}\"]`,\n          );\n        }}\n      />\n      <FormTextField\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.description`}\n        label={<Trans message=\"Description\" />}\n        className=\"mb-20\"\n        inputElementType=\"textarea\"\n        rows={4}\n        onFocus={() => {\n          appearanceState().preview.setHighlight(\n            `[data-testid=\"secondary-description-${index}\"]`,\n          );\n        }}\n      />\n    </>\n  );\n}\n\nfunction getDefaultImage(index: number): string | undefined {\n  return appearanceState().defaults?.settings.homepage.appearance\n    .secondaryFeatures[index]?.image;\n}\n"],"file":"assets/app-admin-routes.lazy-61330bf9.js"}