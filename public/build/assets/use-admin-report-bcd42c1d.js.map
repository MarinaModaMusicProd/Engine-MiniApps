{"version":3,"file":"use-admin-report-bcd42c1d.js","sources":["../../../common/foundation/resources/client/ui/library/i18n/formatted-bytes.tsx","../../../common/foundation/resources/client/ui/library/icons/material/TrendingDown.tsx","../../../common/foundation/resources/client/charts/bar-chart.tsx","../../../common/foundation/resources/client/admin/analytics/visitors-report-charts.tsx","../../../common/foundation/resources/client/ui/library/icons/material/TrendingFlat.tsx","../../../common/foundation/resources/client/admin/analytics/admin-header-report.tsx","../../../common/foundation/resources/client/admin/analytics/use-admin-report.ts"],"sourcesContent":["import {Fragment, memo} from 'react';\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\n\ninterface FormattedBytesProps {\n  bytes?: number;\n}\nexport const FormattedBytes = memo(({bytes}: FormattedBytesProps) => {\n  return <Fragment>{prettyBytes(bytes)}</Fragment>;\n});\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const TrendingDownIcon = createSvgIcon(\n  <path d=\"m16 18 2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6h-6z\" />\n, 'TrendingDownOutlined');\n","import {BaseChart, BaseChartProps} from './base-chart';\nimport {ChartData, ChartOptions} from 'chart.js';\nimport {ChartColors} from './chart-colors';\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\nimport {FormattedDatasetItem} from './data/formatted-dataset-item';\nimport {useMemo} from 'react';\nimport {formatReportData} from './data/format-report-data';\nimport {DatasetItem, ReportMetric} from '../admin/analytics/report-metric';\nimport clsx from 'clsx';\n\ninterface BarChartProps extends Omit<BaseChartProps<'bar'>, 'type' | 'data'> {\n  direction?: 'horizontal' | 'vertical';\n  individualBarColors?: boolean;\n  data?: ReportMetric<DatasetItem>;\n}\nexport function BarChart({\n  data,\n  direction = 'vertical',\n  individualBarColors = false,\n  className,\n  ...props\n}: BarChartProps) {\n  const {localeCode} = useSelectedLocale();\n  const formattedData: ChartData<'bar', FormattedDatasetItem[]> =\n    useMemo(() => {\n      const formattedData = formatReportData(data, {localeCode});\n      formattedData.datasets = formattedData.datasets.map((dataset, i) => ({\n        ...dataset,\n        backgroundColor: individualBarColors\n          ? ChartColors.map(c => c[1])\n          : ChartColors[i][1],\n        borderColor: individualBarColors\n          ? ChartColors.map(c => c[0])\n          : ChartColors[i][0],\n        borderWidth: 2,\n      }));\n      return formattedData;\n    }, [data, localeCode, individualBarColors]);\n\n  const isHorizontal = direction === 'horizontal';\n  const options: ChartOptions<'bar'> = useMemo(() => {\n    return {\n      indexAxis: isHorizontal ? 'y' : 'x',\n      parsing: {\n        xAxisKey: isHorizontal ? 'value' : 'label',\n        yAxisKey: isHorizontal ? 'label' : 'value',\n      },\n    };\n  }, [isHorizontal]);\n\n  return (\n    <BaseChart\n      type=\"bar\"\n      className={clsx(className, 'min-w-500')}\n      data={formattedData}\n      options={options}\n      {...props}\n    />\n  );\n}\n","import React, {Fragment} from 'react';\nimport {LineChart} from '@common/charts/line-chart';\nimport {Trans} from '@ui/i18n/trans';\nimport {PolarAreaChart} from '@common/charts/polar-area-chart';\nimport {BarChart} from '@common/charts/bar-chart';\nimport {VisitorsReportData} from '@common/admin/analytics/visitors-report-data';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {GeoChart} from '@common/admin/analytics/geo-chart/geo-chart';\n\nexport const AdminReportPageColGap = 'gap-12 md:gap-16 mb-12 md:mb-16';\nconst rowClassName = `flex flex-col md:flex-row md:items-center overflow-x-auto ${AdminReportPageColGap}`;\n\ninterface AdminReportChartsProps {\n  report?: VisitorsReportData;\n  isLoading: boolean;\n}\nexport function VisitorsReportCharts({\n  report,\n  isLoading,\n}: AdminReportChartsProps) {\n  const totalViews = report?.pageViews.total;\n  return (\n    <Fragment>\n      <div className={rowClassName}>\n        <LineChart\n          isLoading={isLoading}\n          className=\"flex-auto\"\n          data={report?.pageViews}\n          title={<Trans message=\"Pageviews\" />}\n          description={\n            totalViews ? (\n              <Trans\n                message=\":count total views\"\n                values={{count: <FormattedNumber value={totalViews} />}}\n              />\n            ) : null\n          }\n        />\n        <PolarAreaChart\n          isLoading={isLoading}\n          data={report?.devices}\n          title={<Trans message=\"Top devices\" />}\n        />\n      </div>\n      <div className={rowClassName}>\n        <BarChart\n          isLoading={isLoading}\n          data={report?.browsers}\n          className=\"flex-auto md:w-1/3\"\n          direction=\"horizontal\"\n          individualBarColors\n          hideLegend\n          title={<Trans message=\"Top browsers\" />}\n        />\n        <GeoChart\n          isLoading={isLoading}\n          className=\"flex-auto\"\n          data={report?.locations}\n          title={<Trans message=\"Top locations\" />}\n        />\n      </div>\n    </Fragment>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const TrendingFlatIcon = createSvgIcon(\n  <path d=\"m22 12-4-4v3H3v2h15v3l4-4z\" />\n, 'TrendingFlatOutlined');\n","import {HeaderDatum} from '@common/admin/analytics/use-admin-report';\nimport React, {\n  cloneElement,\n  Fragment,\n  isValidElement,\n  ReactElement,\n} from 'react';\nimport {TrendingUpIcon} from '@ui/icons/material/TrendingUp';\nimport {TrendingDownIcon} from '@ui/icons/material/TrendingDown';\nimport {createSvgIconFromTree} from '@ui/icons/create-svg-icon';\nimport {AdminReportPageColGap} from '@common/admin/analytics/visitors-report-charts';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {FormattedBytes} from '@ui/i18n/formatted-bytes';\nimport {TrendingFlatIcon} from '@ui/icons/material/TrendingFlat';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {Skeleton} from '@ui/skeleton/skeleton';\n\ninterface AdminHeaderReportProps {\n  report?: HeaderDatum[];\n  isLoading?: boolean;\n}\nexport function AdminHeaderReport({report, isLoading}: AdminHeaderReportProps) {\n  return (\n    <div\n      className={`flex h-[97px] flex-shrink-0 items-center overflow-x-auto ${AdminReportPageColGap}`}\n    >\n      {report?.map(datum => (\n        <ReportItem key={datum.name} datum={datum} isLoading={isLoading} />\n      ))}\n    </div>\n  );\n}\n\ninterface ValueMetricItemProps {\n  datum: HeaderDatum;\n  isLoading?: boolean;\n}\nfunction ReportItem({datum, isLoading = false}: ValueMetricItemProps) {\n  let icon;\n  if (isValidElement(datum.icon)) {\n    icon = cloneElement(datum.icon, {size: 'lg'});\n  } else {\n    const IconEl = createSvgIconFromTree(datum.icon);\n    icon = <IconEl size=\"lg\" />;\n  }\n\n  return (\n    <div\n      key={datum.name}\n      className=\"flex h-full flex-auto items-center gap-18 whitespace-nowrap rounded-panel border p-20\"\n    >\n      <div className=\"flex-shrink-0 rounded-lg bg-primary-light/20 p-10 text-primary\">\n        {icon}\n      </div>\n      <div className=\"flex-auto\">\n        <div className=\"flex items-center justify-between gap-20\">\n          <div className=\"text-lg font-bold text-main\">\n            <AnimatePresence initial={false} mode=\"wait\">\n              {isLoading ? (\n                <m.div key=\"skeleton\" {...opacityAnimation}>\n                  <Skeleton className=\"min-w-24\" />\n                </m.div>\n              ) : (\n                <m.div key=\"value\" {...opacityAnimation}>\n                  <FormattedValue datum={datum} />\n                </m.div>\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between gap-20\">\n          <h2 className=\"text-sm text-muted\">{datum.name}</h2>\n          {(datum.percentageChange != null || datum.previousValue != null) && (\n            <div className=\"flex items-center gap-10\">\n              <TrendingIndicator datum={datum} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface FormattedValueProps {\n  datum: HeaderDatum;\n}\nfunction FormattedValue({datum}: FormattedValueProps) {\n  switch (datum.type) {\n    case 'fileSize':\n      return <FormattedBytes bytes={datum.currentValue} />;\n    case 'percentage':\n      return (\n        <FormattedNumber\n          value={datum.currentValue}\n          style=\"percent\"\n          maximumFractionDigits={1}\n        />\n      );\n    default:\n      return <FormattedNumber value={datum.currentValue} />;\n  }\n}\n\ninterface TrendingIndicatorProps {\n  datum: HeaderDatum;\n}\nfunction TrendingIndicator({datum}: TrendingIndicatorProps) {\n  const percentage = calculatePercentage(datum);\n  let icon: ReactElement;\n  if (percentage > 0) {\n    icon = <TrendingUpIcon size=\"md\" className=\"text-positive\" />;\n  } else if (percentage === 0) {\n    icon = <TrendingFlatIcon className=\"text-muted\" />;\n  } else {\n    icon = <TrendingDownIcon className=\"text-danger\" />;\n  }\n\n  return (\n    <Fragment>\n      {icon}\n      <div className=\"text-sm font-semibold text-muted\">{percentage}%</div>\n    </Fragment>\n  );\n}\n\nfunction calculatePercentage({\n  percentageChange,\n  previousValue,\n  currentValue,\n}: HeaderDatum) {\n  if (\n    percentageChange != null ||\n    previousValue == null ||\n    currentValue == null\n  ) {\n    return percentageChange ?? 0;\n  }\n\n  if (previousValue === 0) {\n    return 100;\n  }\n\n  return Math.round(((currentValue - previousValue) / previousValue) * 100);\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {VisitorsReportData} from '@common/admin/analytics/visitors-report-data';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {ReactElement} from 'react';\nimport {SvgIconProps} from '@ui/icons/svg-icon';\nimport {IconTree} from '@ui/icons/create-svg-icon';\n\nconst Endpoint = 'admin/reports';\n\nexport interface HeaderDatum {\n  icon: IconTree[] | ReactElement<SvgIconProps>;\n  name: string;\n  type?: 'number' | 'fileSize' | 'percentage';\n  currentValue: number;\n  previousValue?: number;\n  percentageChange?: number;\n}\n\ninterface FetchAnalyticsReportResponse extends BackendResponse {\n  visitorsReport: VisitorsReportData;\n  headerReport: HeaderDatum[];\n}\n\ninterface Payload {\n  types?: ('visitors' | 'header')[];\n  dateRange?: DateRangeValue;\n}\nexport function useAdminReport(payload: Payload = {}) {\n  return useQuery({\n    queryKey: [Endpoint, payload],\n    queryFn: () => fetchAnalyticsReport(payload),\n    placeholderData: keepPreviousData,\n  });\n}\n\nfunction fetchAnalyticsReport({\n  types,\n  dateRange,\n}: Payload): Promise<FetchAnalyticsReportResponse> {\n  const params: Record<string, any> = {};\n  if (types) {\n    params.types = types.join(',');\n  }\n  if (dateRange) {\n    params.startDate = dateRange.start.toAbsoluteString();\n    params.endDate = dateRange.end.toAbsoluteString();\n    params.timezone = dateRange.start.timeZone;\n  }\n  return apiClient.get(Endpoint, {params}).then(response => response.data);\n}\n"],"names":["FormattedBytes","memo","bytes","jsx","Fragment","prettyBytes","TrendingDownIcon","createSvgIcon","BarChart","data","direction","individualBarColors","className","props","localeCode","useSelectedLocale","formattedData","useMemo","formatReportData","dataset","i","ChartColors","c","isHorizontal","options","BaseChart","clsx","AdminReportPageColGap","rowClassName","VisitorsReportCharts","report","isLoading","totalViews","jsxs","LineChart","Trans","FormattedNumber","PolarAreaChart","GeoChart","TrendingFlatIcon","AdminHeaderReport","datum","ReportItem","icon","isValidElement","cloneElement","IconEl","createSvgIconFromTree","AnimatePresence","m","opacityAnimation","Skeleton","FormattedValue","TrendingIndicator","percentage","calculatePercentage","TrendingUpIcon","percentageChange","previousValue","currentValue","Endpoint","useAdminReport","payload","useQuery","fetchAnalyticsReport","keepPreviousData","types","dateRange","params","apiClient","response"],"mappings":"+TAMO,MAAMA,EAAiBC,EAAA,KAAK,CAAC,CAAC,MAAAC,KAC3BC,EAAAA,IAAAC,EAAAA,SAAA,CAAU,SAAYC,EAAAH,CAAK,CAAE,CAAA,CACtC,ECNYI,EAAmBC,EAC9BJ,EAAAA,IAAC,OAAK,CAAA,EAAE,2EAA4E,CAAA,EACpF,sBAAsB,ECWjB,SAASK,EAAS,CACvB,KAAAC,EACA,UAAAC,EAAY,WACZ,oBAAAC,EAAsB,GACtB,UAAAC,EACA,GAAGC,CACL,EAAkB,CACV,KAAA,CAAC,WAAAC,GAAcC,IACfC,EACJC,EAAAA,QAAQ,IAAM,CACZ,MAAMD,EAAgBE,EAAiBT,EAAM,CAAC,WAAAK,CAAW,CAAA,EACzDE,OAAAA,EAAc,SAAWA,EAAc,SAAS,IAAI,CAACG,EAASC,KAAO,CACnE,GAAGD,EACH,gBAAiBR,EACbU,EAAY,IAASC,GAAAA,EAAE,CAAC,CAAC,EACzBD,EAAYD,CAAC,EAAE,CAAC,EACpB,YAAaT,EACTU,EAAY,IAASC,GAAAA,EAAE,CAAC,CAAC,EACzBD,EAAYD,CAAC,EAAE,CAAC,EACpB,YAAa,CACb,EAAA,EACKJ,CACN,EAAA,CAACP,EAAMK,EAAYH,CAAmB,CAAC,EAEtCY,EAAeb,IAAc,aAC7Bc,EAA+BP,EAAAA,QAAQ,KACpC,CACL,UAAWM,EAAe,IAAM,IAChC,QAAS,CACP,SAAUA,EAAe,QAAU,QACnC,SAAUA,EAAe,QAAU,OACrC,CAAA,GAED,CAACA,CAAY,CAAC,EAGf,OAAApB,EAAA,IAACsB,EAAA,CACC,KAAK,MACL,UAAWC,EAAKd,EAAW,WAAW,EACtC,KAAMI,EACN,QAAAQ,EACC,GAAGX,CAAA,CAAA,CAGV,CClDO,MAAMc,EAAwB,kCAC/BC,EAAe,6DAA6DD,CAAqB,GAMhG,SAASE,EAAqB,CACnC,OAAAC,EACA,UAAAC,CACF,EAA2B,CACnB,MAAAC,EAAaF,GAAA,YAAAA,EAAQ,UAAU,MACrC,cACG1B,WACC,CAAA,SAAA,CAAC6B,EAAAA,KAAA,MAAA,CAAI,UAAWL,EACd,SAAA,CAAAzB,EAAA,IAAC+B,EAAA,CACC,UAAAH,EACA,UAAU,YACV,KAAMD,GAAA,YAAAA,EAAQ,UACd,MAAO3B,EAAAA,IAACgC,EAAM,CAAA,QAAQ,WAAY,CAAA,EAClC,YACEH,EACE7B,EAAA,IAACgC,EAAA,CACC,QAAQ,qBACR,OAAQ,CAAC,YAAQC,EAAgB,CAAA,MAAOJ,EAAY,CAAE,CAAA,CAAA,EAEtD,IAAA,CAER,EACA7B,EAAA,IAACkC,EAAA,CACC,UAAAN,EACA,KAAMD,GAAA,YAAAA,EAAQ,QACd,MAAO3B,EAAAA,IAACgC,EAAM,CAAA,QAAQ,aAAc,CAAA,CAAA,CACtC,CAAA,EACF,EACAF,EAAAA,KAAC,MAAI,CAAA,UAAWL,EACd,SAAA,CAAAzB,EAAA,IAACK,EAAA,CACC,UAAAuB,EACA,KAAMD,GAAA,YAAAA,EAAQ,SACd,UAAU,qBACV,UAAU,aACV,oBAAmB,GACnB,WAAU,GACV,MAAO3B,EAAAA,IAACgC,EAAM,CAAA,QAAQ,cAAe,CAAA,CAAA,CACvC,EACAhC,EAAA,IAACmC,EAAA,CACC,UAAAP,EACA,UAAU,YACV,KAAMD,GAAA,YAAAA,EAAQ,UACd,MAAO3B,EAAAA,IAACgC,EAAM,CAAA,QAAQ,eAAgB,CAAA,CAAA,CACxC,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,CC7DO,MAAMI,EAAmBhC,EAC9BJ,EAAAA,IAAC,OAAK,CAAA,EAAE,4BAA6B,CAAA,EACrC,sBAAsB,ECkBjB,SAASqC,EAAkB,CAAC,OAAAV,EAAQ,UAAAC,GAAoC,CAE3E,OAAA5B,EAAA,IAAC,MAAA,CACC,UAAW,4DAA4DwB,CAAqB,GAE3F,SAAAG,GAAA,YAAAA,EAAQ,IACPW,GAAAtC,EAAA,IAACuC,GAA4B,MAAAD,EAAc,UAAAV,CAAA,EAA1BU,EAAM,IAA0C,EAClE,CAAA,CAGP,CAMA,SAASC,EAAW,CAAC,MAAAD,EAAO,UAAAV,EAAY,IAA8B,CAChE,IAAAY,EACA,GAAAC,EAAA,eAAeH,EAAM,IAAI,EAC3BE,EAAOE,eAAaJ,EAAM,KAAM,CAAC,KAAM,KAAK,MACvC,CACC,MAAAK,EAASC,EAAsBN,EAAM,IAAI,EACxCE,EAAAxC,EAAA,IAAC2C,EAAO,CAAA,KAAK,IAAK,CAAA,CAC3B,CAGE,OAAAb,EAAA,KAAC,MAAA,CAEC,UAAU,wFAEV,SAAA,CAAC9B,EAAA,IAAA,MAAA,CAAI,UAAU,iEACZ,SACHwC,EAAA,EACAV,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAA9B,EAAAA,IAAC,OAAI,UAAU,2CACb,eAAC,MAAI,CAAA,UAAU,8BACb,SAACA,MAAA6C,EAAA,CAAgB,QAAS,GAAO,KAAK,OACnC,SAAAjB,QACEkB,EAAE,IAAF,CAAsB,GAAGC,EACxB,SAAC/C,EAAA,IAAAgD,EAAA,CAAS,UAAU,WAAW,CAAA,EADtB,UAEX,EAEAhD,EAAA,IAAC8C,EAAE,IAAF,CAAmB,GAAGC,EACrB,eAACE,EAAe,CAAA,MAAAX,EAAc,GADrB,OAEX,EAEJ,EACF,CACF,CAAA,EACAR,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAAA9B,EAAA,IAAC,KAAG,CAAA,UAAU,qBAAsB,SAAAsC,EAAM,KAAK,GAC7CA,EAAM,kBAAoB,MAAQA,EAAM,eAAiB,OACxDtC,MAAA,MAAA,CAAI,UAAU,2BACb,SAACA,EAAAA,IAAAkD,EAAA,CAAkB,MAAAZ,CAAc,CAAA,EACnC,CAAA,EAEJ,CAAA,EACF,CAAA,CAAA,EA9BKA,EAAM,IAAA,CAiCjB,CAKA,SAASW,EAAe,CAAC,MAAAX,GAA6B,CACpD,OAAQA,EAAM,KAAM,CAClB,IAAK,WACH,OAAQtC,EAAAA,IAAAH,EAAA,CAAe,MAAOyC,EAAM,YAAc,CAAA,EACpD,IAAK,aAED,OAAAtC,EAAA,IAACiC,EAAA,CACC,MAAOK,EAAM,aACb,MAAM,UACN,sBAAuB,CAAA,CAAA,EAG7B,QACE,OAAQtC,EAAAA,IAAAiC,EAAA,CAAgB,MAAOK,EAAM,YAAc,CAAA,CACvD,CACF,CAKA,SAASY,EAAkB,CAAC,MAAAZ,GAAgC,CACpD,MAAAa,EAAaC,EAAoBd,CAAK,EACxC,IAAAE,EACJ,OAAIW,EAAa,EACfX,EAAQxC,EAAAA,IAAAqD,EAAA,CAAe,KAAK,KAAK,UAAU,eAAgB,CAAA,EAClDF,IAAe,EACjBX,EAAAxC,EAAA,IAACoC,EAAiB,CAAA,UAAU,YAAa,CAAA,EAEzCI,EAAAxC,EAAA,IAACG,EAAiB,CAAA,UAAU,aAAc,CAAA,SAIhDF,WACE,CAAA,SAAA,CAAAuC,EACDV,EAAAA,KAAC,MAAI,CAAA,UAAU,mCAAoC,SAAA,CAAAqB,EAAW,GAAA,EAAC,CACjE,CAAA,CAAA,CAEJ,CAEA,SAASC,EAAoB,CAC3B,iBAAAE,EACA,cAAAC,EACA,aAAAC,CACF,EAAgB,CACd,OACEF,GAAoB,MACpBC,GAAiB,MACjBC,GAAgB,KAETF,GAAoB,EAGzBC,IAAkB,EACb,IAGF,KAAK,OAAQC,EAAeD,GAAiBA,EAAiB,GAAG,CAC1E,CCvIA,MAAME,EAAW,gBAoBD,SAAAC,GAAeC,EAAmB,GAAI,CACpD,OAAOC,EAAS,CACd,SAAU,CAACH,EAAUE,CAAO,EAC5B,QAAS,IAAME,EAAqBF,CAAO,EAC3C,gBAAiBG,CAAA,CAClB,CACH,CAEA,SAASD,EAAqB,CAC5B,MAAAE,EACA,UAAAC,CACF,EAAmD,CACjD,MAAMC,EAA8B,CAAA,EACpC,OAAIF,IACKE,EAAA,MAAQF,EAAM,KAAK,GAAG,GAE3BC,IACKC,EAAA,UAAYD,EAAU,MAAM,iBAAiB,EAC7CC,EAAA,QAAUD,EAAU,IAAI,iBAAiB,EACzCC,EAAA,SAAWD,EAAU,MAAM,UAE7BE,EAAU,IAAIT,EAAU,CAAC,OAAAQ,CAAA,CAAO,EAAE,KAAiBE,GAAAA,EAAS,IAAI,CACzE"}