{"version":3,"mappings":"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","names":["startOfDay","date","endOfDay","Now","getCurrentDateTime","locale","_b","_a","getBootstrapData","DateRangePresets","message","startOfWeek","endOfWeek","start","startOfMonth","endOfMonth","startOfYear","endOfYear","DateRangeIcon","createSvgIcon","jsx","Input","React","props","ref","children","inputProps","wrapperProps","className","autoFocus","style","onClick","clsx","FocusScope","DatePickerField","inputRef","onBlur","other","fieldClassNames","getInputFieldClassNames","objRef","useObjectRef","fieldProps","useField","Field","mergeProps","e","focusManager","createFocusManager","getDefaultGranularity","CalendarDate","dateIsInvalid","min","max","toSafeZoned","timeZone","disambiguation","toZoned","useBaseDatePickerState","selectedDate","timezone","useUserTimezone","calendarIsOpen","setCalendarIsOpen","useState","closeDialogOnSelection","granularity","useDateRangePickerState","now","useCurrentDateTime","isPlaceholder","setIsPlaceholder","setStateValue","internalValue","setInternalValue","useControlledState","completeRange","value","clear","useCallback","anchorDate","setAnchorDate","isHighlighting","setIsHighlighting","highlightedRange","setHighlightedRange","calendarDates","setCalendarDates","rangeToCalendarDates","constrainRange","range","end","maxDate","startMax","minDate","endMin","setSelectedValue","newRange","dayIsActive","day","isSameDay","dayIsHighlighted","dayIsRangeStart","dayIsRangeEnd","getCellProps","isSameMonth","makeRange","finalRange","toCalendarDate","ArrowRightAltIcon","adjustSegment","part","amount","options","hours","isPM","setSegment","segmentValue","wasPM","PAGE_STEP","EditableDateSegment","segment","domProps","onChange","isMobile","useIsMobileMediaQuery","enteredKeys","useRef","localeCode","useSelectedLocale","useFocusManager","formatter","useDateFormatter","parser","useMemo","NumberParser","setSegmentValue","newValue","adjustSegmentValue","backspace","parsed","today","onKeyDown","onInput","amPmFormatter","am","amDate","pm","pmDate","key","numberValue","allowsZero","shouldSetValue","spinButtonProps","LiteralDateSegment","getSegmentLimits","type","getMinimumMonthInYear","getMinimumDayInMonth","DateSegmentList","segmentProps","state","memoOptions","dateValue","segments","limits","textValue","index","CalendarCell","currentMonth","dayOfWeek","getDayOfWeek","isActive","isHighlighted","isRangeStart","isRangeEnd","dayIsToday","isToday","sameMonth","isDisabled","jsxs","CalendarMonth","startDate","isFirst","isLast","weeksInMonth","getWeeksInMonth","monthStart","CalendarMonthHeader","WeekdayHeader","weekIndex","m","dayIndex","shiftCalendars","direction","count","newDates","monthFormatter","isBackwardDisabled","isForwardDisabled","IconButton","KeyboardArrowLeftIcon","KeyboardArrowRightIcon","dayFormatter","dateDay","weekday","Calendar","visibleMonths","Fragment","FormattedDateTimeRange","memo","preset","propsTimezone","dates","useSettings","userTimezone","DateFormatPresets","castToDate","shallowEqual","parseAbsolute","DatePresetList","onPresetSelected","selectedValue","List","ListItem","Trans","DateRangeComparePresets","diffInMinutes","DateRangeComparePresetList","originalRangeValue","DateRangeDialog","compareState","showInlineDatePickerField","compareVisibleDefault","isTablet","useIsTabletMediaQuery","close","useDialogContext","initialStateRef","hasPlaceholder","compareVisible","setCompareVisible","footer","DialogFooter","Button","Dialog","DialogBody","Switch","AnimatePresence","Calendars","InlineDatePickerField","label","ArrowBackIcon","InfoDialogTriggerIcon","monthDayFormat","ReportDateSelector","disabled","compactOnMobile","enableCompare","DialogTrigger","DateSelectorDialog","compareHasInitialValue","ChartLayout","title","description","contentIsFlex","contentClassName","contentRef","minHeight","ChartLoadingIndicator","ProgressCircle","LazyChart","lazy","BaseChart","isLoading","Suspense","formatReportData","report","shareFirstDatasetLabels","firstDatasetLabels","dataset","datasetIndex","data","datasetItem","itemIndex","generateDatasetLabels","datum","generateTimeLabels","isoDate","isoEndDate","parseAbsoluteToLocal","endDate","getFormatter","memoize","DateFormatter","a","b","primaryColor","ChartColors","LineChartOptions","LineChart","formattedData","PolarAreaChartOptions","PolarAreaChart","d","i","c","loaderUrl","useGoogleGeoChart","placeholderRef","country","onCountrySelected","trans","useTrans","analytics","apiKey","selectedTheme","useThemeSelector","geoChartRef","regionInteractivity","drawGoogleChart","seedData","location","backgroundColor","themeValueToHex","initGoogleGeoChart","lazyLoader","useEffect","InfoDialogTrigger","body","dialogSize","DialogHeader","FormattedCountryName","countryCode","regionNames","formattedName","GeoChart","metricData","layoutProps","initialData","InfoTrigger"],"sources":["../../../common/foundation/resources/client/ui/library/utils/date/start-of-day.ts","../../../common/foundation/resources/client/ui/library/utils/date/end-of-day.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-presets.ts","../../../common/foundation/resources/client/ui/library/icons/material/DateRange.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/input.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/date-picker-field.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/utils.ts","../../../common/foundation/resources/client/ui/library/i18n/to-safe-zoned.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/use-base-date-picker-state.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/use-date-range-picker-state.ts","../../../common/foundation/resources/client/ui/library/icons/material/ArrowRightAlt.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/utils/adjust-segment.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/utils/set-segment.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/utils/page-step.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/editable-date-segment.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/literal-segment.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/utils/get-segment-limits.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/date-segment-list.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/calendar/calendar-cell.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/calendar/calendar-month.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/calendar/calendar.tsx","../../../common/foundation/resources/client/ui/library/i18n/formatted-date-time-range.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-preset-list.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-dialog.tsx","../../../common/foundation/resources/client/ui/library/icons/material/ArrowBack.tsx","../../../common/foundation/resources/client/ui/library/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon.tsx","../../../common/foundation/resources/client/admin/analytics/report-date-selector.tsx","../../../common/foundation/resources/client/charts/chart-layout.tsx","../../../common/foundation/resources/client/charts/chart-loading-indicator.tsx","../../../common/foundation/resources/client/charts/base-chart.tsx","../../../common/foundation/resources/client/charts/data/format-report-data.ts","../../../common/foundation/resources/client/charts/chart-colors.tsx","../../../common/foundation/resources/client/charts/line-chart.tsx","../../../common/foundation/resources/client/charts/polar-area-chart.tsx","../../../common/foundation/resources/client/admin/analytics/geo-chart/use-google-geo-chart.ts","../../../common/foundation/resources/client/ui/library/overlays/dialog/info-dialog-trigger/info-dialog-trigger.tsx","../../../common/foundation/resources/client/ui/library/i18n/formatted-country-name.tsx","../../../common/foundation/resources/client/admin/analytics/geo-chart/geo-chart.tsx"],"sourcesContent":["import {ZonedDateTime} from '@internationalized/date';\n\nexport function startOfDay(date: ZonedDateTime): ZonedDateTime {\n  return date.set({hour: 0, minute: 0, second: 0, millisecond: 0});\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function endOfDay(date: ZonedDateTime): ZonedDateTime {\n  return date.set({\n    hour: 24 - 1,\n    minute: 60 - 1,\n    second: 60 - 1,\n    millisecond: 1000 - 1,\n  });\n}\n","import {DateRangeValue} from '../date-range-value';\nimport {message} from '@ui/i18n/message';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport {\n  endOfMonth,\n  endOfWeek,\n  endOfYear,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n} from '@internationalized/date';\nimport {startOfDay} from '@ui/utils/date/start-of-day';\nimport {endOfDay} from '@ui/utils/date/end-of-day';\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\nimport {getCurrentDateTime} from '@ui/i18n/use-current-date-time';\n\nconst Now = startOfDay(getCurrentDateTime());\nconst locale = getBootstrapData()?.i18n?.language || 'en';\n\nexport interface DateRangePreset {\n  key: number;\n  label: MessageDescriptor;\n  getRangeValue: () => DateRangeValue;\n}\n\nexport const DateRangePresets: DateRangePreset[] = [\n  {\n    key: 0,\n    label: message('Today'),\n    getRangeValue: () => ({\n      preset: 0,\n      start: Now,\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 1,\n    label: message('Yesterday'),\n    getRangeValue: () => ({\n      preset: 1,\n      start: Now.subtract({days: 1}),\n      end: endOfDay(Now).subtract({days: 1}),\n    }),\n  },\n  {\n    key: 2,\n    label: message('This week'),\n    getRangeValue: () => ({\n      preset: 2,\n      start: startOfWeek(Now, locale),\n      end: endOfWeek(endOfDay(Now), locale),\n    }),\n  },\n  {\n    key: 3,\n    label: message('Last week'),\n    getRangeValue: () => {\n      const start = startOfWeek(Now, locale).subtract({days: 7});\n      return {\n        preset: 3,\n        start,\n        end: start.add({days: 6}),\n      };\n    },\n  },\n  {\n    key: 4,\n    label: message('Last 7 days'),\n    getRangeValue: () => ({\n      preset: 4,\n      start: Now.subtract({days: 7}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 6,\n    label: message('Last 30 days'),\n    getRangeValue: () => ({\n      preset: 6,\n      start: Now.subtract({days: 30}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 7,\n    label: message('Last 3 months'),\n    getRangeValue: () => ({\n      preset: 7,\n      start: Now.subtract({months: 3}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 8,\n    label: message('Last 12 months'),\n    getRangeValue: () => ({\n      preset: 8,\n      start: Now.subtract({months: 12}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 9,\n    label: message('This month'),\n    getRangeValue: () => ({\n      preset: 9,\n      start: startOfMonth(Now),\n      end: endOfMonth(endOfDay(Now)),\n    }),\n  },\n  {\n    key: 10,\n    label: message('This year'),\n    getRangeValue: () => ({\n      preset: 10,\n      start: startOfYear(Now),\n      end: endOfYear(endOfDay(Now)),\n    }),\n  },\n  {\n    key: 11,\n    label: message('Last year'),\n    getRangeValue: () => ({\n      preset: 11,\n      start: startOfYear(Now).subtract({years: 1}),\n      end: endOfYear(endOfDay(Now)).subtract({years: 1}),\n    }),\n  },\n];\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DateRangeIcon = createSvgIcon(\n  <path d=\"M7 11h2v2H7v-2zm14-5v14c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2zM5 8h14V6H5v2zm14 12V10H5v10h14zm-4-7h2v-2h-2v2zm-4 0h2v-2h-2v2z\" />\n, 'DateRangeOutlined');\n","import {FocusScope} from '@react-aria/focus';\nimport React, {ComponentPropsWithoutRef, CSSProperties, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface InputProps {\n  className?: string;\n  children: ReactNode;\n  autoFocus?: boolean;\n  disabled?: boolean;\n  style?: CSSProperties;\n  inputProps?: ComponentPropsWithoutRef<'div'>;\n  wrapperProps?: ComponentPropsWithoutRef<'div'>;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}\n\nexport const Input = React.forwardRef<HTMLDivElement, InputProps>(\n  (props, ref) => {\n    const {\n      children,\n      inputProps,\n      wrapperProps,\n      className,\n      autoFocus,\n      style,\n      onClick,\n    } = props;\n\n    return (\n      <div {...wrapperProps} onClick={onClick}>\n        <div\n          {...inputProps}\n          role=\"group\"\n          className={clsx(\n            className,\n            'flex items-center focus-within:ring focus-within:ring-primary/focus focus-within:border-primary/60'\n          )}\n          ref={ref}\n          style={style}\n        >\n          <FocusScope autoFocus={autoFocus}>{children}</FocusScope>\n        </div>\n      </div>\n    );\n  }\n);\n","import React, {ComponentPropsWithoutRef, FocusEventHandler, Ref} from 'react';\nimport clsx from 'clsx';\nimport {createFocusManager} from '@react-aria/focus';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {getInputFieldClassNames} from '../../get-input-field-class-names';\nimport {Field, FieldProps} from '../../field';\nimport {Input} from '../../input';\nimport {useField} from '../../use-field';\n\nexport interface DatePickerFieldProps\n  extends Omit<FieldProps, 'fieldClassNames'> {\n  inputRef?: Ref<HTMLDivElement>;\n  onBlur?: FocusEventHandler;\n  showCalendarFooter?: boolean;\n}\nexport const DatePickerField = React.forwardRef<\n  HTMLDivElement,\n  DatePickerFieldProps\n>(({inputRef, wrapperProps, children, onBlur, ...other}, ref) => {\n  const fieldClassNames = getInputFieldClassNames(other);\n  const objRef = useObjectRef(ref);\n\n  const {fieldProps, inputProps} = useField({\n    ...other,\n    focusRef: objRef,\n    labelElementType: 'span',\n  });\n\n  fieldClassNames.wrapper = clsx(\n    fieldClassNames.wrapper,\n    other.disabled && 'pointer-events-none',\n  );\n\n  return (\n    <Field\n      wrapperProps={mergeProps<ComponentPropsWithoutRef<'div'>[]>(\n        wrapperProps!,\n        {\n          onBlur: e => {\n            if (!objRef.current?.contains(e.relatedTarget)) {\n              onBlur?.(e);\n            }\n          },\n          onClick: () => {\n            // focus first segment when clicking on label or somewhere else in the field, but no directly on segment\n            const focusManager = createFocusManager(objRef);\n            focusManager?.focusFirst();\n          },\n        },\n      )}\n      fieldClassNames={fieldClassNames}\n      ref={objRef}\n      {...fieldProps}\n    >\n      <Input\n        inputProps={inputProps}\n        className={clsx(fieldClassNames.input, 'gap-10')}\n        ref={inputRef}\n      >\n        {children}\n      </Input>\n    </Field>\n  );\n});\n","import {CalendarDate, DateValue} from '@internationalized/date';\n\nexport function getDefaultGranularity(date: DateValue) {\n  if (date instanceof CalendarDate) {\n    return 'day';\n  }\n  return 'minute';\n}\n\nexport function dateIsInvalid(\n  date: CalendarDate,\n  min?: DateValue,\n  max?: DateValue\n) {\n  return (\n    (min != null && date.compare(min) < 0) ||\n    (max != null && date.compare(max) > 0)\n  );\n}\n","import {\n  CalendarDate,\n  CalendarDateTime,\n  Disambiguation,\n  toZoned,\n  ZonedDateTime,\n} from '@internationalized/date';\n\nexport function toSafeZoned(\n  date: CalendarDate | CalendarDateTime | ZonedDateTime,\n  timeZone: string,\n  disambiguation?: Disambiguation,\n): ZonedDateTime {\n  try {\n    return toZoned(date, timeZone, disambiguation);\n  } catch (e) {\n    return toZoned(date, 'UTC', disambiguation);\n  }\n}\n","import {useState} from 'react';\nimport {DateValue, ZonedDateTime} from '@internationalized/date';\nimport {getDefaultGranularity} from './utils';\nimport type {DatePickerValueProps} from './date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-picker/date-range-value';\nimport {useUserTimezone} from '@ui/i18n/use-user-timezone';\nimport {toSafeZoned} from '@ui/i18n/to-safe-zoned';\n\nexport function useBaseDatePickerState(\n  selectedDate: DateValue,\n  props:\n    | DatePickerValueProps<ZonedDateTime>\n    | DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>,\n) {\n  const timezone = useUserTimezone();\n  const [calendarIsOpen, setCalendarIsOpen] = useState(false);\n  const closeDialogOnSelection = props.closeDialogOnSelection ?? true;\n\n  const granularity = props.granularity || getDefaultGranularity(selectedDate);\n  const min = props.min ? toSafeZoned(props.min, timezone) : undefined;\n  const max = props.max ? toSafeZoned(props.max, timezone) : undefined;\n\n  return {\n    timezone,\n    granularity,\n    min,\n    max,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  };\n}\n","import {useControlledState} from '@react-stately/utils';\nimport {HTMLAttributes, useCallback, useState} from 'react';\nimport {\n  CalendarDate,\n  DateValue,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  maxDate,\n  minDate,\n  startOfMonth,\n  toCalendarDate,\n  ZonedDateTime,\n} from '@internationalized/date';\nimport {\n  BaseDatePickerState,\n  DatePickerValueProps,\n} from '../date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-value';\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\nimport {startOfDay} from '@ui/utils/date/start-of-day';\nimport {endOfDay} from '@ui/utils/date/end-of-day';\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\nimport {toSafeZoned} from '@ui/i18n/to-safe-zoned';\n\nexport interface IsPlaceholderValue {\n  start: boolean;\n  end: boolean;\n}\n\nexport type DateRangePickerState = BaseDatePickerState<\n  DateRangeValue,\n  IsPlaceholderValue\n>;\n\nexport function useDateRangePickerState(\n  props: DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>,\n): DateRangePickerState {\n  const now = useCurrentDateTime();\n  const [isPlaceholder, setIsPlaceholder] = useState<IsPlaceholderValue>({\n    start: (!props.value || !props.value.start) && !props.defaultValue?.start,\n    end: (!props.value || !props.value.end) && !props.defaultValue?.end,\n  });\n\n  // if user clears the date, we will want to still keep an\n  // instance internally, but return null via \"onChange\" callback\n  const setStateValue = props.onChange;\n  const [internalValue, setInternalValue] = useControlledState(\n    props.value ? completeRange(props.value, now) : undefined,\n    !props.value ? completeRange(props.defaultValue, now) : undefined,\n    value => {\n      setIsPlaceholder({start: false, end: false});\n      setStateValue?.(value);\n    },\n  );\n\n  const {\n    min,\n    max,\n    granularity,\n    timezone,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  } = useBaseDatePickerState(internalValue.start, props);\n\n  const clear = useCallback(() => {\n    setIsPlaceholder({start: true, end: true});\n    setInternalValue(completeRange(null, now));\n    setStateValue?.(null);\n    setCalendarIsOpen(false);\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\n\n  const [anchorDate, setAnchorDate] = useState<CalendarDate | null>(null);\n  const [isHighlighting, setIsHighlighting] = useState(false);\n  const [highlightedRange, setHighlightedRange] =\n    useState<DateRangeValue>(internalValue);\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\n    return rangeToCalendarDates(internalValue, max);\n  });\n\n  const constrainRange = useCallback(\n      (range: DateRangeValue): DateRangeValue => {\n        let start: ZonedDateTime = range.start ?? now;\n        let end: ZonedDateTime = range.end ?? now;\n\n        // Убедимся, что начальная дата больше минимальной и меньше конечной\n        if (min) {\n          start = (maxDate(start, min) as ZonedDateTime) ?? start;\n        }\n        const startMax = max ? minDate(max, end) : end;\n        if (startMax) {\n          start = (minDate(start, startMax) as ZonedDateTime) ?? start;\n        }\n\n        // Убедимся, что конечная дата больше минимальной и начальной\n        const endMin = min ? maxDate(min, start) : start;\n        if (endMin) {\n          end = (maxDate(end, endMin) as ZonedDateTime) ?? end;\n        }\n\n        if (max) {\n          end = (minDate(end, max) as ZonedDateTime) ?? end;\n        }\n\n        return {\n          start: toSafeZoned(start, timezone),\n          end: toSafeZoned(end, timezone),\n        };\n      },\n      [min, max, timezone, now],\n  );\n\n  const setSelectedValue = useCallback(\n    (newRange: DateRangeValue) => {\n      const value = {\n        ...constrainRange(newRange),\n        preset: newRange.preset,\n      };\n      setInternalValue(value);\n      setHighlightedRange(value);\n      setCalendarDates(rangeToCalendarDates(value, max));\n      setIsPlaceholder({start: false, end: false});\n    },\n    [setInternalValue, constrainRange, max],\n  );\n\n  const dayIsActive = useCallback(\n    (day: CalendarDate) => {\n      return (\n        (!isPlaceholder.start && isSameDay(day, highlightedRange.start)) ||\n        (!isPlaceholder.end && isSameDay(day, highlightedRange.end))\n      );\n    },\n    [highlightedRange, isPlaceholder],\n  );\n\n  const dayIsHighlighted = useCallback(\n    (day: CalendarDate) => {\n      return (\n        (isHighlighting || (!isPlaceholder.start && !isPlaceholder.end)) &&\n        day.compare(highlightedRange.start) >= 0 &&\n        day.compare(highlightedRange.end) <= 0\n      );\n    },\n    [highlightedRange, isPlaceholder, isHighlighting],\n  );\n\n  const dayIsRangeStart = useCallback(\n    (day: CalendarDate) => isSameDay(day, highlightedRange.start),\n    [highlightedRange],\n  );\n\n  const dayIsRangeEnd = useCallback(\n    (day: CalendarDate) => isSameDay(day, highlightedRange.end),\n    [highlightedRange],\n  );\n\n  const getCellProps = useCallback(\n    (date: CalendarDate, isSameMonth: boolean): HTMLAttributes<HTMLElement> => {\n      return {\n        onPointerEnter: () => {\n          if (isHighlighting && isSameMonth) {\n            setHighlightedRange(\n              makeRange({start: anchorDate!, end: date, timezone}),\n            );\n          }\n        },\n        onClick: () => {\n          if (!isHighlighting) {\n            setIsHighlighting(true);\n            setAnchorDate(date);\n            setHighlightedRange(makeRange({start: date, end: date, timezone}));\n          } else {\n            const finalRange = makeRange({\n              start: anchorDate!,\n              end: date,\n              timezone,\n            });\n            // cast to start and end of day after making range, because \"makeRange\"\n            // will flip start and end dates, if they are out of order\n            finalRange.start = startOfDay(finalRange.start);\n            finalRange.end = endOfDay(finalRange.end);\n            setIsHighlighting(false);\n            setAnchorDate(null);\n            setSelectedValue?.(finalRange);\n            if (closeDialogOnSelection) {\n              setCalendarIsOpen?.(false);\n            }\n          }\n        },\n      };\n    },\n    [\n      anchorDate,\n      isHighlighting,\n      setSelectedValue,\n      setCalendarIsOpen,\n      closeDialogOnSelection,\n      timezone,\n    ],\n  );\n\n  return {\n    selectedValue: internalValue,\n    setSelectedValue,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    dayIsActive,\n    dayIsHighlighted,\n    dayIsRangeStart,\n    dayIsRangeEnd,\n    getCellProps,\n    calendarDates,\n    setIsPlaceholder,\n    isPlaceholder,\n    clear,\n    setCalendarDates,\n    min,\n    max,\n    granularity,\n    timezone,\n    closeDialogOnSelection,\n  };\n}\n\nfunction rangeToCalendarDates(\n  range: DateRangeValue,\n  max?: DateValue,\n): CalendarDate[] {\n  let start = toCalendarDate(startOfMonth(range.start));\n  let end = toCalendarDate(endOfMonth(range.end));\n\n  // make sure we don't show the same month twice\n  if (isSameMonth(start, end)) {\n    end = endOfMonth(end.add({months: 1}));\n  }\n\n  // if next month is disabled, show previous instead\n  if (max && end.compare(max) > 0) {\n    end = start;\n    start = startOfMonth(start.subtract({months: 1}));\n  }\n  return [start, end];\n}\n\ninterface MakeRangeProps {\n  start: DateValue;\n  end: DateValue;\n  timezone: string;\n}\nfunction makeRange(props: MakeRangeProps): DateRangeValue {\n  const start = toSafeZoned(props.start, props.timezone);\n  const end = toSafeZoned(props.end, props.timezone);\n  if (start.compare(end) > 0) {\n    return {start: end, end: start};\n  }\n  return {start, end};\n}\n\nfunction completeRange(\n  range: Partial<DateRangeValue> | null | undefined,\n  now: ZonedDateTime,\n): DateRangeValue {\n  if (range?.start && range?.end) {\n    return range as DateRangeValue;\n  } else if (!range?.start && range?.end) {\n    range.start = range.end.subtract({months: 1});\n    return range as DateRangeValue;\n  } else if (!range?.end && range?.start) {\n    range.end = range.start.add({months: 1});\n    return range as DateRangeValue;\n  }\n  return {start: now, end: now.add({months: 1})};\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ArrowRightAltIcon = createSvgIcon(\n  <path d=\"M16.01 11H4v2h12.01v3L20 12l-3.99-4v3z\" />\n, 'ArrowRightAltOutlined');\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function adjustSegment(\n  value: ZonedDateTime,\n  part: string,\n  amount: number,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (part) {\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day':\n      return value.cycle(part, amount, {round: part === 'year'});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        const hours = value.hour;\n        const isPM = hours >= 12;\n        return value.set({hour: isPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n      case 'minute':\n      case 'second':\n        return value.cycle(part, amount, {\n          round: part !== 'hour',\n          hourCycle: options.hour12 ? 12 : 24,\n        });\n    }\n  }\n\n  return value;\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function setSegment(\n  value: ZonedDateTime,\n  part: string,\n  segmentValue: number,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (part) {\n    case 'day':\n    case 'month':\n    case 'year':\n      return value.set({[part]: segmentValue});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        const hours = value.hour;\n        const wasPM = hours >= 12;\n        const isPM = segmentValue >= 12;\n        if (isPM === wasPM) {\n          return value;\n        }\n        return value.set({hour: wasPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n        // In 12 hour time, ensure that AM/PM does not change\n        if (options.hour12) {\n          const hours = value.hour;\n          const wasPM = hours >= 12;\n          if (!wasPM && segmentValue === 12) {\n            segmentValue = 0;\n          }\n          if (wasPM && segmentValue < 12) {\n            segmentValue += 12;\n          }\n        }\n      // fallthrough\n      case 'minute':\n      case 'second':\n        return value.set({[part]: segmentValue});\n    }\n  }\n\n  return value;\n}\n","export const PAGE_STEP = {\n  year: 5,\n  month: 2,\n  day: 7,\n  hour: 2,\n  minute: 15,\n  second: 15,\n  dayPeriod: 1,\n};\n","import {useFocusManager} from '@react-aria/focus';\nimport React, {\n  ComponentPropsWithoutRef,\n  HTMLAttributes,\n  KeyboardEventHandler,\n  useMemo,\n  useRef,\n} from 'react';\nimport {NumberParser} from '@internationalized/number';\nimport {mergeProps} from '@react-aria/utils';\nimport {today, ZonedDateTime} from '@internationalized/date';\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {adjustSegment} from './utils/adjust-segment';\nimport {setSegment} from './utils/set-segment';\nimport {PAGE_STEP} from './utils/page-step';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\n\nexport interface EditableSegment {\n  type: 'day' | 'dayPeriod' | 'hour' | 'minute' | 'month' | 'second' | 'year';\n  text: string;\n  value: number;\n  minValue: number;\n  maxValue: number;\n  minLength: number;\n}\n\ninterface DatePickerSegmentProps {\n  segment: EditableSegment;\n  domProps?: ComponentPropsWithoutRef<'div'>;\n  state: DatePickerState | DateRangePickerState;\n  value: ZonedDateTime;\n  onChange: (newValue: ZonedDateTime) => void;\n  isPlaceholder?: boolean;\n}\nexport function EditableDateSegment({\n  segment,\n  domProps,\n  value,\n  onChange,\n  isPlaceholder,\n  state: {timezone, calendarIsOpen, setCalendarIsOpen},\n}: DatePickerSegmentProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const enteredKeys = useRef('');\n  const {localeCode} = useSelectedLocale();\n  const focusManager = useFocusManager();\n  const formatter = useDateFormatter({timeZone: timezone});\n  const parser = useMemo(\n    () => new NumberParser(localeCode, {maximumFractionDigits: 0}),\n    [localeCode],\n  );\n\n  const setSegmentValue = (newValue: number) => {\n    onChange(\n      setSegment(value, segment.type, newValue, formatter.resolvedOptions()),\n    );\n  };\n\n  const adjustSegmentValue = (amount: number) => {\n    onChange(\n      adjustSegment(value, segment.type, amount, formatter.resolvedOptions()),\n    );\n  };\n\n  const backspace = () => {\n    if (parser.isValidPartialNumber(segment.text)) {\n      const newValue = segment.text.slice(0, -1);\n      const parsed = parser.parse(newValue);\n      if (newValue.length === 0 || parsed === 0) {\n        const now = today(timezone);\n        if (segment.type in now) {\n          // @ts-ignore\n          setSegmentValue(now[segment.type]);\n        }\n      } else {\n        setSegmentValue(parsed);\n      }\n      enteredKeys.current = newValue;\n    } else if (segment.type === 'dayPeriod') {\n      adjustSegmentValue(-1);\n    }\n  };\n\n  const onKeyDown: KeyboardEventHandler = e => {\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) {\n      return;\n    }\n\n    // Navigation between date segments and deletion\n    switch (e.key) {\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        focusManager?.focusPrevious();\n        break;\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        focusManager?.focusNext();\n        break;\n      case 'Enter':\n        (e.target as HTMLElement).closest('form')?.requestSubmit();\n        setCalendarIsOpen(!calendarIsOpen);\n        break;\n      case 'Tab':\n        break;\n      case 'Backspace':\n      case 'Delete': {\n        e.preventDefault();\n        e.stopPropagation();\n        backspace();\n        break;\n      }\n\n      // Spinbutton incrementing/decrementing\n      case 'ArrowUp':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(1);\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(-1);\n        break;\n      case 'PageUp':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(PAGE_STEP[segment.type] || 1);\n        break;\n      case 'PageDown':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(-(PAGE_STEP[segment.type] || 1));\n        break;\n      case 'Home':\n        e.preventDefault();\n        enteredKeys.current = '';\n        setSegmentValue(segment.maxValue);\n        break;\n      case 'End':\n        e.preventDefault();\n        enteredKeys.current = '';\n        setSegmentValue(segment.minValue);\n        break;\n    }\n\n    onInput(e.key);\n  };\n\n  const amPmFormatter = useDateFormatter({hour: 'numeric', hour12: true});\n  const am = useMemo(() => {\n    const amDate = new Date();\n    amDate.setHours(0);\n    return amPmFormatter\n      .formatToParts(amDate)\n      .find(part => part.type === 'dayPeriod')!.value;\n  }, [amPmFormatter]);\n  const pm = useMemo(() => {\n    const pmDate = new Date();\n    pmDate.setHours(12);\n    return amPmFormatter\n      .formatToParts(pmDate)\n      .find(part => part.type === 'dayPeriod')!.value;\n  }, [amPmFormatter]);\n\n  // Update date values on user keyboard input\n  const onInput = (key: string) => {\n    const newValue = enteredKeys.current + key;\n\n    switch (segment.type) {\n      case 'dayPeriod':\n        if (am.toLowerCase().startsWith(key)) {\n          setSegmentValue(0);\n        } else if (pm.toLowerCase().startsWith(key)) {\n          setSegmentValue(12);\n        } else {\n          break;\n        }\n        focusManager?.focusNext();\n        break;\n      case 'day':\n      case 'hour':\n      case 'minute':\n      case 'second':\n      case 'month':\n      case 'year': {\n        if (!parser.isValidPartialNumber(newValue)) {\n          return;\n        }\n\n        let numberValue = parser.parse(newValue);\n        let segmentValue = numberValue;\n        let allowsZero = segment.minValue === 0;\n        if (segment.type === 'hour' && formatter.resolvedOptions().hour12) {\n          switch (formatter.resolvedOptions().hourCycle) {\n            case 'h11':\n              if (numberValue > 11) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n            case 'h12':\n              allowsZero = false;\n              if (numberValue > 12) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n          }\n\n          if (segment.value >= 12 && numberValue > 1) {\n            numberValue += 12;\n          }\n        } else if (numberValue > segment.maxValue) {\n          segmentValue = parser.parse(key);\n        }\n\n        if (Number.isNaN(numberValue)) {\n          return;\n        }\n\n        const shouldSetValue = segmentValue !== 0 || allowsZero;\n        if (shouldSetValue) {\n          setSegmentValue(segmentValue);\n        }\n\n        if (\n          Number(`${numberValue}0`) > segment.maxValue ||\n          newValue.length >= String(segment.maxValue).length\n        ) {\n          enteredKeys.current = '';\n          if (shouldSetValue) {\n            focusManager?.focusNext();\n          }\n        } else {\n          enteredKeys.current = newValue;\n        }\n        break;\n      }\n    }\n  };\n\n  const spinButtonProps: HTMLAttributes<HTMLDivElement> = isMobile\n    ? {}\n    : {\n        'aria-label': segment.type,\n        'aria-valuetext': isPlaceholder ? undefined : `${segment.value}`,\n        'aria-valuemin': segment.minValue,\n        'aria-valuemax': segment.maxValue,\n        'aria-valuenow': isPlaceholder ? undefined : segment.value,\n        tabIndex: 0,\n        onKeyDown,\n      };\n\n  return (\n    <div\n      {...mergeProps(domProps!, {\n        ...spinButtonProps,\n        onFocus: e => {\n          enteredKeys.current = '';\n          e.target.scrollIntoView({block: 'nearest'});\n        },\n        onClick: e => {\n          e.preventDefault();\n          e.stopPropagation();\n        },\n      } as HTMLAttributes<HTMLDivElement>)}\n      className=\"box-content cursor-default select-none whitespace-nowrap rounded p-2 text-center tabular-nums caret-transparent outline-none focus:bg-primary focus:text-on-primary\"\n    >\n      {segment.text.padStart(segment.minLength, '0')}\n    </div>\n  );\n}\n","import {useFocusManager} from '@react-aria/focus';\nimport {ComponentPropsWithoutRef} from 'react';\n\nexport interface LiteralSegment {\n  type: 'literal';\n  minLength: 1;\n  text: string;\n}\n\ninterface LiteralSegmentProps extends ComponentPropsWithoutRef<'div'> {\n  segment: LiteralSegment;\n  domProps?: ComponentPropsWithoutRef<'div'>;\n}\nexport function LiteralDateSegment({segment, domProps}: LiteralSegmentProps) {\n  const focusManager = useFocusManager();\n  return (\n    <div\n      {...domProps}\n      onPointerDown={e => {\n        if (e.pointerType === 'mouse') {\n          e.preventDefault();\n          const res = focusManager?.focusNext({from: e.target as HTMLElement});\n          if (!res) {\n            focusManager?.focusPrevious({from: e.target as HTMLElement});\n          }\n        }\n      }}\n      aria-hidden\n      className=\"min-w-4 cursor-default select-none\"\n    >\n      {segment.text}\n    </div>\n  );\n}\n","import {\n  DateValue,\n  getMinimumDayInMonth,\n  getMinimumMonthInYear,\n} from '@internationalized/date';\n\nexport function getSegmentLimits(\n  date: DateValue,\n  type: string,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (type) {\n    case 'year':\n      return {\n        value: date.year,\n        placeholder: 'yyyy',\n        minValue: 1,\n        maxValue: date.calendar.getYearsInEra(date),\n      };\n    case 'month':\n      return {\n        value: date.month,\n        placeholder: 'mm',\n        minValue: getMinimumMonthInYear(date),\n        maxValue: date.calendar.getMonthsInYear(date),\n      };\n    case 'day':\n      return {\n        value: date.day,\n        minValue: getMinimumDayInMonth(date),\n        maxValue: date.calendar.getDaysInMonth(date),\n        placeholder: 'dd',\n      };\n  }\n\n  if ('hour' in date) {\n    switch (type) {\n      case 'dayPeriod':\n        return {\n          value: date.hour >= 12 ? 12 : 0,\n          minValue: 0,\n          maxValue: 12,\n          placeholder: '--',\n        };\n      case 'hour':\n        if (options.hour12) {\n          const isPM = date.hour >= 12;\n          return {\n            value: date.hour,\n            minValue: isPM ? 12 : 0,\n            maxValue: isPM ? 23 : 11,\n            placeholder: '--',\n          };\n        }\n\n        return {\n          value: date.hour,\n          minValue: 0,\n          maxValue: 23,\n          placeholder: '--',\n        };\n      case 'minute':\n        return {\n          value: date.minute,\n          minValue: 0,\n          maxValue: 59,\n          placeholder: '--',\n        };\n    }\n  }\n\n  return {};\n}\n","import React, {ComponentPropsWithoutRef, useMemo} from 'react';\nimport {ZonedDateTime} from '@internationalized/date';\nimport {EditableDateSegment, EditableSegment} from './editable-date-segment';\nimport {LiteralDateSegment, LiteralSegment} from './literal-segment';\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {getSegmentLimits} from './utils/get-segment-limits';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface DateSegmentListProps {\n  segmentProps?: ComponentPropsWithoutRef<'div'>;\n  state: DatePickerState | DateRangePickerState;\n  value: ZonedDateTime;\n  onChange: (newValue: ZonedDateTime) => void;\n  isPlaceholder?: boolean;\n}\nexport function DateSegmentList({\n  segmentProps,\n  state,\n  value,\n  onChange,\n  isPlaceholder,\n}: DateSegmentListProps) {\n  const {granularity} = state;\n  const options = useMemo(() => {\n    const memoOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n    };\n    if (granularity === 'minute') {\n      memoOptions.hour = 'numeric';\n      memoOptions.minute = 'numeric';\n    }\n    return memoOptions;\n  }, [granularity]);\n\n  const formatter = useDateFormatter(options);\n\n  const dateValue = useMemo(() => value.toDate(), [value]);\n  const segments = useMemo(() => {\n    return formatter.formatToParts(dateValue).map(segment => {\n      const limits = getSegmentLimits(\n        value,\n        segment.type,\n        formatter.resolvedOptions(),\n      );\n      const textValue =\n        isPlaceholder && segment.type !== 'literal'\n          ? limits.placeholder\n          : segment.value;\n      return {\n        type: segment.type,\n        text: segment.value === ', ' ? ' ' : textValue,\n        ...limits,\n        minLength:\n          segment.type !== 'literal' ? String(limits.maxValue).length : 1,\n      } as LiteralSegment | EditableSegment;\n    });\n  }, [dateValue, formatter, isPlaceholder, value]);\n\n  return (\n    <div className=\"flex items-center\">\n      {segments.map((segment, index) => {\n        if (segment.type === 'literal') {\n          return (\n            <LiteralDateSegment\n              domProps={segmentProps}\n              key={index}\n              segment={segment}\n            />\n          );\n        }\n        return (\n          <EditableDateSegment\n            isPlaceholder={isPlaceholder}\n            domProps={segmentProps}\n            state={state}\n            value={value}\n            onChange={onChange}\n            segment={segment}\n            key={index}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  CalendarDate,\n  DateValue,\n  getDayOfWeek,\n  isSameMonth,\n  isToday,\n} from '@internationalized/date';\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {dateIsInvalid} from '../utils';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface CalendarCellProps {\n  date: CalendarDate;\n  currentMonth: DateValue;\n  state: DatePickerState | DateRangePickerState;\n}\nexport function CalendarCell({\n  date,\n  currentMonth,\n  state: {\n    dayIsActive,\n    dayIsHighlighted,\n    dayIsRangeStart,\n    dayIsRangeEnd,\n    getCellProps,\n    timezone,\n    min,\n    max,\n  },\n}: CalendarCellProps) {\n  const {localeCode} = useSelectedLocale();\n  const dayOfWeek = getDayOfWeek(date, localeCode);\n  const isActive = dayIsActive(date);\n  const isHighlighted = dayIsHighlighted(date);\n  const isRangeStart = dayIsRangeStart(date);\n  const isRangeEnd = dayIsRangeEnd(date);\n  const dayIsToday = isToday(date, timezone);\n  const sameMonth = isSameMonth(date, currentMonth);\n  const isDisabled = dateIsInvalid(date, min, max);\n\n  return (\n    <div\n      role=\"button\"\n      aria-disabled={isDisabled}\n      className={clsx(\n        'relative isolate h-40 w-40 flex-shrink-0 text-sm',\n        isDisabled && 'pointer-events-none text-disabled',\n        !sameMonth && 'pointer-events-none invisible',\n      )}\n      {...getCellProps(date, sameMonth)}\n    >\n      <span\n        className={clsx(\n          'absolute inset-0 z-10 flex h-full w-full cursor-pointer select-none items-center justify-center rounded-full',\n          !isActive && !dayIsToday && 'hover:bg-hover',\n          isActive && 'bg-primary font-semibold text-on-primary',\n          dayIsToday && !isActive && 'bg-chip',\n        )}\n      >\n        {date.day}\n      </span>\n      {isHighlighted && sameMonth && (\n        <span\n          className={clsx(\n            'absolute inset-0 h-full w-full bg-primary/focus',\n            (isRangeStart || dayOfWeek === 0 || date.day === 1) &&\n              'rounded-l-full',\n            (isRangeEnd ||\n              dayOfWeek === 6 ||\n              date.day ===\n                currentMonth.calendar.getDaysInMonth(currentMonth)) &&\n              'rounded-r-full',\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {\n  CalendarDate,\n  endOfMonth,\n  getWeeksInMonth,\n  startOfMonth,\n  startOfWeek,\n} from '@internationalized/date';\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport {CalendarCell} from './calendar-cell';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\nimport {dateIsInvalid} from '../utils';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\nexport interface CalendarMonthProps {\n  state: DatePickerState | DateRangePickerState;\n  startDate: CalendarDate;\n  isFirst: boolean;\n  isLast: boolean;\n}\nexport function CalendarMonth({\n  startDate,\n  state,\n  isFirst,\n  isLast,\n}: CalendarMonthProps) {\n  const {localeCode} = useSelectedLocale();\n  const weeksInMonth = getWeeksInMonth(startDate, localeCode);\n  const monthStart = startOfWeek(startDate, localeCode);\n\n  return (\n    <div className=\"w-280 flex-shrink-0\">\n      <CalendarMonthHeader\n        isFirst={isFirst}\n        isLast={isLast}\n        state={state}\n        currentMonth={startDate}\n      />\n      <div className=\"block\" role=\"grid\">\n        <WeekdayHeader state={state} startDate={startDate} />\n        {[...new Array(weeksInMonth).keys()].map(weekIndex => (\n          <m.div className=\"mb-6 flex\" key={weekIndex}>\n            {[...new Array(7).keys()].map(dayIndex => (\n              <CalendarCell\n                key={dayIndex}\n                date={monthStart.add({weeks: weekIndex, days: dayIndex})}\n                currentMonth={startDate}\n                state={state}\n              />\n            ))}\n          </m.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\ninterface CalendarMonthHeaderProps {\n  state: DatePickerState | DateRangePickerState;\n  currentMonth: CalendarDate;\n  isFirst: boolean;\n  isLast: boolean;\n}\nfunction CalendarMonthHeader({\n  currentMonth,\n  isFirst,\n  isLast,\n  state: {calendarDates, setCalendarDates, timezone, min, max},\n}: CalendarMonthHeaderProps) {\n  const shiftCalendars = (direction: 'forward' | 'backward') => {\n    const count = calendarDates.length;\n    let newDates: CalendarDate[];\n    if (direction === 'forward') {\n      newDates = calendarDates.map(date =>\n        endOfMonth(date.add({months: count})),\n      );\n    } else {\n      newDates = calendarDates.map(date =>\n        endOfMonth(date.subtract({months: count})),\n      );\n    }\n    setCalendarDates(newDates);\n  };\n\n  const monthFormatter = useDateFormatter({\n    month: 'long',\n    year: 'numeric',\n    era: currentMonth.calendar.identifier !== 'gregory' ? 'long' : undefined,\n    calendar: currentMonth.calendar.identifier,\n  });\n\n  const isBackwardDisabled = dateIsInvalid(\n    currentMonth.subtract({days: 1}),\n    min,\n    max,\n  );\n  const isForwardDisabled = dateIsInvalid(\n    startOfMonth(currentMonth.add({months: 1})),\n    min,\n    max,\n  );\n\n  return (\n    <div className=\"flex items-center justify-between gap-10\">\n      <IconButton\n        size=\"md\"\n        className={clsx('text-muted', !isFirst && 'invisible')}\n        disabled={!isFirst || isBackwardDisabled}\n        aria-hidden={!isFirst}\n        onClick={() => {\n          shiftCalendars('backward');\n        }}\n      >\n        <KeyboardArrowLeftIcon />\n      </IconButton>\n      <div className=\"select-none text-sm font-semibold\">\n        {monthFormatter.format(currentMonth.toDate(timezone))}\n      </div>\n      <IconButton\n        size=\"md\"\n        className={clsx('text-muted', !isLast && 'invisible')}\n        disabled={!isLast || isForwardDisabled}\n        aria-hidden={!isLast}\n        onClick={() => {\n          shiftCalendars('forward');\n        }}\n      >\n        <KeyboardArrowRightIcon />\n      </IconButton>\n    </div>\n  );\n}\n\ninterface WeekdayHeaderProps {\n  state: DatePickerState | DateRangePickerState;\n  startDate: CalendarDate;\n}\nfunction WeekdayHeader({state: {timezone}, startDate}: WeekdayHeaderProps) {\n  const {localeCode} = useSelectedLocale();\n  const dayFormatter = useDateFormatter({weekday: 'short'});\n\n  const monthStart = startOfWeek(startDate, localeCode);\n\n  return (\n    <div className=\"flex\">\n      {[...new Array(7).keys()].map(index => {\n        const date = monthStart.add({days: index});\n        const dateDay = date.toDate(timezone);\n        const weekday = dayFormatter.format(dateDay);\n        return (\n          <div\n            className=\"relative h-40 w-40 flex-shrink-0 text-sm font-semibold\"\n            key={index}\n          >\n            <div className=\"absolute flex h-full w-full select-none items-center justify-center\">\n              {weekday}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {startOfMonth, toCalendarDate} from '@internationalized/date';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {CalendarMonth} from './calendar-month';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface CalendarProps {\n  state: DatePickerState | DateRangePickerState;\n  visibleMonths?: 1 | 2;\n}\nexport function Calendar({state, visibleMonths = 1}: CalendarProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (isMobile) {\n    visibleMonths = 1;\n  }\n\n  return (\n    <Fragment>\n      {[...new Array(visibleMonths).keys()].map(index => {\n        const startDate = toCalendarDate(\n          startOfMonth(state.calendarDates[index])\n        );\n        const isFirst = index === 0;\n        const isLast = index === visibleMonths - 1;\n        return (\n          <CalendarMonth\n            key={index}\n            state={state}\n            startDate={startDate}\n            isFirst={isFirst}\n            isLast={isLast}\n          />\n        );\n      })}\n    </Fragment>\n  );\n}\n","import {DateValue, parseAbsolute} from '@internationalized/date';\nimport {Fragment, memo} from 'react';\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {shallowEqual} from '@ui/utils/shallow-equal';\nimport {useUserTimezone} from '@ui/i18n/use-user-timezone';\nimport {DateFormatPresets} from '@ui/i18n/formatted-date';\n\ninterface FormattedDateTimeRangeProps {\n  start?: string | DateValue | Date;\n  end?: string | DateValue | Date;\n  options?: Intl.DateTimeFormatOptions;\n  preset?: keyof typeof DateFormatPresets;\n  timezone?: string;\n}\nexport const FormattedDateTimeRange = memo(\n  ({\n    start,\n    end,\n    options,\n    preset,\n    timezone: propsTimezone,\n  }: FormattedDateTimeRangeProps) => {\n    const {dates} = useSettings();\n    const userTimezone = useUserTimezone();\n    const timezone = propsTimezone || options?.timeZone || userTimezone;\n    const formatter = useDateFormatter(\n      options ||\n        (DateFormatPresets as Record<string, Intl.DateTimeFormatOptions>)[\n          preset || dates?.format\n        ],\n    );\n\n    if (!start || !end) {\n      return null;\n    }\n\n    let value: string;\n\n    try {\n      value = formatter.formatRange(\n        castToDate(start, timezone),\n        castToDate(end, timezone),\n      );\n    } catch (e) {\n      value = '';\n    }\n\n    return <Fragment>{value}</Fragment>;\n  },\n  shallowEqual,\n);\n\nfunction castToDate(date: string | DateValue | Date, timezone: string): Date {\n  if (typeof date === 'string') {\n    return parseAbsolute(date, timezone).toDate();\n  }\n  if ('toDate' in date) {\n    return date.toDate(timezone);\n  }\n  return date;\n}\n","import {List, ListItem} from '@ui/list/list';\nimport {DateRangePresets} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {Trans} from '@ui/i18n/trans';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\n\ninterface DateRangePresetList {\n  onPresetSelected: (value: DateRangeValue) => void;\n  selectedValue?: DateRangeValue | null;\n}\nexport function DatePresetList({\n  onPresetSelected,\n  selectedValue,\n}: DateRangePresetList) {\n  return (\n    <List>\n      {DateRangePresets.map(preset => (\n        <ListItem\n          borderRadius=\"rounded-none\"\n          capitalizeFirst\n          key={preset.key}\n          isSelected={selectedValue?.preset === preset.key}\n          onSelected={() => {\n            const newValue = preset.getRangeValue();\n            onPresetSelected(newValue);\n          }}\n        >\n          <Trans {...preset.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import {message} from '@ui/i18n/message';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\n\nexport interface DateRangeComparePreset {\n  key: number;\n  label: MessageDescriptor;\n  getRangeValue: (range: DateRangeValue) => DateRangeValue;\n}\n\nexport const DateRangeComparePresets: DateRangeComparePreset[] = [\n  {\n    key: 0,\n    label: message('Preceding period'),\n    getRangeValue: (range: DateRangeValue) => {\n      const startDate = range.start;\n      const endDate = range.end;\n\n      const diffInMilliseconds =\n        endDate.toDate().getTime() - startDate.toDate().getTime();\n      const diffInMinutes = diffInMilliseconds / (1000 * 60);\n      const newStart = startDate.subtract({minutes: diffInMinutes});\n      return {\n        preset: 0,\n        start: newStart,\n        end: startDate,\n      };\n    },\n  },\n  {\n    key: 1,\n    label: message('Same period last year'),\n    getRangeValue: (range: DateRangeValue) => {\n      return {\n        start: range.start.subtract({years: 1}),\n        end: range.end.subtract({years: 1}),\n        preset: 1,\n      };\n    },\n  },\n  {\n    key: 2,\n    label: message('Custom'),\n    getRangeValue: (range: DateRangeValue) => {\n      return {\n        start: range.start.subtract({weeks: 1}),\n        end: range.end.subtract({weeks: 1}),\n        preset: 2,\n      };\n    },\n  },\n];\n","import {List, ListItem} from '@ui/list/list';\nimport {Trans} from '@ui/i18n/trans';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {DateRangeComparePresets} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\n\ninterface DateRangePresetList {\n  originalRangeValue: DateRangeValue;\n  onPresetSelected: (value: DateRangeValue) => void;\n  selectedValue?: DateRangeValue | null;\n}\nexport function DateRangeComparePresetList({\n  originalRangeValue,\n  onPresetSelected,\n  selectedValue,\n}: DateRangePresetList) {\n  return (\n    <List>\n      {DateRangeComparePresets.map(preset => (\n        <ListItem\n          borderRadius=\"rounded-none\"\n          capitalizeFirst\n          key={preset.key}\n          isSelected={selectedValue?.preset === preset.key}\n          onSelected={() => {\n            const newValue = preset.getRangeValue(originalRangeValue);\n            onPresetSelected(newValue);\n          }}\n        >\n          <Trans {...preset.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import React, {Fragment, ReactNode, useRef, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {DatePickerField} from '../date-picker-field';\nimport {DateRangePickerState} from '../use-date-range-picker-state';\nimport {Calendar} from '../../calendar/calendar';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {ArrowRightAltIcon} from '@ui/icons/material/ArrowRightAlt';\nimport {DateSegmentList} from '../../segments/date-segment-list';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedDateTimeRange} from '@ui/i18n/formatted-date-time-range';\nimport {DatePresetList} from './date-range-preset-list';\nimport {useIsTabletMediaQuery} from '@ui/utils/hooks/is-tablet-media-query';\nimport {Switch} from '@ui/forms/toggle/switch';\nimport {DateRangeComparePresetList} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list';\n\ninterface DateRangeDialogProps {\n  state: DateRangePickerState;\n  compareState?: DateRangePickerState;\n  compareVisibleDefault?: boolean;\n  showInlineDatePickerField?: boolean;\n}\nexport function DateRangeDialog({\n  state,\n  compareState,\n  showInlineDatePickerField = false,\n  compareVisibleDefault = false,\n}: DateRangeDialogProps) {\n  const isTablet = useIsTabletMediaQuery();\n  const {close} = useDialogContext();\n  const initialStateRef = useRef<DateRangePickerState>(state);\n  const hasPlaceholder = state.isPlaceholder.start || state.isPlaceholder.end;\n  const [compareVisible, setCompareVisible] = useState(compareVisibleDefault);\n\n  const footer = (\n    <DialogFooter\n      dividerTop\n      startAction={\n        !hasPlaceholder && !isTablet ? (\n          <div className=\"text-xs\">\n            <FormattedDateTimeRange\n              start={state.selectedValue.start.toDate()}\n              end={state.selectedValue.end.toDate()}\n              options={{dateStyle: 'medium'}}\n            />\n          </div>\n        ) : undefined\n      }\n    >\n      <Button\n        variant=\"text\"\n        size=\"xs\"\n        onClick={() => {\n          state.setSelectedValue(initialStateRef.current.selectedValue);\n          state.setIsPlaceholder(initialStateRef.current.isPlaceholder);\n          close();\n        }}\n      >\n        <Trans message=\"Cancel\" />\n      </Button>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        size=\"xs\"\n        onClick={() => {\n          const value = state.selectedValue;\n          if (compareState && compareVisible) {\n            value.compareStart = compareState.selectedValue.start;\n            value.compareEnd = compareState.selectedValue.end;\n          }\n          close(value);\n        }}\n      >\n        <Trans message=\"Select\" />\n      </Button>\n    </DialogFooter>\n  );\n\n  return (\n    <Dialog size=\"auto\">\n      <DialogBody className=\"flex\" padding=\"p-0\">\n        {!isTablet && (\n          <div className=\"min-w-192 py-14\">\n            <DatePresetList\n              selectedValue={state.selectedValue}\n              onPresetSelected={preset => {\n                state.setSelectedValue(preset);\n                if (state.closeDialogOnSelection) {\n                  close(preset);\n                }\n              }}\n            />\n            {!!compareState && (\n              <Fragment>\n                <Switch\n                  className=\"mx-20 mb-10 mt-14\"\n                  checked={compareVisible}\n                  onChange={e => setCompareVisible(e.target.checked)}\n                >\n                  <Trans message=\"Compare\" />\n                </Switch>\n                {compareVisible && (\n                  <DateRangeComparePresetList\n                    originalRangeValue={state.selectedValue}\n                    selectedValue={compareState.selectedValue}\n                    onPresetSelected={preset => {\n                      compareState.setSelectedValue(preset);\n                    }}\n                  />\n                )}\n              </Fragment>\n            )}\n          </div>\n        )}\n        <AnimatePresence initial={false}>\n          <Calendars\n            state={state}\n            compareState={compareState}\n            showInlineDatePickerField={showInlineDatePickerField}\n            compareVisible={compareVisible}\n          />\n        </AnimatePresence>\n      </DialogBody>\n      {!state.closeDialogOnSelection && footer}\n    </Dialog>\n  );\n}\n\ninterface CustomRangePanelProps {\n  state: DateRangePickerState;\n  compareState?: DateRangePickerState;\n  showInlineDatePickerField?: boolean;\n  compareVisible: boolean;\n}\nfunction Calendars({\n  state,\n  compareState,\n  showInlineDatePickerField,\n  compareVisible,\n}: CustomRangePanelProps) {\n  return (\n    <m.div\n      initial={{width: 0, overflow: 'hidden'}}\n      animate={{width: 'auto'}}\n      exit={{width: 0, overflow: 'hidden'}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"border-l px-20 pb-20 pt-10\"\n    >\n      {showInlineDatePickerField && (\n        <div>\n          <InlineDatePickerField state={state} />\n          {!!compareState && compareVisible && (\n            <InlineDatePickerField\n              state={compareState}\n              label={<Trans message=\"Compare\" />}\n            />\n          )}\n        </div>\n      )}\n      <div className=\"flex items-start gap-36\">\n        <Calendar state={state} visibleMonths={2} />\n      </div>\n    </m.div>\n  );\n}\n\ninterface InlineDatePickerFieldProps {\n  state: DateRangePickerState;\n  label?: ReactNode;\n}\nfunction InlineDatePickerField({state, label}: InlineDatePickerFieldProps) {\n  const {selectedValue, setSelectedValue} = state;\n  return (\n    <DatePickerField className=\"mb-20 mt-10\" label={label}>\n      <DateSegmentList\n        state={state}\n        value={selectedValue.start}\n        onChange={newValue => {\n          setSelectedValue({...selectedValue, start: newValue});\n        }}\n      />\n      <ArrowRightAltIcon className=\"block flex-shrink-0 text-muted\" size=\"md\" />\n      <DateSegmentList\n        state={state}\n        value={selectedValue.end}\n        onChange={newValue => {\n          setSelectedValue({...selectedValue, end: newValue});\n        }}\n      />\n    </DatePickerField>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ArrowBackIcon = createSvgIcon(\n  <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n, 'ArrowBackOutlined');\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const InfoDialogTriggerIcon = createSvgIcon(\n  <path d=\"M9 8a1 1 0 0 0-1-1H5.5a1 1 0 1 0 0 2H7v4a1 1 0 0 0 2 0zM4 0h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4zm4 5.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\" />,\n  'InfoDialogTrigger',\n);\n","import {useDateRangePickerState} from '@ui/forms/input-field/date/date-range-picker/use-date-range-picker-state';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Button} from '@ui/buttons/button';\nimport {DateRangeIcon} from '@ui/icons/material/DateRange';\nimport {FormattedDateTimeRange} from '@ui/i18n/formatted-date-time-range';\nimport {DateRangeDialog} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog';\nimport React from 'react';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {DateFormatPresets} from '@ui/i18n/formatted-date';\nimport {DateRangeComparePresets} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\nimport {Granularity} from '@ui/forms/input-field/date/date-picker/use-date-picker-state';\n\nconst monthDayFormat: Intl.DateTimeFormatOptions = {\n  month: 'short',\n  day: '2-digit',\n};\n\ninterface ReportDataSelectorProps {\n  value: DateRangeValue;\n  disabled?: boolean;\n  onChange: (value: DateRangeValue) => void;\n  compactOnMobile?: boolean;\n  enableCompare?: boolean;\n  granularity?: Granularity;\n}\nexport function ReportDateSelector({\n  value,\n  onChange,\n  disabled,\n  compactOnMobile = true,\n  enableCompare = false,\n  granularity = 'minute',\n}: ReportDataSelectorProps) {\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <DialogTrigger\n      type=\"popover\"\n      onClose={value => {\n        if (value) {\n          onChange(value);\n        }\n      }}\n    >\n      <Button\n        variant=\"outline\"\n        color=\"chip\"\n        endIcon={<DateRangeIcon />}\n        disabled={disabled}\n      >\n        <FormattedDateTimeRange\n          start={value.start}\n          end={value.end}\n          options={\n            isMobile && compactOnMobile\n              ? monthDayFormat\n              : DateFormatPresets.short\n          }\n        />\n      </Button>\n      <DateSelectorDialog\n        value={value}\n        enableCompare={enableCompare}\n        granularity={granularity}\n      />\n    </DialogTrigger>\n  );\n}\n\ninterface DateSelectorDialogProps {\n  value: DateRangeValue;\n  enableCompare: boolean;\n  granularity: Granularity;\n}\nfunction DateSelectorDialog({\n  value,\n  enableCompare,\n  granularity,\n}: DateSelectorDialogProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const state = useDateRangePickerState({\n    granularity,\n    defaultValue: {\n      start: value.start,\n      end: value.end,\n      preset: value.preset,\n    },\n    closeDialogOnSelection: false,\n  });\n  const compareHasInitialValue = !!value.compareStart && !!value.compareEnd;\n  const compareState = useDateRangePickerState({\n    granularity,\n    defaultValue: compareHasInitialValue\n      ? {\n          start: value.compareStart,\n          end: value.compareEnd,\n          preset: value.comparePreset,\n        }\n      : DateRangeComparePresets[0].getRangeValue(state.selectedValue),\n  });\n  return (\n    <DateRangeDialog\n      state={state}\n      compareState={enableCompare ? compareState : undefined}\n      compareVisibleDefault={compareHasInitialValue}\n      showInlineDatePickerField={!isMobile}\n    />\n  );\n}\n","import {ReactNode, Ref} from 'react';\nimport clsx from 'clsx';\n\nexport interface ChartLayoutProps {\n  title: ReactNode;\n  description?: ReactNode;\n  className?: string;\n  children: ReactNode;\n  contentIsFlex?: boolean;\n  contentClassName?: string;\n  minHeight?: string;\n  contentRef?: Ref<HTMLDivElement>;\n  isLoading?: boolean;\n}\nexport function ChartLayout(props: ChartLayoutProps) {\n  const {\n    title,\n    description,\n    children,\n    className,\n    contentIsFlex = true,\n    contentClassName,\n    contentRef,\n    minHeight = 'min-h-440',\n  } = props;\n\n  return (\n    <div\n      className={clsx(\n        'flex h-full flex-auto flex-col rounded-panel border bg dark:bg-alt',\n        minHeight,\n        className,\n      )}\n    >\n      <div className=\"flex flex-shrink-0 items-center justify-between p-14 text-xs\">\n        <div className=\"text-sm font-semibold\">{title}</div>\n        {description && <div className=\"text-muted\">{description}</div>}\n      </div>\n      <div\n        ref={contentRef}\n        className={clsx(\n          'relative p-14',\n          contentIsFlex && 'flex flex-auto items-center justify-center',\n          contentClassName,\n        )}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n","import {ProgressCircle} from '@ui/progress/progress-circle';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function ChartLoadingIndicator() {\n  return (\n    <div className=\"absolute mx-auto flex items-center gap-10 text-sm\">\n      <ProgressCircle isIndeterminate size=\"sm\" />\n      <Trans message=\"Chart loading\" />\n    </div>\n  );\n}\n","import type {ChartData, ChartOptions, ChartType} from 'chart.js';\nimport {lazy, Suspense} from 'react';\nimport {ChartLayout, ChartLayoutProps} from './chart-layout';\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\n\nconst LazyChart = lazy(() => import('./lazy-chart'));\n\nexport interface BaseChartProps<Type extends ChartType = ChartType>\n  extends Omit<ChartLayoutProps, 'children'> {\n  type: Type;\n  data: ChartData<Type, unknown>;\n  options?: ChartOptions<Type>;\n  hideLegend?: boolean;\n}\nexport function BaseChart<Type extends ChartType = ChartType>(\n  props: BaseChartProps<Type>\n) {\n  const {title, description, className, contentRef, isLoading} = props;\n\n  return (\n    <ChartLayout\n      title={title}\n      description={description}\n      className={className}\n      contentRef={contentRef}\n    >\n      <Suspense fallback={<ChartLoadingIndicator />}>\n        <LazyChart {...props} />\n        {isLoading && <ChartLoadingIndicator />}\n      </Suspense>\n    </ChartLayout>\n  );\n}\n","import {DateFormatter, parseAbsoluteToLocal} from '@internationalized/date';\nimport memoize from 'nano-memoize';\nimport {ChartType} from 'chart.js';\nimport {\n  FormattedDatasetItem,\n  FormattedReportData,\n} from './formatted-dataset-item';\nimport {\n  DatasetItem,\n  RangedDatasetGranularity,\n  ReportMetric,\n} from '../../admin/analytics/report-metric';\nimport {shallowEqual} from '@ui/utils/shallow-equal';\n\ninterface Options {\n  localeCode: string;\n  shareFirstDatasetLabels?: boolean;\n}\n\ntype FormattedDatasetLabels = Omit<FormattedDatasetItem, 'value'>;\n\nexport function formatReportData(\n  report: ReportMetric<DatasetItem> | undefined,\n  {localeCode = 'en', shareFirstDatasetLabels = true}: Options,\n): FormattedReportData {\n  if (!report) return {datasets: []};\n\n  const firstDatasetLabels: FormattedDatasetLabels[] = [];\n\n  return {\n    ...report,\n    datasets: report.datasets.map((dataset, datasetIndex) => {\n      const data = dataset.data.map((datasetItem, itemIndex) => {\n        let label: FormattedDatasetLabels;\n        // when there are multiple datasets, we'll need to use labels from the first dataset, so charts are\n        // overlapped over one another, otherwise they will be side by side, if labels in all datasets are not identical.\n        if (datasetIndex === 0 || !shareFirstDatasetLabels) {\n          label = generateDatasetLabels(\n            datasetItem,\n            report.granularity,\n            localeCode,\n          );\n          firstDatasetLabels[itemIndex] = label;\n        } else {\n          label = firstDatasetLabels[itemIndex];\n        }\n        return {\n          ...label,\n          value: datasetItem.value,\n        };\n      });\n\n      return {...dataset, data};\n    }),\n  };\n}\n\nfunction generateDatasetLabels<T extends ChartType = ChartType>(\n  datum: DatasetItem,\n  granularity: RangedDatasetGranularity | undefined,\n  locale: string,\n): FormattedDatasetLabels {\n  if (datum.label) {\n    return {label: datum.label};\n  }\n\n  if (!datum.date) {\n    return {label: ''};\n  }\n\n  return generateTimeLabels(datum, granularity, locale);\n}\n\nfunction generateTimeLabels(\n  {date: isoDate, endDate: isoEndDate}: DatasetItem,\n  granularity: RangedDatasetGranularity | undefined = 'day',\n  locale: string,\n): Omit<FormattedDatasetItem, 'value'> {\n  const date = parseAbsoluteToLocal(isoDate!).toDate();\n  const endDate = isoEndDate ? parseAbsoluteToLocal(isoEndDate).toDate() : null;\n\n  switch (granularity) {\n    case 'minute':\n      return {\n        label: getFormatter(locale, {\n          second: '2-digit',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          day: '2-digit',\n          hour: 'numeric',\n          minute: 'numeric',\n          second: '2-digit',\n        }).format(date),\n      };\n    case 'hour':\n      return {\n        label: getFormatter(locale, {\n          hour: 'numeric',\n          minute: 'numeric',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          month: 'short',\n          day: '2-digit',\n          hour: 'numeric',\n          minute: 'numeric',\n        }).format(date),\n      };\n    case 'day':\n      return {\n        label: getFormatter(locale, {\n          day: '2-digit',\n          weekday: 'short',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          day: '2-digit',\n          weekday: 'short',\n          month: 'short',\n        }).format(date),\n      };\n    case 'week':\n      return {\n        label: getFormatter(locale, {\n          month: 'short',\n          day: '2-digit',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          day: '2-digit',\n          month: 'long',\n          year: 'numeric',\n        }).formatRange(date, endDate as Date),\n      };\n    case 'month':\n      return {\n        label: getFormatter(locale, {\n          month: 'short',\n          year: 'numeric',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          month: 'long',\n          year: 'numeric',\n        }).format(date),\n      };\n    case 'year':\n      return {\n        label: getFormatter(locale, {\n          year: 'numeric',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          year: 'numeric',\n        }).format(date),\n      };\n  }\n}\n\nconst getFormatter = memoize(\n  (locale, options: Intl.DateTimeFormatOptions) => {\n    return new DateFormatter(locale, options);\n  },\n  {\n    equals: (a, b) => {\n      return shallowEqual(a, b);\n    },\n    callTimeout: undefined as any,\n  },\n);\n","import {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\n\nconst primaryColor = getBootstrapData().themes[0].values['--be-primary'];\nexport const ChartColors = [\n  [\n    `rgb(${primaryColor.replaceAll(' ', ',')})`,\n    `rgba(${primaryColor.replaceAll(' ', ',')},0.2)`,\n  ],\n  ['rgb(255,112,67)', 'rgb(255,112,67,0.2)'],\n  ['rgb(255,167,38)', 'rgb(255,167,38,0.2)'],\n  ['rgb(141,110,99)', 'rgb(141,110,99,0.2)'],\n  ['rgb(102,187,106)', 'rgba(102,187,106,0.2)'],\n  ['rgb(92,107,192)', 'rgb(92,107,192,0.2)'],\n];\n","import {BaseChart, BaseChartProps} from './base-chart';\nimport {DatasetItem, ReportMetric} from '../admin/analytics/report-metric';\nimport {useMemo} from 'react';\nimport {formatReportData} from './data/format-report-data';\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\nimport {ChartData, ChartOptions} from 'chart.js';\nimport {ChartColors} from './chart-colors';\nimport {FormattedDatasetItem} from './data/formatted-dataset-item';\nimport clsx from 'clsx';\n\nconst LineChartOptions: ChartOptions<'line'> = {\n  parsing: {\n    xAxisKey: 'label',\n    yAxisKey: 'value',\n  },\n  datasets: {\n    line: {\n      fill: 'origin',\n      tension: 0.1,\n      pointBorderWidth: 4,\n      pointHitRadius: 10,\n    },\n  },\n  plugins: {\n    tooltip: {\n      intersect: false,\n      mode: 'index',\n    },\n  },\n};\n\ninterface LineChartProps extends Omit<BaseChartProps<'line'>, 'type' | 'data'> {\n  data?: ReportMetric<DatasetItem>;\n}\nexport function LineChart({data, className, ...props}: LineChartProps) {\n  const {localeCode} = useSelectedLocale();\n  const formattedData: ChartData<'line', FormattedDatasetItem[]> =\n    useMemo(() => {\n      const formattedData = formatReportData(data, {localeCode});\n      formattedData.datasets = formattedData.datasets.map((dataset, i) => ({\n        ...dataset,\n        backgroundColor: ChartColors[i][1],\n        borderColor: ChartColors[i][0],\n        pointBackgroundColor: ChartColors[i][0],\n      }));\n      return formattedData;\n    }, [data, localeCode]);\n\n  return (\n    <BaseChart\n      {...props}\n      className={clsx(className, 'min-w-500')}\n      data={formattedData}\n      type=\"line\"\n      options={LineChartOptions}\n    />\n  );\n}\n","import {BaseChart, BaseChartProps} from './base-chart';\nimport {ChartData, ChartOptions} from 'chart.js';\nimport {ChartColors} from './chart-colors';\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\nimport {useMemo} from 'react';\nimport {formatReportData} from './data/format-report-data';\nimport {DatasetItem, ReportMetric} from '../admin/analytics/report-metric';\nimport {FormattedDatasetItem} from './data/formatted-dataset-item';\nimport clsx from 'clsx';\n\nconst PolarAreaChartOptions: ChartOptions<'polarArea'> = {\n  parsing: {\n    key: 'value',\n  },\n  plugins: {\n    tooltip: {\n      intersect: true,\n    },\n  },\n};\n\ninterface PolarAreaChartProps\n  extends Omit<BaseChartProps<'polarArea'>, 'type' | 'data'> {\n  data?: ReportMetric<DatasetItem>;\n}\nexport function PolarAreaChart({\n  data,\n  className,\n  ...props\n}: PolarAreaChartProps) {\n  const {localeCode} = useSelectedLocale();\n  const formattedData: ChartData<'polarArea', FormattedDatasetItem[]> =\n    useMemo(() => {\n      const formattedData = formatReportData(data, {localeCode});\n      formattedData.labels = formattedData.datasets[0]?.data.map(d => d.label);\n      formattedData.datasets = formattedData.datasets.map((dataset, i) => ({\n        ...dataset,\n        backgroundColor: ChartColors.map(c => c[1]),\n        borderColor: ChartColors.map(c => c[0]),\n        borderWidth: 2,\n      }));\n      return formattedData;\n    }, [data, localeCode]);\n\n  return (\n    <BaseChart\n      type=\"polarArea\"\n      data={formattedData}\n      options={PolarAreaChartOptions}\n      className={clsx(className, 'min-w-500')}\n      {...props}\n    />\n  );\n}\n","import lazyLoader from '@ui/utils/loaders/lazy-loader';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {RefObject, useCallback, useEffect, useRef} from 'react';\nimport {useThemeSelector} from '@ui/themes/theme-selector-context';\nimport {themeValueToHex} from '@ui/themes/utils/theme-value-to-hex';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {LocationDatasetItem} from '@common/admin/analytics/report-metric';\n\nconst loaderUrl = 'https://www.gstatic.com/charts/loader.js';\n\ninterface UseGoogleGeoChartProps {\n  placeholderRef: RefObject<HTMLDivElement>;\n  data: LocationDatasetItem[];\n  onCountrySelected?: (countryCode: string) => void;\n  country?: string;\n}\nexport function useGoogleGeoChart({\n  placeholderRef,\n  data,\n  country,\n  onCountrySelected,\n}: UseGoogleGeoChartProps) {\n  const {trans} = useTrans();\n  const {analytics} = useSettings();\n  const apiKey = analytics?.gchart_api_key;\n  const {selectedTheme} = useThemeSelector();\n  const geoChartRef = useRef<google.visualization.GeoChart>();\n  // only allow selecting countries, not cities\n  const regionInteractivity = !!onCountrySelected && !country;\n  const drawGoogleChart = useCallback(() => {\n    if (typeof google === 'undefined') return;\n\n    const seedData = data.map(location => [location.label, location.value]);\n    seedData.unshift([\n      country ? trans(message('City')) : trans(message('Country')),\n      trans(message('Clicks')),\n    ]);\n\n    const backgroundColor = `${themeValueToHex(\n      selectedTheme.values['--be-paper'],\n    )}`;\n    const chartColor = `${themeValueToHex(\n      selectedTheme.values['--be-primary'],\n    )}`;\n\n    const options: google.visualization.GeoChartOptions = {\n      colorAxis: {colors: [chartColor]},\n      backgroundColor,\n      region: country ? country.toUpperCase() : undefined,\n      resolution: country ? 'provinces' : 'countries',\n      displayMode: country ? 'markers' : 'regions',\n      enableRegionInteractivity: regionInteractivity,\n    };\n\n    if (\n      !geoChartRef.current &&\n      placeholderRef.current &&\n      google?.visualization?.GeoChart\n    ) {\n      geoChartRef.current = new google.visualization.GeoChart(\n        placeholderRef.current,\n      );\n    }\n    geoChartRef.current?.draw(\n      google.visualization.arrayToDataTable(seedData),\n      options,\n    );\n  }, [\n    selectedTheme,\n    data,\n    placeholderRef,\n    trans,\n    country,\n    regionInteractivity,\n  ]);\n\n  const initGoogleGeoChart = useCallback(async () => {\n    if (lazyLoader.isLoadingOrLoaded(loaderUrl)) return;\n    await lazyLoader.loadAsset(loaderUrl, {type: 'js', id: 'google-charts-js'});\n    await google.charts.load('current', {\n      packages: ['geochart'],\n      mapsApiKey: apiKey,\n    });\n    drawGoogleChart();\n  }, [apiKey, drawGoogleChart]);\n\n  useEffect(() => {\n    if (geoChartRef.current && onCountrySelected) {\n      google.visualization.events.addListener(\n        geoChartRef.current,\n        'regionClick',\n        (a: {region: string}) => onCountrySelected?.(a.region),\n      );\n    }\n\n    return () => {\n      if (geoChartRef.current) {\n        google.visualization.events.removeAllListeners(geoChartRef.current);\n      }\n    };\n    // this will correctly run when geochart instance is set on ref\n  }, [onCountrySelected, geoChartRef.current]);\n\n  // on component load: load chart library then draw, otherwise just draw\n  useEffect(() => {\n    initGoogleGeoChart();\n  }, [initGoogleGeoChart]);\n\n  // redraw chart if data or theme changes\n  useEffect(() => {\n    drawGoogleChart();\n  }, [selectedTheme, drawGoogleChart, data]);\n\n  return {drawGoogleChart};\n}\n","import {IconButton} from '@ui/buttons/icon-button';\nimport {InfoDialogTriggerIcon} from '@ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon';\nimport {Dialog, DialogSize} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport React, {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface Props {\n  title?: ReactNode;\n  body: ReactNode;\n  dialogSize?: DialogSize;\n  className?: string;\n}\nexport function InfoDialogTrigger({\n  title,\n  body,\n  dialogSize = 'sm',\n  className,\n}: Props) {\n  return (\n    <DialogTrigger type=\"popover\" triggerOnHover>\n      <IconButton\n        className={clsx('ml-4 text-muted opacity-70', className)}\n        iconSize=\"xs\"\n        size=\"2xs\"\n      >\n        <InfoDialogTriggerIcon viewBox=\"0 0 16 16\" />\n      </IconButton>\n      <Dialog size={dialogSize}>\n        {title && (\n          <DialogHeader padding=\"px-18 pt-12\" size=\"md\" hideDismissButton>\n            {title}\n          </DialogHeader>\n        )}\n        <DialogBody>{body}</DialogBody>\n      </Dialog>\n    </DialogTrigger>\n  );\n}\n","import {useSelectedLocale} from '@ui/i18n/selected-locale';\nimport {Fragment, memo} from 'react';\n\ninterface Props {\n  code: string;\n}\nexport const FormattedCountryName = memo(({code: countryCode}: Props) => {\n  const {localeCode} = useSelectedLocale();\n  const regionNames = new Intl.DisplayNames([localeCode], {type: 'region'});\n  let formattedName: string | undefined;\n\n  try {\n    formattedName = regionNames.of(countryCode.toUpperCase());\n  } catch (e) {}\n\n  return <Fragment>{formattedName}</Fragment>;\n});\n","import {\n  LocationDatasetItem,\n  ReportMetric,\n} from '@common/admin/analytics/report-metric';\nimport React, {useMemo, useRef} from 'react';\nimport {useGoogleGeoChart} from './use-google-geo-chart';\nimport {ChartLayout, ChartLayoutProps} from '@common/charts/chart-layout';\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\nimport {Button} from '@ui/buttons/button';\nimport {ArrowBackIcon} from '@ui/icons/material/ArrowBack';\nimport clsx from 'clsx';\nimport {InfoDialogTrigger} from '@ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedCountryName} from '@ui/i18n/formatted-country-name';\n\ninterface GeoChartData extends Partial<ChartLayoutProps> {\n  data?: ReportMetric<LocationDatasetItem>;\n  onCountrySelected?: (countryCode: string | undefined) => void;\n  country?: string;\n}\nexport function GeoChart({\n  data: metricData,\n  isLoading,\n  onCountrySelected,\n  country,\n  ...layoutProps\n}: GeoChartData) {\n  const placeholderRef = useRef<HTMLDivElement>(null);\n  const regionInteractivity = !!onCountrySelected;\n\n  // memo data to avoid redrawing chart on rerender\n  const initialData = metricData?.datasets[0].data;\n  const data = useMemo(() => {\n    return initialData || [];\n  }, [initialData]);\n  useGoogleGeoChart({placeholderRef, data, country, onCountrySelected});\n\n  return (\n    <ChartLayout\n      {...layoutProps}\n      className=\"min-w-500\"\n      title={\n        <div className=\"flex items-center\">\n          <Trans message=\"Top Locations\" />\n          {country ? (\n            <span className=\"pl-4\">\n              ({<FormattedCountryName code={country} />})\n            </span>\n          ) : null}\n          {regionInteractivity && <InfoTrigger />}\n        </div>\n      }\n      contentIsFlex={isLoading}\n    >\n      {isLoading && <ChartLoadingIndicator />}\n      <div className=\"flex gap-24\">\n        <div\n          ref={placeholderRef}\n          className=\"min-h-[340px] w-[480px] flex-auto\"\n        />\n        <div className=\"w-[170px]\">\n          <div className=\"max-h-[340px] w-full flex-initial overflow-y-auto text-sm\">\n            {data.map(location => (\n              <div\n                key={location.label}\n                className={clsx(\n                  'mb-4 flex items-center gap-4',\n                  regionInteractivity && 'cursor-pointer hover:underline',\n                )}\n                role={regionInteractivity ? 'button' : undefined}\n                onClick={() => {\n                  onCountrySelected?.(location.code);\n                }}\n              >\n                <div className=\"max-w-110 overflow-hidden overflow-ellipsis whitespace-nowrap\">\n                  {location.label}\n                </div>\n                <div>({location.percentage})%</div>\n              </div>\n            ))}\n          </div>\n          {country && (\n            <Button\n              variant=\"outline\"\n              size=\"xs\"\n              className=\"mt-14\"\n              startIcon={<ArrowBackIcon />}\n              onClick={() => {\n                onCountrySelected?.(undefined);\n              }}\n            >\n              <Trans message=\"Back to countries\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </ChartLayout>\n  );\n}\n\nfunction InfoTrigger() {\n  return (\n    <InfoDialogTrigger\n      title={<Trans message=\"Zooming in\" />}\n      body={\n        <Trans message=\"Click on a country inside the map or country list to zoom in and see city data for that country.\" />\n      }\n    />\n  );\n}\n"],"file":"assets/geo-chart-27312805.js"}