{"version":3,"file":"backstage-track-insights-5057e4dc.js","sources":["../../../common/foundation/resources/client/datatable/requests/paginated-resources.ts","../../../common/foundation/resources/client/ui/normalized-model/use-normalized-models.ts","../../../common/foundation/resources/client/ui/normalized-model/use-normalized-model.ts","../../../common/foundation/resources/client/ui/normalized-model/normalized-model-field.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/chip-field/string-to-chip-value.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/chip-field/chip-field.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/chip-field/form-chip-field.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-picker/use-date-picker-state.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-picker/date-picker.tsx","../../../common/foundation/resources/client/ui/library/utils/hooks/sticky-sentinel.ts","../../../common/foundation/resources/client/admin/crupdate-resource-layout.tsx","../../../common/foundation/resources/client/ui/library/icons/material/Info.tsx","../../../resources/client/admin/tracks-datatable-page/music.svg","../../../resources/client/web-player/artists/artist-picker/use-artist-picker-suggestions.ts","../../../resources/client/web-player/artists/artist-picker/form-artist-picker.tsx","../../../common/foundation/resources/client/tags/form-normalized-model-chip-field.tsx","../../../common/foundation/resources/client/tags/tag.ts","../../../common/foundation/resources/client/ui/library/icons/material/FileUpload.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-upload-status-text.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-upload-progress.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-extract-track-file-metadata.ts","../../../resources/client/web-player/backstage/upload-page/use-track-uploader.ts","../../../resources/client/web-player/backstage/upload-page/use-track-upload.ts","../../../resources/client/admin/tracks-datatable-page/track-form/track-form-upload-button.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-form.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-create-track.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/use-create-track-form.ts","../../../resources/client/web-player/backstage/images/light-bg.svg","../../../resources/client/web-player/backstage/images/dark-bg.svg","../../../resources/client/web-player/backstage/backstage-layout.tsx","../../../resources/client/admin/tracks-datatable-page/crupdate/create-track-page.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-update-track.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/use-update-track-form.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/update-track-page.tsx","../../../resources/client/admin/albums-datatable-page/requests/use-create-album.ts","../../../resources/client/admin/albums-datatable-page/requests/use-update-album.ts","../../../common/foundation/resources/client/ui/library/icons/material/DragHandle.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/update-track-dialog.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/create-track-dialog.tsx","../../../resources/client/admin/albums-datatable-page/album-form/album-tracks-form.tsx","../../../resources/client/admin/albums-datatable-page/album-form/album-form.tsx","../../../resources/client/admin/albums-datatable-page/update-album-page.tsx","../../../resources/client/web-player/backstage/upload-page/album-uploader.tsx","../../../resources/client/web-player/backstage/upload-page/tracks-uploader.tsx","../../../resources/client/web-player/backstage/upload-page/album-border.png","../../../resources/client/web-player/backstage/upload-page/uploaded-media-preview.tsx","../../../resources/client/web-player/backstage/upload-page/drop-tarket-mask.tsx","../../../resources/client/web-player/backstage/upload-page/use-user-minutes-limit.ts","../../../resources/client/web-player/backstage/upload-page/upload-page.tsx","../../../resources/client/admin/albums-datatable-page/create-album-page.tsx","../../../resources/client/web-player/backstage/requests/use-backstage-request.ts","../../../common/foundation/resources/client/ui/library/icons/material/DocumentScanner.tsx","../../../resources/client/admin/artist-datatable-page/artist-form/artist-albums-table.tsx","../../../resources/client/admin/artist-datatable-page/artist-form/crupdate-artist-form.tsx","../../../resources/client/admin/artist-datatable-page/requests/use-update-artist.ts","../../../resources/client/admin/artist-datatable-page/update-artist-page.tsx","../../../resources/client/admin/reports/requests/use-insights-report.ts","../../../resources/client/admin/reports/top-models-chart-layout.tsx","../../../resources/client/admin/reports/insights-report-charts.tsx","../../../resources/client/web-player/backstage/insights/backstage-insights-layout.tsx","../../../resources/client/web-player/backstage/insights/backstage-insights-title.tsx","../../../resources/client/web-player/backstage/insights/backstage-artist-insights.tsx","../../../resources/client/web-player/backstage/insights/backstage-album-insights.tsx","../../../resources/client/web-player/backstage/insights/backstage-track-insights.tsx"],"sourcesContent":["import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface GetDatatableDataParams {\n  orderBy?: string;\n  orderDir?: 'asc' | 'desc';\n  filters?: string | null;\n  query?: string;\n  with?: string;\n  perPage?: number | string | null;\n  page?: number | string;\n  paginate?: 'simple' | 'lengthAware' | 'preferLengthAware' | 'cursor';\n  [key: string]: string | number | boolean | undefined | null;\n}\n\nexport const DatatableDataQueryKey = (\n  endpoint: string,\n  params?: GetDatatableDataParams | Record<string, string | number | boolean>,\n) => {\n  // split endpoint by slash, so we can clear cache from the root later,\n  // for example, 'link-group' will clear 'link-group/1/links' endpoint\n  const key: (string | GetDatatableDataParams)[] = endpoint.split('/');\n  if (params) {\n    key.push(params);\n  }\n  return key;\n};\n\nexport function useDatatableData<T = object>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  options?: Omit<\n    UseQueryOptions<\n      PaginatedBackendResponse<T>,\n      unknown,\n      PaginatedBackendResponse<T>,\n      any[]\n    >,\n    'queryKey' | 'queryFn'\n  >,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n) {\n  if (!params.paginate) {\n    params.paginate = 'preferLengthAware';\n  }\n  return useQuery({\n    queryKey: DatatableDataQueryKey(endpoint, params),\n    queryFn: ({signal}) => paginate<T>(endpoint, params, onLoad, signal),\n    placeholderData: keepPreviousData,\n    ...options,\n  });\n}\n\nasync function paginate<T>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n  signal?: AbortSignal,\n): Promise<PaginatedBackendResponse<T>> {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  const response = await apiClient\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\n    .then(response => response.data);\n  onLoad?.(response);\n  return response;\n}\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\ninterface Params {\n  query?: string;\n  perPage?: number;\n  with?: string;\n}\n\nexport function useNormalizedModels(\n  endpoint: string,\n  queryParams?: Params,\n  queryOptions?: Omit<\n    UseQueryOptions<Response, unknown, Response, any[]>,\n    'queryKey' | 'queryFn'\n  > | null,\n) {\n  return useQuery({\n    queryKey: [...endpoint.split('/'), queryParams],\n    queryFn: () => fetchModels(endpoint, queryParams),\n    placeholderData: keepPreviousData,\n    ...queryOptions,\n  });\n}\n\nasync function fetchModels(endpoint: string, params?: Params) {\n  return apiClient.get<Response>(endpoint, {params}).then(r => {\n    if ('results' in r.data) {\n      return r.data;\n    } else {\n      const results = Object.values(r.data).find(v => Array.isArray(v));\n      return {results} as Response;\n    }\n  });\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  model: NormalizedModel;\n}\n\nexport function useNormalizedModel(\n  endpoint: string,\n  queryParams?: Record<string, string>,\n  queryOptions?: {enabled?: boolean},\n) {\n  return useQuery({\n    queryKey: [endpoint, queryParams],\n    queryFn: () => fetchModel(endpoint, queryParams),\n    ...queryOptions,\n  });\n}\n\nasync function fetchModel(\n  endpoint: string,\n  params?: Record<string, string>,\n): Promise<Response> {\n  return apiClient.get(endpoint, {params}).then(r => r.data);\n}\n","import React, {ReactNode, useRef, useState} from 'react';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {Trans} from '@ui/i18n/trans';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {message} from '@ui/i18n/message';\nimport {Item} from '@ui/forms/listbox/item';\nimport {useController, useFormContext} from 'react-hook-form';\nimport {useControlledState} from '@react-stately/utils';\nimport {getInputFieldClassNames} from '@ui/forms/input-field/get-input-field-class-names';\nimport clsx from 'clsx';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {useNormalizedModels} from '@common/ui/normalized-model/use-normalized-models';\nimport {useNormalizedModel} from '@common/ui/normalized-model/use-normalized-model';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {Select} from '@ui/forms/select/select';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport {BaseFieldProps} from '@ui/forms/input-field/base-field-props';\nimport {EditIcon} from '@ui/icons/material/Edit';\n\ninterface NormalizedModelFieldProps {\n  label?: ReactNode;\n  className?: string;\n  background?: BaseFieldProps['background'];\n  value?: string | number;\n  placeholder?: MessageDescriptor;\n  searchPlaceholder?: MessageDescriptor;\n  defaultValue?: string | number;\n  onChange?: (value: string | number) => void;\n  invalid?: boolean;\n  errorMessage?: string;\n  description?: ReactNode;\n  autoFocus?: boolean;\n  queryParams?: Record<string, string>;\n  endpoint: string;\n  disabled?: boolean;\n  required?: boolean;\n}\nexport function NormalizedModelField({\n  label,\n  className,\n  background,\n  value,\n  defaultValue = '',\n  placeholder = message('Select item...'),\n  searchPlaceholder = message('Find an item...'),\n  onChange,\n  description,\n  errorMessage,\n  invalid,\n  autoFocus,\n  queryParams,\n  endpoint,\n  disabled,\n  required,\n}: NormalizedModelFieldProps) {\n  const inputRef = useRef<HTMLButtonElement>(null);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedValue, setSelectedValue] = useControlledState(\n    value,\n    defaultValue,\n    onChange,\n  );\n  const query = useNormalizedModels(endpoint, {\n    query: inputValue,\n    ...queryParams,\n  });\n  const {trans} = useTrans();\n\n  const fieldClassNames = getInputFieldClassNames({size: 'md'});\n\n  if (selectedValue) {\n    return (\n      <div className={className}>\n        <div className={fieldClassNames.label}>{label}</div>\n        <div\n          className={clsx(\n            'rounded-input border p-8',\n            background,\n            invalid && 'border-danger',\n          )}\n        >\n          <AnimatePresence initial={false} mode=\"wait\">\n            <SelectedModelPreview\n              disabled={disabled}\n              endpoint={endpoint}\n              modelId={selectedValue}\n              queryParams={queryParams}\n              onEditClick={() => {\n                setSelectedValue('');\n                setInputValue('');\n                requestAnimationFrame(() => {\n                  inputRef.current?.focus();\n                  inputRef.current?.click();\n                });\n              }}\n            />\n          </AnimatePresence>\n        </div>\n        {description && !errorMessage && (\n          <div className={fieldClassNames.description}>{description}</div>\n        )}\n        {errorMessage && (\n          <div className={fieldClassNames.error}>{errorMessage}</div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Select\n      className={className}\n      showSearchField\n      invalid={invalid}\n      errorMessage={errorMessage}\n      description={description}\n      color=\"white\"\n      isAsync\n      background={background}\n      placeholder={trans(placeholder)}\n      searchPlaceholder={trans(searchPlaceholder)}\n      label={label}\n      isLoading={query.isFetching}\n      items={query.data?.results}\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      selectionMode=\"single\"\n      selectedValue={selectedValue}\n      onSelectionChange={setSelectedValue}\n      ref={inputRef}\n      autoFocus={autoFocus}\n      disabled={disabled}\n      required={required}\n    >\n      {model => (\n        <Item\n          value={model.id}\n          key={model.id}\n          description={model.description}\n          startIcon={<Avatar src={model.image} size=\"sm\" label={model.name} />}\n        >\n          {model.name}\n        </Item>\n      )}\n    </Select>\n  );\n}\n\ninterface SelectedModelPreviewProps {\n  modelId: string | number;\n  selectedValue?: number | string;\n  onEditClick?: () => void;\n  endpoint?: string;\n  disabled?: boolean;\n  queryParams?: NormalizedModelFieldProps['queryParams'];\n}\nfunction SelectedModelPreview({\n  modelId,\n  onEditClick,\n  endpoint,\n  disabled,\n  queryParams,\n}: SelectedModelPreviewProps) {\n  const {data, isLoading} = useNormalizedModel(\n    `${endpoint}/${modelId}`,\n    queryParams,\n  );\n\n  if (isLoading || !data?.model) {\n    return <LoadingSkeleton key=\"skeleton\" />;\n  }\n\n  return (\n    <m.div\n      className={clsx(\n        'flex items-center gap-10',\n        disabled && 'pointer-events-none cursor-not-allowed text-disabled',\n      )}\n      key=\"preview\"\n      {...opacityAnimation}\n    >\n      <Avatar src={data.model.image} label={data.model.name} />\n      <div>\n        <div className=\"text-sm leading-4\">{data.model.name}</div>\n        <div className=\"text-xs text-muted\">{data.model.description}</div>\n      </div>\n      <Tooltip label={<Trans message=\"Change item\" />}>\n        <IconButton\n          className=\"ml-auto text-muted\"\n          size=\"sm\"\n          onClick={onEditClick}\n          disabled={disabled}\n        >\n          <EditIcon />\n        </IconButton>\n      </Tooltip>\n    </m.div>\n  );\n}\n\nfunction LoadingSkeleton() {\n  return (\n    <m.div className=\"flex items-center gap-10\" {...opacityAnimation}>\n      <Skeleton variant=\"rect\" size=\"w-32 h-32\" />\n      <div className=\"max-h-[36px] flex-auto\">\n        <Skeleton className=\"text-xs\" />\n        <Skeleton className=\"max-h-8 text-xs\" />\n      </div>\n      <Skeleton variant=\"icon\" size=\"w-24 h-24\" />\n    </m.div>\n  );\n}\n\ninterface FormNormalizedModelFieldProps extends NormalizedModelFieldProps {\n  name: string;\n}\nexport function FormNormalizedModelField({\n  name,\n  ...fieldProps\n}: FormNormalizedModelFieldProps) {\n  const {clearErrors} = useFormContext();\n  const {\n    field: {onChange, value = ''},\n    fieldState: {invalid, error},\n  } = useController({\n    name,\n  });\n\n  return (\n    <NormalizedModelField\n      value={value}\n      onChange={value => {\n        onChange(value);\n        clearErrors(name);\n      }}\n      invalid={invalid}\n      errorMessage={error?.message}\n      {...fieldProps}\n    />\n  );\n}\n","import {ChipValue} from './chip-field';\n\nexport function stringToChipValue(value: string | number): ChipValue {\n  // add both name and description so \"validateWith\" works properly in chip field, if it depends on description\n  return {id: value, name: `${value}`, description: `${value}`};\n}\n","import React, {\n  HTMLAttributes,\n  Key,\n  ReactElement,\n  ReactNode,\n  Ref,\n  RefObject,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {useFocusManager} from '@react-aria/focus';\nimport clsx from 'clsx';\nimport {mergeProps, useLayoutEffect, useObjectRef} from '@react-aria/utils';\nimport {useControlledState} from '@react-stately/utils';\nimport {ChipList} from './chip-list';\nimport {Field, FieldProps} from '../field';\nimport {Input} from '../input';\nimport {Chip, ChipProps} from './chip';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {getInputFieldClassNames} from '../get-input-field-class-names';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {useField} from '../use-field';\nimport {Listbox} from '../../listbox/listbox';\nimport {useListbox} from '../../listbox/use-listbox';\nimport {BaseFieldPropsWithDom} from '../base-field-props';\nimport {useListboxKeyboardNavigation} from '../../listbox/use-listbox-keyboard-navigation';\nimport {createEventHandler} from '@ui/utils/dom/create-event-handler';\nimport {ListBoxChildren, ListboxProps} from '../../listbox/types';\nimport {stringToChipValue} from './string-to-chip-value';\nimport {KeyboardArrowDownIcon} from '@ui/icons/material/KeyboardArrowDown';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {Popover} from '@ui/overlays/popover';\n\nexport interface ChipValue extends Omit<NormalizedModel, 'model_type'> {\n  invalid?: boolean;\n  errorMessage?: string;\n}\n\nexport type ChipFieldProps<T> = Omit<\n  ListboxProps,\n  'selectionMode' | 'displayWith'\n> &\n  Omit<\n    BaseFieldPropsWithDom<HTMLInputElement>,\n    'value' | 'onChange' | 'defaultValue'\n  > & {\n    value?: (ChipValue | string)[];\n    defaultValue?: (ChipValue | string)[];\n    displayWith?: (value: ChipValue) => ReactNode;\n    validateWith?: (value: ChipValue) => ChipValue;\n    allowCustomValue?: boolean;\n    showDropdownArrow?: boolean;\n    onChange?: (value: ChipValue[]) => void;\n    suggestions?: T[];\n    children?: ListBoxChildren<T>['children'];\n    placeholder?: string;\n    chipSize?: ChipProps['size'];\n    openMenuOnFocus?: boolean;\n    valueKey?: 'id' | 'name';\n    onChipClick?: (value: ChipValue) => void;\n    alwaysShowAvatar?: boolean;\n    readOnly?: boolean;\n  };\n\nfunction ChipFieldInner<T>(\n  props: ChipFieldProps<T>,\n  ref: Ref<HTMLInputElement>,\n) {\n  const fieldRef = useRef<HTMLDivElement>(null);\n  const inputRef = useObjectRef(ref);\n  const {\n    displayWith = v => v.name,\n    validateWith,\n    children,\n    suggestions,\n    isLoading,\n    inputValue,\n    onInputValueChange,\n    onItemSelected,\n    placeholder,\n    onOpenChange,\n    chipSize = 'sm',\n    openMenuOnFocus = true,\n    showEmptyMessage,\n    value: propsValue,\n    defaultValue,\n    onChange: propsOnChange,\n    valueKey,\n    isAsync,\n    allowCustomValue = true,\n    showDropdownArrow,\n    onChipClick,\n    alwaysShowAvatar = false,\n    readOnly,\n    ...inputFieldProps\n  } = props;\n  const fieldClassNames = getInputFieldClassNames({\n    ...props,\n    flexibleHeight: true,\n  });\n\n  const [value, onChange] = useChipFieldValueState(props);\n\n  const [listboxIsOpen, setListboxIsOpen] = useState(false);\n\n  const loadingIndicator = (\n    <ProgressCircle isIndeterminate size=\"w-24 h-24\" aria-label=\"loading...\" />\n  );\n\n  const dropdownArrow = showDropdownArrow ? <KeyboardArrowDownIcon /> : null;\n\n  const {fieldProps, inputProps} = useField({\n    ...inputFieldProps,\n    focusRef: inputRef,\n    endAdornment: isLoading && listboxIsOpen ? loadingIndicator : dropdownArrow,\n  });\n\n  return (\n    <Field fieldClassNames={fieldClassNames} {...fieldProps}>\n      <Input\n        ref={fieldRef}\n        className={clsx('flex flex-wrap items-center', fieldClassNames.input)}\n        onClick={() => {\n          // refocus input when clicking outside it, but while still inside chip field\n          inputRef.current?.focus();\n        }}\n      >\n        <ListWrapper\n          displayChipUsing={displayWith}\n          onChipClick={onChipClick}\n          items={value}\n          setItems={onChange}\n          chipSize={chipSize}\n          alwaysShowAvatar={alwaysShowAvatar}\n          readOnly={readOnly}\n        />\n        <ChipInput\n          size={props.size}\n          showEmptyMessage={showEmptyMessage}\n          inputProps={inputProps}\n          inputValue={inputValue}\n          onInputValueChange={onInputValueChange}\n          fieldRef={fieldRef}\n          inputRef={inputRef}\n          chips={value}\n          setChips={onChange}\n          validateWith={validateWith}\n          isLoading={isLoading}\n          suggestions={suggestions}\n          placeholder={placeholder}\n          openMenuOnFocus={openMenuOnFocus}\n          listboxIsOpen={listboxIsOpen}\n          setListboxIsOpen={setListboxIsOpen}\n          allowCustomValue={allowCustomValue}\n          readOnly={readOnly}\n        >\n          {children}\n        </ChipInput>\n      </Input>\n    </Field>\n  );\n}\n\ninterface ListWrapperProps {\n  items: ChipValue[];\n  setItems: (items: ChipValue[]) => void;\n  displayChipUsing: (value: ChipValue) => ReactNode;\n  chipSize?: ChipProps['size'];\n  onChipClick?: (value: ChipValue) => void;\n  alwaysShowAvatar?: boolean;\n  readOnly?: boolean;\n}\nfunction ListWrapper({\n  items,\n  setItems,\n  displayChipUsing,\n  chipSize,\n  onChipClick,\n  alwaysShowAvatar,\n  readOnly,\n}: ListWrapperProps) {\n  const manager = useFocusManager();\n  const removeItem = useCallback(\n    (key: Key) => {\n      const i = items.findIndex(cr => cr.id === key);\n      const newItems = [...items];\n      if (i > -1) {\n        newItems.splice(i, 1);\n        setItems(newItems);\n      }\n      return newItems;\n    },\n    [items, setItems],\n  );\n\n  return (\n    <ChipList\n      className={clsx(\n        'max-w-full flex-shrink-0 flex-wrap',\n        chipSize === 'xs' ? 'my-6' : 'my-8',\n      )}\n      size={chipSize}\n      selectable\n    >\n      {items.map(item => (\n        <Chip\n          key={item.id}\n          errorMessage={item.errorMessage}\n          adornment={\n            item.image || alwaysShowAvatar ? (\n              <Avatar\n                circle\n                src={item.image}\n                fallback=\"initials\"\n                label={item.name}\n              />\n            ) : null\n          }\n          onClick={() => onChipClick?.(item)}\n          onRemove={\n            readOnly\n              ? undefined\n              : () => {\n                  const newItems = removeItem(item.id);\n                  if (newItems.length) {\n                    // focus previous chip\n                    manager?.focusPrevious({tabbable: true});\n                  } else {\n                    // focus input\n                    manager?.focusLast();\n                  }\n                }\n          }\n        >\n          {displayChipUsing(item)}\n        </Chip>\n      ))}\n    </ChipList>\n  );\n}\n\ninterface ChipInputProps<T> {\n  showEmptyMessage?: boolean;\n  inputProps: ReturnType<typeof useField>['inputProps'];\n  inputValue?: string;\n  onInputValueChange?: (value: string) => void;\n  fieldRef: RefObject<HTMLDivElement>;\n  inputRef: RefObject<HTMLInputElement>;\n  chips: ChipValue[];\n  setChips: (items: ChipValue[]) => void;\n  validateWith?: (value: ChipValue) => ChipValue;\n  isLoading?: boolean;\n  suggestions?: T[];\n  placeholder?: string;\n  openMenuOnFocus?: boolean;\n  listboxIsOpen: boolean;\n  setListboxIsOpen: (value: boolean) => void;\n  allowCustomValue: boolean;\n  children: ListBoxChildren<T>['children'];\n  size: FieldProps['size'];\n  readOnly?: boolean;\n}\nfunction ChipInput<T>(props: ChipInputProps<T>) {\n  const {\n    inputRef,\n    fieldRef,\n    validateWith,\n    setChips,\n    chips,\n    suggestions,\n    inputProps,\n    placeholder,\n    openMenuOnFocus,\n    listboxIsOpen,\n    setListboxIsOpen,\n    allowCustomValue,\n    isLoading,\n    size,\n    readOnly,\n  } = props;\n  const manager = useFocusManager();\n\n  const addItems = useCallback(\n    (items?: ChipValue[]) => {\n      items = (items || []).filter(item => {\n        const invalid = !item || !item.id || !item.name;\n        const alreadyExists = chips.findIndex(cr => cr.id === item?.id) > -1;\n        return !alreadyExists && !invalid;\n      });\n      if (!items.length) return;\n\n      if (validateWith) {\n        items = items.map(item => validateWith(item));\n      }\n      setChips([...chips, ...items]);\n    },\n    [chips, setChips, validateWith],\n  );\n\n  const listbox = useListbox<T>({\n    ...props,\n    clearInputOnItemSelection: true,\n    isOpen: listboxIsOpen,\n    onOpenChange: setListboxIsOpen,\n    items: suggestions,\n    selectionMode: 'none',\n    role: 'listbox',\n    virtualFocus: true,\n    onItemSelected: value => {\n      handleItemSelection(value as string);\n    },\n  });\n\n  const {\n    state: {\n      activeIndex,\n      setActiveIndex,\n      isOpen,\n      setIsOpen,\n      inputValue,\n      setInputValue,\n    },\n    refs,\n    listboxId,\n    collection,\n    onInputChange,\n  } = listbox;\n\n  const handleItemSelection = (textValue: string) => {\n    const option =\n      collection.size && activeIndex != null\n        ? [...collection.values()][activeIndex]\n        : null;\n    if (option?.item) {\n      addItems([option.item]);\n    } else if (allowCustomValue) {\n      addItems([stringToChipValue(option ? option.value : textValue)]);\n    }\n\n    setInputValue('');\n    setActiveIndex(null);\n    setIsOpen(false);\n  };\n\n  // position dropdown relative to whole chip field, not the input\n  useLayoutEffect(() => {\n    if (fieldRef.current && refs.reference.current !== fieldRef.current) {\n      listbox.reference(fieldRef.current);\n    }\n  }, [fieldRef, listbox, refs]);\n\n  const {handleTriggerKeyDown, handleListboxKeyboardNavigation} =\n    useListboxKeyboardNavigation(listbox);\n\n  const handleFocusAndClick = createEventHandler(() => {\n    if (openMenuOnFocus && !isOpen) {\n      setIsOpen(true);\n    }\n  });\n\n  return (\n    <Listbox\n      listbox={listbox}\n      mobileOverlay={Popover}\n      isLoading={isLoading}\n      onPointerDown={e => {\n        // prevent focus from leaving input when scrolling listbox via mouse\n        e.preventDefault();\n      }}\n    >\n      <input\n        readOnly={readOnly}\n        type=\"text\"\n        className={clsx(\n          'mx-8 my-4 min-w-30 flex-[1_1_60px] bg-transparent text-sm outline-none',\n          size === 'xs' ? 'h-20' : 'h-30',\n        )}\n        placeholder={placeholder}\n        {...mergeProps(inputProps, {\n          ref: inputRef,\n          value: inputValue,\n          onChange: onInputChange,\n          onPaste: e => {\n            const paste = e.clipboardData.getData('text');\n            const emails = paste.match(\n              /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi,\n            );\n            if (emails) {\n              e.preventDefault();\n              const selection = window.getSelection();\n              if (selection?.rangeCount) {\n                selection.deleteFromDocument();\n                addItems(emails.map(email => stringToChipValue(email)));\n              }\n            }\n          },\n          'aria-autocomplete': 'list',\n          'aria-controls': isOpen ? listboxId : undefined,\n          autoComplete: 'off',\n          autoCorrect: 'off',\n          spellCheck: 'false',\n          onKeyDown: e => {\n            if (readOnly) return;\n\n            const input = e.target as HTMLInputElement;\n\n            if (e.key === 'Enter') {\n              // prevent form submitting\n              e.preventDefault();\n              // add chip from selected listbox option or current input text value\n              handleItemSelection(input.value);\n              return;\n            }\n\n            // on escape, clear input and close dropdown\n            if (e.key === 'Escape' && isOpen) {\n              setIsOpen(false);\n              setInputValue('');\n            }\n\n            // move focus to input when focus is on first item and prevent arrow up from cycling listbox\n            if (\n              e.key === 'ArrowUp' &&\n              isOpen &&\n              (activeIndex === 0 || activeIndex == null)\n            ) {\n              setActiveIndex(null);\n              return;\n            }\n\n            // block left and right arrows from navigating in input, if focus is on listbox\n            if (\n              activeIndex != null &&\n              (e.key === 'ArrowLeft' || e.key === 'ArrowRight')\n            ) {\n              e.preventDefault();\n              return;\n            }\n\n            // move focus on the last chip, if focus is at the  start of input\n            if (\n              (e.key === 'ArrowLeft' ||\n                e.key === 'Backspace' ||\n                e.key === 'Delete') &&\n              input.selectionStart === 0 &&\n              activeIndex == null &&\n              chips.length\n            ) {\n              manager?.focusPrevious({tabbable: true});\n              return;\n            }\n\n            // fallthrough to listbox navigation handlers for arrow keys\n            const handled = handleTriggerKeyDown(e);\n            if (!handled) {\n              handleListboxKeyboardNavigation(e);\n            }\n          },\n          onFocus: readOnly ? undefined : handleFocusAndClick,\n          onClick: readOnly ? undefined : handleFocusAndClick,\n        } as HTMLAttributes<HTMLInputElement>)}\n      />\n    </Listbox>\n  );\n}\n\nfunction useChipFieldValueState({\n  onChange,\n  value,\n  defaultValue,\n  valueKey,\n}: ChipFieldProps<any>) {\n  // convert value from string[] to ChipValue[], if needed\n  const propsValue = useMemo(() => {\n    return mixedValueToChipValue(value);\n  }, [value]);\n\n  // convert defaultValue from string[] to ChipValue[], if needed\n  const propsDefaultValue = useMemo(() => {\n    return mixedValueToChipValue(defaultValue);\n  }, [defaultValue]);\n\n  // emit string[] or ChipValue[] on change, based on \"valueKey\" prop\n  const handleChange = useCallback(\n    (value: ChipValue[]) => {\n      const newValue = valueKey ? value.map(v => v[valueKey]) : value;\n      onChange?.(newValue as any);\n    },\n    [onChange, valueKey],\n  );\n\n  return useControlledState<ChipValue[]>(\n    !propsValue ? undefined : propsValue,\n    propsDefaultValue || [],\n    handleChange,\n  );\n}\n\nfunction mixedValueToChipValue(\n  value?: (string | number | ChipValue)[] | null,\n): ChipValue[] | undefined {\n  if (value == null) {\n    return undefined;\n  }\n\n  return value.map(v => {\n    return typeof v !== 'object' ? stringToChipValue(v as string) : v;\n  });\n}\n\nexport const ChipField = React.forwardRef(ChipFieldInner) as <T>(\n  props: ChipFieldProps<T> & {ref?: Ref<HTMLInputElement>},\n) => ReactElement;\n","import {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport React from 'react';\nimport {ChipField, ChipFieldProps} from './chip-field';\n\nexport type FormChipFieldProps<T> = ChipFieldProps<T> & {\n  name: string;\n};\n\nexport function FormChipField<T>({children, ...props}: FormChipFieldProps<T>) {\n  const {\n    field: {onChange, onBlur, value = [], ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<ChipFieldProps<T>> = {\n    onChange,\n    onBlur,\n    value,\n    invalid,\n    errorMessage: error?.message,\n  };\n\n  return (\n    <ChipField ref={ref} {...mergeProps(formProps, props)}>\n      {children}\n    </ChipField>\n  );\n}\n","import {useControlledState} from '@react-stately/utils';\nimport {HTMLAttributes, useCallback, useState} from 'react';\nimport {\n  CalendarDate,\n  DateValue,\n  isSameDay,\n  toCalendarDate,\n  ZonedDateTime,\n} from '@internationalized/date';\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\nimport {toSafeZoned} from '@ui/i18n/to-safe-zoned';\n\nexport type Granularity = 'day' | 'minute';\n\nexport type DatePickerState = BaseDatePickerState;\n\nexport interface BaseDatePickerState<T = ZonedDateTime, P = boolean> {\n  timezone: string;\n  granularity: Granularity;\n  selectedValue: T;\n  setSelectedValue: (value: T) => void;\n  calendarIsOpen: boolean;\n  setCalendarIsOpen: (isOpen: boolean) => void;\n  calendarDates: CalendarDate[];\n  setCalendarDates: (dates: CalendarDate[]) => void;\n  dayIsActive: (day: CalendarDate) => boolean;\n  dayIsHighlighted: (day: CalendarDate) => boolean;\n  dayIsRangeStart: (day: CalendarDate) => boolean;\n  dayIsRangeEnd: (day: CalendarDate) => boolean;\n  isPlaceholder: P;\n  setIsPlaceholder: (value: P) => void;\n  clear: () => void;\n  min?: ZonedDateTime;\n  max?: ZonedDateTime;\n  closeDialogOnSelection: boolean;\n  getCellProps: (\n    date: CalendarDate,\n    isSameMonth: boolean,\n  ) => HTMLAttributes<HTMLElement>;\n}\n\nexport interface DatePickerValueProps<V, CV = V> {\n  value?: V | null | '';\n  defaultValue?: V | null;\n  onChange?: (value: CV | null) => void;\n  min?: DateValue;\n  max?: DateValue;\n  granularity?: Granularity;\n  closeDialogOnSelection?: boolean;\n}\nexport function useDatePickerState(\n  props: DatePickerValueProps<ZonedDateTime>,\n): BaseDatePickerState {\n  const now = useCurrentDateTime();\n  const [isPlaceholder, setIsPlaceholder] = useState(\n    !props.value && !props.defaultValue,\n  );\n\n  // if user clears the date, we will want to still keep an\n  // instance internally, but return null via \"onChange\" callback\n  const setStateValue = props.onChange;\n  const [internalValue, setInternalValue] = useControlledState(\n    props.value || now,\n    props.defaultValue || now,\n    value => {\n      setIsPlaceholder(false);\n      setStateValue?.(value);\n    },\n  );\n\n  const {\n    min,\n    max,\n    granularity,\n    timezone,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  } = useBaseDatePickerState(internalValue, props);\n\n  const clear = useCallback(() => {\n    setIsPlaceholder(true);\n    setInternalValue(now);\n    setStateValue?.(null);\n    setCalendarIsOpen(false);\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\n\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\n    return [toCalendarDate(internalValue)];\n  });\n\n  const setSelectedValue = useCallback(\n    (newValue: DateValue) => {\n      if (min && newValue.compare(min) < 0) {\n        newValue = min;\n      } else if (max && newValue.compare(max) > 0) {\n        newValue = max;\n      }\n\n      // preserve time\n      const value = internalValue\n        ? internalValue.set(newValue)\n        : toSafeZoned(newValue, timezone);\n      setInternalValue(value);\n      setCalendarDates([toCalendarDate(value)]);\n      setIsPlaceholder(false);\n    },\n    [setInternalValue, min, max, internalValue, timezone],\n  );\n\n  const dayIsActive = useCallback(\n    (day: DateValue) => !isPlaceholder && isSameDay(internalValue, day),\n    [internalValue, isPlaceholder],\n  );\n\n  const getCellProps = useCallback(\n    (date: DateValue): HTMLAttributes<HTMLElement> => {\n      return {\n        onClick: () => {\n          setSelectedValue?.(date);\n          if (closeDialogOnSelection) {\n            setCalendarIsOpen?.(false);\n          }\n        },\n      };\n    },\n    [setSelectedValue, setCalendarIsOpen, closeDialogOnSelection],\n  );\n\n  return {\n    selectedValue: internalValue,\n    setSelectedValue: setInternalValue,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    dayIsActive,\n    dayIsHighlighted: () => false,\n    dayIsRangeStart: () => false,\n    dayIsRangeEnd: () => false,\n    getCellProps,\n    calendarDates,\n    setCalendarDates,\n    isPlaceholder,\n    clear,\n    setIsPlaceholder,\n    min,\n    max,\n    granularity,\n    timezone,\n    closeDialogOnSelection,\n  };\n}\n","import React, {\n  ComponentPropsWithoutRef,\n  Fragment,\n  MouseEvent,\n  useRef,\n} from 'react';\nimport {parseAbsoluteToLocal, ZonedDateTime} from '@internationalized/date';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  DatePickerValueProps,\n  useDatePickerState,\n} from './use-date-picker-state';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {DateRangeIcon} from '@ui/icons/material/DateRange';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {Calendar} from '../calendar/calendar';\nimport {\n  DatePickerField,\n  DatePickerFieldProps,\n} from '../date-range-picker/date-picker-field';\nimport {DateSegmentList} from '../segments/date-segment-list';\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport clsx from 'clsx';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\n\nexport interface DatePickerProps\n  extends Omit<DatePickerFieldProps, 'children'>,\n    DatePickerValueProps<ZonedDateTime> {}\nexport function DatePicker({showCalendarFooter, ...props}: DatePickerProps) {\n  const state = useDatePickerState(props);\n  const inputRef = useRef<HTMLDivElement>(null);\n  const now = useCurrentDateTime();\n\n  const footer = showCalendarFooter && (\n    <DialogFooter\n      padding=\"px-14 pb-14\"\n      startAction={\n        <Button\n          disabled={state.isPlaceholder}\n          variant=\"text\"\n          color=\"primary\"\n          onClick={() => {\n            state.clear();\n          }}\n        >\n          <Trans message=\"Clear\" />\n        </Button>\n      }\n    >\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        onClick={() => {\n          state.setSelectedValue(now);\n          state.setCalendarIsOpen(false);\n        }}\n      >\n        <Trans message=\"Today\" />\n      </Button>\n    </DialogFooter>\n  );\n\n  const dialog = (\n    <DialogTrigger\n      offset={8}\n      placement=\"bottom-start\"\n      isOpen={state.calendarIsOpen}\n      onOpenChange={state.setCalendarIsOpen}\n      type=\"popover\"\n      triggerRef={inputRef}\n      returnFocusToTrigger={false}\n      moveFocusToDialog={false}\n    >\n      <Dialog size=\"auto\">\n        <DialogBody\n          className=\"flex items-start gap-40\"\n          padding={showCalendarFooter ? 'px-24 pt-20 pb-10' : null}\n        >\n          <Calendar state={state} visibleMonths={1} />\n        </DialogBody>\n        {footer}\n      </Dialog>\n    </DialogTrigger>\n  );\n\n  const openOnClick: ComponentPropsWithoutRef<'div'> = {\n    onClick: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      if (!isHourSegment(e)) {\n        state.setCalendarIsOpen(true);\n      } else {\n        state.setCalendarIsOpen(false);\n      }\n    },\n  };\n\n  return (\n    <Fragment>\n      <DatePickerField\n        ref={inputRef}\n        wrapperProps={openOnClick}\n        endAdornment={\n          <DateRangeIcon className={clsx(props.disabled && 'text-disabled')} />\n        }\n        {...props}\n      >\n        <DateSegmentList\n          segmentProps={openOnClick}\n          state={state}\n          value={state.selectedValue}\n          onChange={state.setSelectedValue}\n          isPlaceholder={state.isPlaceholder}\n        />\n      </DatePickerField>\n      {dialog}\n    </Fragment>\n  );\n}\n\ninterface FormDatePickerProps extends DatePickerProps {\n  name: string;\n}\nexport function FormDatePicker(props: FormDatePickerProps) {\n  const {min, max} = props;\n  const {trans} = useTrans();\n  const {format} = useDateFormatter();\n  const {\n    field: {onChange, onBlur, value = null, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n    rules: {\n      validate: v => {\n        if (!v) return;\n        const date = parseAbsoluteToLocal(v);\n        if (min && date.compare(min) < 0) {\n          return trans({\n            message: 'Enter a date after :date',\n            values: {date: format(v)},\n          });\n        }\n        if (max && date.compare(max) > 0) {\n          return trans({\n            message: 'Enter a date before :date',\n            values: {date: format(v)},\n          });\n        }\n      },\n    },\n  });\n\n  const parsedValue: null | ZonedDateTime = value\n    ? parseAbsoluteToLocal(value)\n    : null;\n\n  const formProps: Partial<DatePickerProps> = {\n    onChange: e => {\n      onChange(e ? e.toAbsoluteString() : e);\n    },\n    onBlur,\n    value: parsedValue,\n    invalid,\n    errorMessage: error?.message,\n    inputRef: ref,\n  };\n\n  return <DatePicker {...mergeProps(formProps, props)} />;\n}\n\nfunction isHourSegment(e: MouseEvent<HTMLDivElement>): boolean {\n  return ['hour', 'minute', 'dayPeriod'].includes(\n    (e.currentTarget as HTMLElement).ariaLabel || '',\n  );\n}\n","import {useCallback, useRef, useState} from 'react';\n\nexport function useStickySentinel() {\n  const [isSticky, setIsSticky] = useState(false);\n\n  const observerRef = useRef<IntersectionObserver>();\n\n  const sentinelRef = useCallback((sentinel: HTMLDivElement | null) => {\n    if (sentinel) {\n      const observer = new IntersectionObserver(\n        ([e]) => setIsSticky(e.intersectionRatio < 1),\n        {threshold: [1]}\n      );\n      observerRef.current = observer;\n      observer.observe(sentinel);\n    } else if (observerRef.current) {\n      observerRef.current?.disconnect();\n    }\n  }, []);\n\n  return {isSticky, sentinelRef};\n}\n","import {\n  FieldValues,\n  SubmitHandler,\n  useFormContext,\n  UseFormReturn,\n} from 'react-hook-form';\nimport clsx from 'clsx';\nimport React, {Fragment, ReactElement, ReactNode} from 'react';\nimport {useStickySentinel} from '@ui/utils/hooks/sticky-sentinel';\nimport {Form} from '@ui/forms/form';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {AnimatePresence, m} from 'framer-motion';\n\ninterface Props<T extends FieldValues> {\n  onSubmit: SubmitHandler<T>;\n  form: UseFormReturn<T>;\n  title: ReactNode;\n  subTitle?: ReactNode;\n  isLoading: boolean;\n  children: ReactNode;\n  actions?: ReactNode;\n  backButton?: ReactNode;\n  disableSaveWhenNotDirty?: boolean;\n  wrapInContainer?: boolean;\n  submitButtonText?: ReactNode;\n  variant?: 'popup' | 'sticky';\n}\nexport function CrupdateResourceLayout<T extends FieldValues>({\n  onSubmit,\n  form,\n  title,\n  subTitle,\n  children,\n  actions,\n  backButton,\n  isLoading = false,\n  disableSaveWhenNotDirty = false,\n  wrapInContainer = true,\n  submitButtonText,\n  variant = 'sticky',\n}: Props<T>) {\n  const {isSticky, sentinelRef} = useStickySentinel();\n  const isDirty = !disableSaveWhenNotDirty\n    ? true\n    : Object.keys(form.formState.dirtyFields).length;\n\n  const saveButton = (\n    <Button\n      variant=\"flat\"\n      color=\"primary\"\n      type=\"submit\"\n      disabled={isLoading || !isDirty}\n    >\n      {submitButtonText ?? <Trans message=\"Save\" />}\n    </Button>\n  );\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      onBeforeSubmit={() => form.clearErrors()}\n      form={form}\n      className=\"relative\"\n    >\n      {variant === 'sticky' && <div ref={sentinelRef} />}\n      <CrupdateResourceHeader\n        wrapInContainer={wrapInContainer}\n        startActions={backButton}\n        subTitle={subTitle}\n        endActions={\n          <Fragment>\n            {actions}\n            {variant === 'sticky' && saveButton}\n          </Fragment>\n        }\n        className={clsx(\n          isSticky && 'bg shadow',\n          variant === 'sticky' && 'sticky',\n        )}\n      >\n        {title}\n      </CrupdateResourceHeader>\n      <div\n        className={\n          wrapInContainer ? 'container mx-auto px-24 pb-24' : undefined\n        }\n      >\n        <div className=\"rounded\">{children}</div>\n      </div>\n      {variant === 'popup' && (\n        <DirtyFormSaveDrawer saveButton={saveButton} isLoading={isLoading} />\n      )}\n    </Form>\n  );\n}\n\ninterface CrupdateResourceHeaderProps {\n  className?: string;\n  wrapInContainer?: boolean;\n  children: ReactNode;\n  subTitle?: ReactNode;\n  startActions?: ReactNode;\n  endActions?: ReactNode;\n}\nexport function CrupdateResourceHeader({\n  className,\n  wrapInContainer,\n  children,\n  subTitle,\n  startActions,\n  endActions,\n}: CrupdateResourceHeaderProps) {\n  return (\n    <div\n      className={clsx('top-0 z-10 my-12 transition-shadow md:my-24', className)}\n    >\n      <div\n        className={clsx(\n          'flex items-center gap-24 py-14 md:items-start',\n          wrapInContainer && 'container mx-auto px-24',\n        )}\n      >\n        {startActions}\n        <div className=\"overflow-hidden overflow-ellipsis md:mr-64\">\n          <h1 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-xl md:text-3xl\">\n            {children}\n          </h1>\n          {subTitle && <div className=\"mt-4\">{subTitle}</div>}\n        </div>\n        <div className=\"mr-auto\"></div>\n        {endActions}\n      </div>\n    </div>\n  );\n}\n\ninterface CrupdateResourceSectionProps {\n  label: ReactElement;\n  labelMargin?: string;\n  children: ReactNode;\n  margin?: string;\n}\n\nexport function CrupdateResourceSection({\n  label,\n  children,\n  margin = 'mb-48',\n  labelMargin = 'mb-16',\n}: CrupdateResourceSectionProps) {\n  return (\n    <section className={clsx(margin)}>\n      <div className={clsx(labelMargin, 'text-lg font-semibold')}>{label}</div>\n      {children}\n    </section>\n  );\n}\n\ninterface DirtyFormSaveDrawerProps {\n  saveButton?: ReactElement;\n  isLoading?: boolean;\n}\n\nexport function DirtyFormSaveDrawer({\n  saveButton,\n  isLoading,\n}: DirtyFormSaveDrawerProps) {\n  const {formState, reset} = useFormContext();\n  return (\n    <AnimatePresence>\n      {formState.isDirty && (\n        <Fragment>\n          <div className=\"invisible h-92\" />\n          <m.div\n            key=\"dirty-panel\"\n            initial={{y: 100, opacity: 0}}\n            animate={{y: 0, opacity: 1}}\n            exit={{y: 100, opacity: 0}}\n            transition={{duration: 0.2}}\n            className=\"fixed bottom-0 left-0 right-0 z-20 flex items-center justify-center gap-16 border-t bg px-12 py-28 shadow-[rgba(0,0,0,0.2)_0px_0px_10px]\"\n          >\n            <Button variant=\"outline\" onClick={() => reset()}>\n              <Trans message=\"Cancel\" />\n            </Button>\n            {saveButton ?? (\n              <Button\n                variant=\"flat\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={isLoading}\n              >\n                <Trans message=\"Save changes\" />\n              </Button>\n            )}\n          </m.div>\n        </Fragment>\n      )}\n    </AnimatePresence>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const InfoIcon = createSvgIcon(\n  <path d=\"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n, 'InfoOutlined');\n","export default \"__VITE_ASSET__be0c7262__\"","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {apiClient} from '@common/http/query-client';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\ninterface Params {\n  query?: string;\n  perPage?: number;\n}\n\nexport function useArtistPickerSuggestions(queryParams: Params) {\n  return useQuery({\n    queryKey: ['artists', 'search-suggestions', queryParams],\n    queryFn: () => fetchArtists(queryParams),\n    placeholderData: keepPreviousData,\n  });\n}\n\nasync function fetchArtists(params: Params) {\n  return apiClient\n    .get<Response>('search/suggestions/artist', {params})\n    .then(r => r.data);\n}\n","import {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {useState} from 'react';\nimport {useArtistPickerSuggestions} from '@app/web-player/artists/artist-picker/use-artist-picker-suggestions';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {Item} from '@ui/forms/listbox/item';\n\ninterface FormArtistPickerProps {\n  name: string;\n  className?: string;\n}\nexport function FormArtistPicker({name, className}: FormArtistPickerProps) {\n  const {trans} = useTrans();\n  const [inputValue, setInputValue] = useState('');\n  const {data, isLoading} = useArtistPickerSuggestions({query: inputValue});\n\n  return (\n    <FormChipField\n      className={className}\n      name={name}\n      label={<Trans message=\"Artists\" />}\n      isAsync\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      suggestions={data?.results}\n      placeholder={trans(message('+Add artist'))}\n      isLoading={isLoading}\n      allowCustomValue={false}\n    >\n      {data?.results.map(result => (\n        <Item\n          value={result}\n          key={result.id}\n          startIcon={\n            result.image ? (\n              <img\n                className=\"h-24 w-24 rounded-full object-cover\"\n                src={result.image}\n                alt=\"\"\n              />\n            ) : undefined\n          }\n        >\n          {result.name}\n        </Item>\n      ))}\n    </FormChipField>\n  );\n}\n","import {FormChipField} from '@ui/forms/input-field/chip-field/form-chip-field';\nimport React, {ReactNode, useState} from 'react';\nimport {Item} from '@ui/forms/listbox/item';\nimport {useNormalizedModels} from '@common/ui/normalized-model/use-normalized-models';\n\ninterface Props {\n  model: string;\n  name: string;\n  className?: string;\n  label?: ReactNode;\n  placeholder?: string;\n  allowCustomValue?: boolean;\n}\nexport function FormNormalizedModelChipField({\n  name,\n  label,\n  placeholder,\n  model,\n  className,\n  allowCustomValue = false,\n}: Props) {\n  const [inputValue, setInputValue] = useState('');\n  const {data, isLoading} = useNormalizedModels(`normalized-models/${model}`, {\n    query: inputValue,\n  });\n  return (\n    <FormChipField\n      className={className}\n      name={name}\n      label={label}\n      isAsync\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      suggestions={data?.results}\n      placeholder={placeholder}\n      isLoading={isLoading}\n      allowCustomValue={allowCustomValue}\n    >\n      {data?.results.map(result => (\n        <Item\n          value={result}\n          key={result.id}\n          startIcon={\n            result.image ? (\n              <img\n                className=\"h-24 w-24 rounded-full object-cover\"\n                src={result.image}\n                alt=\"\"\n              />\n            ) : undefined\n          }\n        >\n          {result.name}\n        </Item>\n      ))}\n    </FormChipField>\n  );\n}\n","export const TAG_MODEL = 'tag';\n\nexport interface Tag {\n  id: number;\n  name: string;\n  display_name: string;\n  type: string;\n  updated_at: string;\n  created_at: string;\n  model_type: typeof TAG_MODEL;\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FileUploadIcon = createSvgIcon(\n  <path d=\"M18 15v3H6v-3H4v3c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-3h-2zM7 9l1.41 1.41L11 7.83V16h2V7.83l2.59 2.58L17 9l-5-5-5 5z\" />\n, 'FileUploadOutlined');\n","import React, {ReactElement, useMemo} from 'react';\nimport {prettyBytes} from '@ui/utils/files/pretty-bytes';\nimport {Trans} from '@ui/i18n/trans';\nimport {FileUpload} from '@common/uploads/uploader/file-upload-store';\nimport {TrackUploadStatus} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport clsx from 'clsx';\n\ninterface Props {\n  fileUpload: FileUpload;\n  status: TrackUploadStatus;\n  className?: string;\n}\nexport function TrackUploadStatusText({fileUpload, status, className}: Props) {\n  const bytesUploaded = fileUpload?.bytesUploaded || 0;\n  const totalBytes = useMemo(\n    () => prettyBytes(fileUpload.file.size),\n    [fileUpload.file.size],\n  );\n  const uploadedBytes = useMemo(\n    () => prettyBytes(bytesUploaded),\n    [bytesUploaded],\n  );\n\n  let statusMessage: ReactElement;\n  if (status === 'completed') {\n    statusMessage = <Trans message=\"Upload complete\" />;\n  } else if (status === 'aborted') {\n    statusMessage = <Trans message=\"Upload cancelled\" />;\n  } else if (status === 'failed') {\n    statusMessage = <Trans message=\"Upload failed\" />;\n  } else if (status === 'processing') {\n    statusMessage = <Trans message=\"Processing upload...\" />;\n  } else if (status === 'pending') {\n    statusMessage = <Trans message=\"Waiting to start...\" />;\n  } else {\n    statusMessage = (\n      <Trans\n        message=\":bytesUploaded of :totalBytes uploaded\"\n        values={{\n          bytesUploaded: uploadedBytes,\n          totalBytes,\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className={clsx('text-xs text-muted', className)}>{statusMessage}</div>\n  );\n}\n","import {FileUpload} from '@common/uploads/uploader/file-upload-store';\nimport {ProgressBar} from '@ui/progress/progress-bar';\nimport React, {ComponentPropsWithoutRef, ReactElement} from 'react';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {message} from '@ui/i18n/message';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {MixedText} from '@ui/i18n/mixed-text';\nimport {ErrorIcon} from '@ui/icons/material/Error';\nimport {WarningIcon} from '@ui/icons/material/Warning';\nimport {CheckCircleIcon} from '@ui/icons/material/CheckCircle';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {TrackUploadStatusText} from '@app/admin/tracks-datatable-page/track-form/track-upload-status-text';\n\nexport type TrackUploadStatus = FileUpload['status'] | 'processing' | undefined;\n\ninterface UploadProgressProps {\n  fileUpload: FileUpload;\n  status: TrackUploadStatus;\n  onAbort?: (uploadId: string) => void;\n  size?: 'sm' | 'md';\n  className?: string;\n}\nexport function TrackUploadProgress({\n  fileUpload,\n  status,\n  onAbort,\n  size = 'md',\n  className,\n}: UploadProgressProps) {\n  return (\n    <div className={className}>\n      <div className=\"flex items-center justify-between gap-24\">\n        <TrackUploadStatusText fileUpload={fileUpload} status={status} />\n        <UploadStatusButton\n          fileUpload={fileUpload}\n          status={status}\n          onAbort={onAbort}\n        />\n      </div>\n      <ProgressBar\n        size={size === 'sm' ? 'xs' : 'sm'}\n        radius=\"rounded-sm\"\n        value={fileUpload.percentage}\n        isIndeterminate={status === 'processing' || status === 'pending'}\n      />\n    </div>\n  );\n}\n\nfunction UploadStatusButton({\n  fileUpload,\n  status,\n  onAbort,\n}: UploadProgressProps) {\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\n  const errorMessage = fileUpload.errorMessage;\n\n  let statusButton: ReactElement;\n  if (status === 'failed') {\n    const errMessage =\n      errorMessage || message('This file could not be uploaded');\n    statusButton = (\n      <AnimatedStatus>\n        <Tooltip variant=\"danger\" label={<MixedText value={errMessage} />}>\n          <ErrorIcon className=\"text-danger\" size=\"sm\" />\n        </Tooltip>\n      </AnimatedStatus>\n    );\n  } else if (status === 'aborted') {\n    statusButton = (\n      <AnimatedStatus>\n        <WarningIcon className=\"text-warning\" size=\"sm\" />\n      </AnimatedStatus>\n    );\n  } else if (status === 'completed' || status === 'processing') {\n    statusButton = (\n      <AnimatedStatus>\n        <CheckCircleIcon size=\"sm\" className=\"text-primary\" />\n      </AnimatedStatus>\n    );\n  } else if (onAbort) {\n    statusButton = (\n      <AnimatedStatus>\n        <IconButton size=\"xs\" onClick={() => onAbort(fileUpload.file.id)}>\n          <CloseIcon />\n        </IconButton>\n      </AnimatedStatus>\n    );\n  } else {\n    // keep the spacing, even if status button is hidden\n    statusButton = <div className=\"h-30 w-30\" />;\n  }\n\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\n}\n\ninterface AnimatedStatusProps\n  extends Omit<\n    ComponentPropsWithoutRef<'div'>,\n    'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'\n  > {\n  children: ReactElement;\n}\nfunction AnimatedStatus({children, ...domProps}: AnimatedStatusProps) {\n  return (\n    <m.div\n      className=\"flex h-30 w-30 items-center justify-center\"\n      {...domProps}\n      initial={{scale: 0, opacity: 0}}\n      animate={{scale: 1, opacity: 1}}\n      exit={{scale: 0, opacity: 0}}\n    >\n      {children}\n    </m.div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {Album} from '@app/web-player/albums/album';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {UseFormReturn} from 'react-hook-form';\nimport {CreateAlbumPayload} from '@app/admin/albums-datatable-page/requests/use-create-album';\n\nexport type ExtractedTrackMetadata = Partial<CreateTrackPayload> & {\n  release_date?: string;\n  album_name?: string;\n};\n\ninterface Response extends BackendResponse {\n  metadata: {\n    title?: string;\n    album?: Album;\n    album_name?: string;\n    artist?: Artist;\n    artist_name?: string;\n    genres?: string[];\n    duration?: number;\n    release_date?: string;\n    comment?: string;\n    image?: FileEntry;\n    lyrics?: string;\n  };\n}\n\ninterface Payload {\n  fileEntryId: number;\n  autoMatchAlbum?: boolean;\n}\n\nexport function useExtractTackFileMetadata() {\n  return useMutation({\n    mutationFn: (payload: Payload) => extractMeta(payload),\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction extractMeta(payload: Payload): Promise<ExtractedTrackMetadata> {\n  return apiClient\n    .post<Response>(`tracks/${payload.fileEntryId}/extract-metadata`, payload)\n    .then(r => metadataToFormValues(r.data));\n}\n\nfunction metadataToFormValues(response: Response): ExtractedTrackMetadata {\n  const values: ExtractedTrackMetadata = {\n    name: response.metadata.title,\n    duration: response.metadata.duration,\n    genres: response.metadata.genres || [],\n    description: response.metadata.comment,\n    lyric: response.metadata.lyrics,\n    release_date: response.metadata.release_date,\n    album_name: response.metadata.album_name,\n  };\n  if (response.metadata.album) {\n    values.album_id = response.metadata.album.id;\n  }\n  if (response.metadata.artist) {\n    values.artists = [response.metadata.artist];\n  }\n  if (response.metadata.image) {\n    values.image = response.metadata.image.url;\n  }\n  return values;\n}\n\nexport function hydrateAlbumForm(\n  form: UseFormReturn<CreateAlbumPayload>,\n  data: ExtractedTrackMetadata,\n) {\n  if (!form.getValues('artists')?.length && data.artists) {\n    form.setValue('artists', data.artists);\n  }\n  if (!form.getValues('image') && data.image) {\n    form.setValue('image', data.image);\n  }\n  if (data.release_date) {\n    form.setValue('release_date', data.release_date);\n  }\n  if (data.genres?.length) {\n    form.setValue(\n      'genres',\n      // @ts-ignore\n      mergeArraysWithoutDuplicates(form.getValues('genres'), data.genres),\n    );\n  }\n  if (!form.getValues('name') && data.album_name) {\n    form.setValue('name', data.album_name);\n  }\n}\n\ntype Values = Partial<CreateTrackPayload>;\nexport function mergeTrackFormValues<\n  T extends Values = Values,\n  E extends Values = Values,\n>(newValues: T, oldValues: E): T & E {\n  return {\n    ...oldValues,\n    ...newValues,\n    artists: mergeArraysWithoutDuplicates(oldValues.artists, newValues.artists),\n    genres: mergeArraysWithoutDuplicates(\n      oldValues.genres as NormalizedModel[],\n      newValues.genres as NormalizedModel[],\n      'name',\n    ),\n    tags: mergeArraysWithoutDuplicates(oldValues.tags, newValues.tags, 'name'),\n  };\n}\n\nfunction mergeArraysWithoutDuplicates(\n  oldValues: NormalizedModel[] = [],\n  newValues: NormalizedModel[] = [],\n  key: keyof NormalizedModel = 'id',\n) {\n  newValues = newValues.filter(\n    nv => !oldValues.find(ov => ov[key] === nv[key]),\n  );\n  return [...oldValues, ...newValues];\n}\n","import {useSettings} from '@ui/settings/use-settings';\nimport {\n  ExtractedTrackMetadata,\n  useExtractTackFileMetadata,\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {UploadStrategyConfig} from '@common/uploads/uploader/strategy/upload-strategy';\nimport {useCallback, useMemo, useRef} from 'react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {toast} from '@ui/toast/toast';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {openUploadWindow} from '@ui/utils/files/open-upload-window';\nimport {generateWaveformData} from '@app/web-player/tracks/waveform/generate-waveform-data';\nimport {UploadedFile} from '@ui/utils/files/uploaded-file';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {message} from '@ui/i18n/message';\nimport {FileInputType} from '@ui/utils/files/file-input-config';\nimport {Disk} from '@common/uploads/uploader/backend-metadata';\nimport {validateFile} from '@ui/utils/files/validate-file';\n\nconst FiftyMB = 50 * 1024 * 1024;\n\nexport interface TrackUploadMeta {\n  isGeneratingWave?: boolean;\n  isExtractingMetadata?: boolean;\n}\n\nexport type TrackUploadPayload = CreateTrackPayload & {uploadId: string};\n\ninterface Options {\n  autoMatchAlbum?: boolean;\n  onUploadStart?: (data: TrackUploadPayload) => void;\n  onMetadataChange: (\n    file: UploadedFile,\n    newData: ExtractedTrackMetadata & {waveData?: number[][]},\n  ) => void;\n}\nexport function useTrackUploader(options: Options) {\n  const {uploads} = useSettings();\n  const restrictions = useMemo(\n    () => ({\n      allowedFileTypes: [FileInputType.audio, FileInputType.video],\n      maxFileSize: uploads.max_size || FiftyMB,\n    }),\n    [uploads.max_size],\n  );\n\n  const extractMetadata = useExtractTackFileMetadata();\n  const optionsRef = useRef<Options>(options);\n  optionsRef.current = options;\n\n  const uploadMultiple = useFileUploadStore(s => s.uploadMultiple);\n  const updateFileUpload = useFileUploadStore(s => s.updateFileUpload);\n  const getUpload = useFileUploadStore(s => s.getUpload);\n  const updateUpload = useCallback(\n    (uploadId: string, newMeta: TrackUploadMeta) => {\n      updateFileUpload(uploadId, {\n        meta: {\n          // @ts-ignore\n          ...(getUpload(uploadId)?.meta || {}),\n          ...newMeta,\n        },\n      });\n    },\n    [updateFileUpload, getUpload],\n  );\n\n  // todo: playback source is not set if extract metadata request errors out\n  const uploadOptions: UploadStrategyConfig = useMemo(() => {\n    return {\n      metadata: {\n        diskPrefix: 'track_media',\n        disk: Disk.public,\n      },\n      restrictions,\n      onSuccess: (entry: FileEntry, file) => {\n        updateUpload(file.id, {isExtractingMetadata: true});\n        extractMetadata.mutate(\n          {\n            fileEntryId: entry.id,\n            autoMatchAlbum: optionsRef.current.autoMatchAlbum,\n          },\n          {\n            onSuccess: formValues => {\n              updateUpload(file.id, {isExtractingMetadata: false});\n              const newValues: ExtractedTrackMetadata = {\n                ...formValues,\n                src: entry.url,\n              };\n              optionsRef.current.onMetadataChange(file, newValues);\n            },\n            onError: () => {\n              updateUpload(file.id, {isExtractingMetadata: false});\n            },\n          },\n        );\n      },\n      onError: message => {\n        if (message) {\n          toast.danger(message);\n        }\n      },\n    };\n  }, [extractMetadata, updateUpload, restrictions]);\n\n  const validateUploads = useCallback(\n    (files: UploadedFile[]) => {\n      const validFiles = files.filter(\n        file => !validateFile(file, restrictions),\n      );\n      // show error message, if some files did not pass validation\n      if (files.length !== validFiles.length) {\n        toast.danger(\n          message(':count of your files is not supported.', {\n            values: {count: files.length - validFiles.length},\n          }),\n        );\n      }\n      return validFiles;\n    },\n    [restrictions],\n  );\n\n  const uploadTracks = useCallback(\n    async (files: UploadedFile[]) => {\n      const validFiles = validateUploads(files);\n      if (!validFiles.length) return;\n      files.forEach(file => {\n        optionsRef.current.onUploadStart?.({\n          name: file.name,\n          uploadId: file.id,\n        });\n      });\n      uploadMultiple(files, uploadOptions);\n      for (const file of files) {\n        updateUpload(file.id, {isGeneratingWave: true});\n        const waveData = await generateWaveformData(file.native);\n        if (waveData) {\n          optionsRef.current.onMetadataChange(file, {waveData});\n        }\n        updateUpload(file.id, {isGeneratingWave: false});\n      }\n    },\n    [uploadOptions, uploadMultiple, updateUpload, validateUploads],\n  );\n\n  const openFilePicker = useCallback(async () => {\n    const files = await openUploadWindow({\n      multiple: true,\n      types: restrictions.allowedFileTypes,\n    });\n    await uploadTracks(files);\n  }, [uploadTracks, restrictions]);\n\n  return {openFilePicker, uploadTracks, validateUploads};\n}\n","import {TrackUploadStatus} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {TrackUploadMeta} from '@app/web-player/backstage/upload-page/use-track-uploader';\n\nexport function useTrackUpload(uploadId: string | undefined) {\n  const upload = useFileUploadStore(s =>\n    uploadId ? s.fileUploads.get(uploadId) : null\n  );\n\n  let isUploading = false;\n  let status: TrackUploadStatus;\n\n  if (upload) {\n    const meta = upload.meta as TrackUploadMeta | undefined;\n    const isProcessing = meta?.isExtractingMetadata || meta?.isGeneratingWave;\n\n    isUploading =\n      upload?.status === 'pending' ||\n      upload?.status === 'inProgress' ||\n      !!isProcessing;\n\n    status =\n      upload?.status === 'completed' && isProcessing\n        ? 'processing'\n        : upload?.status;\n  }\n\n  return {isUploading, status, activeUpload: upload};\n}\n","import React, {useState} from 'react';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {FileUploadIcon} from '@ui/icons/material/FileUpload';\nimport {TrackUploadProgress} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport {useFormContext} from 'react-hook-form';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {mergeTrackFormValues} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\n\nexport function TrackFormUploadButton() {\n  const [uploadId, setUploadId] = useState<string>();\n  const {setValue, watch, getValues} = useFormContext<CreateTrackPayload>();\n  const {openFilePicker} = useTrackUploader({\n    onUploadStart: ({uploadId}) => setUploadId(uploadId),\n    onMetadataChange: (file, newData) => {\n      const mergedValues = mergeTrackFormValues(newData, getValues());\n      Object.entries(mergedValues).forEach(([key, value]) =>\n        setValue(key as keyof CreateTrackPayload, value, {shouldDirty: true}),\n      );\n    },\n  });\n  const {status, isUploading, activeUpload} = useTrackUpload(uploadId);\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\n  return (\n    <div>\n      <Button\n        className=\"w-full\"\n        variant=\"flat\"\n        color=\"primary\"\n        startIcon={<FileUploadIcon />}\n        disabled={isUploading}\n        onClick={() => openFilePicker()}\n      >\n        {watch('src') ? (\n          <Trans message=\"Replace file\" />\n        ) : (\n          <Trans message=\"Upload file\" />\n        )}\n      </Button>\n      {activeUpload && (\n        <TrackUploadProgress\n          fileUpload={activeUpload}\n          status={status}\n          className=\"mt-24\"\n          onAbort={uploadId => {\n            abortUpload(uploadId);\n            clearInactive();\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {FormArtistPicker} from '@app/web-player/artists/artist-picker/form-artist-picker';\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {TAG_MODEL} from '@common/tags/tag';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {useFormContext} from 'react-hook-form';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {FormattedDuration} from '@ui/i18n/formatted-duration';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {TrackFormUploadButton} from '@app/admin/tracks-datatable-page/track-form/track-form-upload-button';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {FormNormalizedModelField} from '@common/ui/normalized-model/normalized-model-field';\n\ninterface TrackFormProps {\n  showExternalIdFields?: boolean;\n  showAlbumField?: boolean;\n  uploadButton?: ReactNode;\n}\nexport function TrackForm({\n  showExternalIdFields,\n  showAlbumField = true,\n  uploadButton,\n}: TrackFormProps) {\n  const {trans} = useTrans();\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <div className=\"gap-24 md:flex\">\n      <div className=\"flex-shrink-0\">\n        <FormImageSelector\n          name=\"image\"\n          diskPrefix=\"track_image\"\n          variant={isMobile ? 'input' : 'square'}\n          label={isMobile ? <Trans message=\"Image\" /> : null}\n          previewSize={isMobile ? undefined : 'w-full md:w-224 aspect-square'}\n          stretchPreview\n        />\n        <div className=\"mt-24\">\n          {uploadButton ? uploadButton : <TrackFormUploadButton />}\n        </div>\n      </div>\n      <div className=\"mt-24 flex-auto md:mt-0\">\n        <FormTextField\n          name=\"name\"\n          label={<Trans message=\"Name\" />}\n          className=\"mb-24\"\n          required\n          autoFocus\n        />\n        {showAlbumField && (\n          <FormNormalizedModelField\n            className=\"mb-24\"\n            label={<Trans message=\"Album\" />}\n            name=\"album_id\"\n            endpoint=\"search/suggestions/album\"\n          />\n        )}\n        <FormArtistPicker name=\"artists\" className=\"mb-24\" />\n        <FormNormalizedModelChipField\n          label={<Trans message=\"Genres\" />}\n          placeholder={trans(message('+Add genre'))}\n          model={GENRE_MODEL}\n          name=\"genres\"\n          allowCustomValue\n          className=\"mb-24\"\n        />\n        <FormNormalizedModelChipField\n          label={<Trans message=\"Tags\" />}\n          placeholder={trans(message('+Add tag'))}\n          model={TAG_MODEL}\n          name=\"tags\"\n          allowCustomValue\n          className=\"mb-24\"\n        />\n        <FormTextField\n          name=\"description\"\n          label={<Trans message=\"Description\" />}\n          inputElementType=\"textarea\"\n          rows={5}\n          className=\"mb-24\"\n        />\n        <DurationField />\n        {showExternalIdFields && <SourceField />}\n        {showExternalIdFields && <SpotifyIdField />}\n      </div>\n    </div>\n  );\n}\n\nfunction SourceField() {\n  return (\n    <FormTextField\n      name=\"src\"\n      label={<Trans message=\"Playback source\" />}\n      className=\"mb-24\"\n      minLength={1}\n      maxLength={230}\n      description={\n        <Trans message=\"Supports audio, video, hls/dash stream and youtube video url. If left empty, best matching youtube video will be found automatically.\" />\n      }\n    />\n  );\n}\n\nfunction SpotifyIdField() {\n  const {spotify_is_setup} = useSettings();\n  if (!spotify_is_setup) {\n    return null;\n  }\n  return (\n    <FormTextField\n      name=\"spotify_id\"\n      label={<Trans message=\"Spotify ID\" />}\n      className=\"mb-24\"\n      minLength={22}\n      maxLength={22}\n    />\n  );\n}\n\nfunction DurationField() {\n  const {watch} = useFormContext<CreateTrackPayload>();\n  return (\n    <FormTextField\n      required\n      name=\"duration\"\n      label={<Trans message=\"Duration (in milliseconds)\" />}\n      className=\"mb-24\"\n      type=\"number\"\n      min={1}\n      max={86400000}\n      description={\n        <Trans\n          message=\"Will appear on the site as: :preview\"\n          values={{preview: <FormattedDuration ms={watch('duration')} />}}\n        />\n      }\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {TrackUploadPayload} from '@app/web-player/backstage/upload-page/use-track-uploader';\n\nconst endpoint = 'tracks';\n\nexport interface CreateTrackResponse extends BackendResponse {\n  track: Track;\n}\n\nexport interface CreateTrackPayload\n  extends Omit<\n    Track,\n    'genres' | 'artists' | 'tags' | 'id' | 'model_type' | 'album' | 'lyric'\n  > {\n  album_id?: number;\n  artists?: NormalizedModel[];\n  waveData?: number[][];\n  genres?: NormalizedModel[] | string[];\n  tags?: NormalizedModel[];\n  lyric?: string;\n}\n\ninterface Options {\n  onSuccess?: (response: CreateTrackResponse) => void;\n}\n\nexport function useCreateTrack(\n  form: UseFormReturn<CreateTrackPayload> | UseFormReturn<TrackUploadPayload>,\n  {onSuccess}: Options = {},\n) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: CreateTrackPayload) => createTrack(payload),\n    onSuccess: response => {\n      toast(trans(message('Track created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n      onSuccess?.(response);\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createTrack(payload: CreateTrackPayload) {\n  return apiClient\n    .post<CreateTrackResponse>(endpoint, prepareTrackPayload(payload))\n    .then(r => r.data);\n}\n\nexport function prepareTrackPayload(payload: CreateTrackPayload) {\n  return {\n    ...payload,\n    album_id: payload.album_id ? payload.album_id : null,\n    artists: payload.artists?.map(artist => artist.id),\n  };\n}\n","import {useForm} from 'react-hook-form';\nimport {\n  CreateTrackPayload,\n  CreateTrackResponse,\n  useCreateTrack,\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Props {\n  onTrackCreated?: (response: CreateTrackResponse) => void;\n  defaultValues?: Partial<CreateTrackPayload>;\n}\n\nexport function useCreateTrackForm({\n  onTrackCreated,\n  defaultValues,\n}: Props = {}) {\n  const form = useForm<CreateTrackPayload>({\n    defaultValues,\n  });\n  const createTrack = useCreateTrack(form, {onSuccess: onTrackCreated});\n  return {form, createTrack};\n}\n","export default \"__VITE_ASSET__5b7b3136__\"","export default \"__VITE_ASSET__430d5aeb__\"","import {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {Footer} from '@common/ui/footer/footer';\nimport lightBgImage from './images/light-bg.svg';\nimport darkBgImage from './images/dark-bg.svg';\nimport {useIsDarkMode} from '@ui/themes/use-is-dark-mode';\nimport {ComponentPropsWithoutRef, ReactNode} from 'react';\n\ninterface Props extends ComponentPropsWithoutRef<'div'> {\n  children: ReactNode;\n}\nexport function BackstageLayout({children, ...domProps}: Props) {\n  const isDarkMode = useIsDarkMode();\n  return (\n    <div className=\"flex h-screen flex-col\" {...domProps}>\n      <Navbar className=\"flex-shrink-0\" color=\"bg\" darkModeColor=\"bg\" />\n      <div\n        className=\"relative flex-auto overflow-y-auto bg-cover\"\n        style={{\n          backgroundImage: `url(${isDarkMode ? darkBgImage : lightBgImage})`,\n        }}\n      >\n        <div className=\"container mx-auto flex min-h-full flex-col p-14 md:p-24\">\n          <div className=\"flex-auto\">{children}</div>\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {useCreateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-create-track-form';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {useLocation} from 'react-router-dom';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function CreateTrackPage({wrapInContainer}: Props) {\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  const {form, createTrack} = useCreateTrackForm({\n    onTrackCreated: response => {\n      if (pathname.includes('admin')) {\n        navigate(`/admin/tracks/${response.track.id}/edit`);\n      } else {\n        navigate(getTrackLink(response.track));\n      }\n    },\n  });\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createTrack.mutate(values);\n      }}\n      title={<Trans message=\"Add new track\" />}\n      isLoading={createTrack.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <FileUploadProvider>\n        <TrackForm showExternalIdFields />\n      </FileUploadProvider>\n    </CrupdateResourceLayout>\n  );\n}\n\nexport function BackstageCreateTrackPage() {\n  return (\n    <BackstageLayout>\n      <CreateTrackPage />\n    </BackstageLayout>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {\n  CreateTrackPayload,\n  prepareTrackPayload,\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\nexport interface UpdateTrackResponse extends BackendResponse {\n  track: Track;\n}\n\nexport interface UpdateTrackPayload extends CreateTrackPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `tracks/${id}`;\n\ninterface Options {\n  onSuccess?: (response: UpdateTrackResponse) => void;\n}\n\nexport function useUpdateTrack(\n  form: UseFormReturn<UpdateTrackPayload>,\n  options: Options = {},\n) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: UpdateTrackPayload) => updateChannel(payload),\n    onSuccess: response => {\n      toast(trans(message('Track updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('tracks'),\n      });\n      options.onSuccess?.(response);\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateChannel({\n  id,\n  ...payload\n}: UpdateTrackPayload): Promise<UpdateTrackResponse> {\n  return apiClient\n    .put(Endpoint(id), prepareTrackPayload(payload as CreateTrackPayload))\n    .then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {\n  UpdateTrackPayload,\n  UpdateTrackResponse,\n  useUpdateTrack,\n} from '@app/admin/tracks-datatable-page/requests/use-update-track';\nimport {Track} from '@app/web-player/tracks/track';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Options {\n  onTrackUpdated?: (response: UpdateTrackResponse) => void;\n}\n\nexport function useUpdateTrackForm(\n  track: UpdateTrackPayload | CreateTrackPayload | Omit<Track, 'lyric'>,\n  options: Options = {}\n) {\n  const form = useForm<UpdateTrackPayload>({\n    defaultValues: {\n      ...track,\n      image: track.image || (track as Track).album?.image,\n    },\n  });\n  const updateTrack = useUpdateTrack(form, {onSuccess: options.onTrackUpdated});\n  return {form, updateTrack};\n}\n","import React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useUpdateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-update-track-form';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {PageStatus} from '@common/http/page-status';\nimport {Navigate, useLocation} from 'react-router-dom';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\nimport {useTrackPermissions} from '@app/web-player/tracks/hooks/use-track-permissions';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function UpdateTrackPage({wrapInContainer}: Props) {\n  const query = useTrack({loader: 'editTrackPage'});\n  if (query.data) {\n    return (\n      <PageContent track={query.data.track} wrapInContainer={wrapInContainer} />\n    );\n  }\n  return (\n    <PageStatus\n      query={query}\n      loaderClassName=\"absolute inset-0 m-auto\"\n      loaderIsScreen={false}\n    />\n  );\n}\n\ninterface PageContentProps {\n  track: Track;\n  wrapInContainer?: boolean;\n}\nfunction PageContent({track, wrapInContainer}: PageContentProps) {\n  const {canEdit} = useTrackPermissions([track]);\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  const {form, updateTrack} = useUpdateTrackForm(track, {\n    onTrackUpdated: response => {\n      if (pathname.includes('admin')) {\n        navigate('/admin/tracks');\n      } else {\n        navigate(getTrackLink(response.track));\n      }\n    },\n  });\n\n  if (!canEdit) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateTrack.mutate(values);\n      }}\n      title={<Trans message=\"Edit “:name“ track\" values={{name: track.name}} />}\n      isLoading={updateTrack.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <FileUploadProvider>\n        <TrackForm showExternalIdFields />\n      </FileUploadProvider>\n    </CrupdateResourceLayout>\n  );\n}\n\nexport function BackstageUpdateTrackPage() {\n  return (\n    <BackstageLayout>\n      <UpdateTrackPage />\n    </BackstageLayout>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@ui/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {NormalizedModel} from '@ui/types/normalized-model';\nimport {Album} from '@app/web-player/albums/album';\nimport {\n  CreateTrackPayload,\n  prepareTrackPayload,\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\nconst endpoint = 'albums';\n\ninterface Response extends BackendResponse {\n  album: Album;\n}\n\nexport type CreateAlbumPayloadTrack = Omit<\n  CreateTrackPayload,\n  'album' | 'artists' | 'lyric'\n> & {\n  uploadId: string;\n};\n\nexport interface CreateAlbumPayload\n  extends Omit<Album, 'genres' | 'tags' | 'tracks' | 'artists'> {\n  artists: NormalizedModel[];\n  genres?: NormalizedModel[] | string[];\n  tags?: NormalizedModel[];\n  tracks: CreateAlbumPayloadTrack[];\n}\n\nexport function useCreateAlbum(form: UseFormReturn<CreateAlbumPayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: CreateAlbumPayload) => createAlbum(payload),\n    onSuccess: () => {\n      toast(trans(message('Album created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createAlbum(payload: CreateAlbumPayload) {\n  return apiClient\n    .post<Response>(endpoint, prepareAlbumPayload(payload))\n    .then(r => r.data);\n}\n\nexport function prepareAlbumPayload(payload: CreateAlbumPayload) {\n  return {\n    ...payload,\n    artists: payload.artists?.map(artist => artist.id),\n    tracks: payload.tracks?.map(track => prepareTrackPayload(track)),\n  };\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {\n  CreateAlbumPayload,\n  prepareAlbumPayload,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport {Album} from '@app/web-player/albums/album';\nimport {useLocation} from 'react-router-dom';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\n\ninterface Response extends BackendResponse {\n  album: Album;\n}\n\nexport interface UpdateAlbumPayload extends CreateAlbumPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `albums/${id}`;\n\nexport function useUpdateAlbum(\n  form: UseFormReturn<UpdateAlbumPayload>,\n  albumId: number,\n) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  return useMutation({\n    mutationFn: (payload: UpdateAlbumPayload) => updateAlbum(albumId, payload),\n    onSuccess: response => {\n      toast(trans(message('Album updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('albums'),\n      });\n      if (pathname.includes('admin')) {\n        navigate('/admin/albums');\n      } else {\n        navigate(getAlbumLink(response.album));\n      }\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateAlbum(\n  id: number,\n  payload: UpdateAlbumPayload,\n): Promise<Response> {\n  return apiClient\n    .put(Endpoint(id), prepareAlbumPayload(payload))\n    .then(r => r.data);\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DragHandleIcon = createSvgIcon(\n  <path d=\"M20 9H4v2h16V9zM4 15h16v-2H4v2z\" />\n, 'DragHandleOutlined');\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {useUpdateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-update-track-form';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {Form} from '@ui/forms/form';\nimport {Button} from '@ui/buttons/button';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {UpdateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-update-track';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Props {\n  track: UpdateTrackPayload | CreateTrackPayload;\n  hideAlbumField?: boolean;\n}\nexport function UpdateTrackDialog({track, hideAlbumField}: Props) {\n  const {formId, close} = useDialogContext();\n  const {form} = useUpdateTrackForm(track);\n  return (\n    <Dialog size=\"fullscreen\">\n      <DialogHeader>\n        <Trans message=\"Edit “:name“ track\" values={{name: track.name}} />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            close(values);\n          }}\n          onBeforeSubmit={() => {\n            form.clearErrors();\n          }}\n        >\n          <TrackForm showExternalIdFields showAlbumField={!hideAlbumField} />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button form={formId} variant=\"flat\" color=\"primary\" type=\"submit\">\n          <Trans message=\"Update\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {Form} from '@ui/forms/form';\nimport {Button} from '@ui/buttons/button';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {useCreateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-create-track-form';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Props {\n  defaultValues?: Partial<CreateTrackPayload>;\n  hideAlbumField?: boolean;\n}\nexport function CreateTrackDialog({defaultValues, hideAlbumField}: Props) {\n  const {formId, close} = useDialogContext();\n  const {form} = useCreateTrackForm({defaultValues});\n  return (\n    <Dialog size=\"fullscreen\">\n      <DialogHeader>\n        <Trans message=\"Add new track\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            close(values);\n          }}\n          onBeforeSubmit={() => {\n            form.clearErrors();\n          }}\n        >\n          <TrackForm showExternalIdFields showAlbumField={!hideAlbumField} />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button form={formId} variant=\"flat\" color=\"primary\" type=\"submit\">\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useFieldArray, useFormContext} from 'react-hook-form';\nimport {\n  CreateAlbumPayload,\n  CreateAlbumPayloadTrack,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport React, {useRef} from 'react';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {FileUploadIcon} from '@ui/icons/material/FileUpload';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {DragHandleIcon} from '@ui/icons/material/DragHandle';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {ProgressCircle} from '@ui/progress/progress-circle';\nimport {TrackUploadStatusText} from '@app/admin/tracks-datatable-page/track-form/track-upload-status-text';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {UpdateTrackDialog} from '@app/admin/tracks-datatable-page/track-form/update-track-dialog';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport musicImage from '@app/admin/tracks-datatable-page/music.svg';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {CreateTrackDialog} from '@app/admin/tracks-datatable-page/track-form/create-track-dialog';\nimport {DragPreviewRenderer} from '@ui/interactions/dnd/use-draggable';\nimport {DragPreview} from '@ui/interactions/dnd/drag-preview';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {\n  hydrateAlbumForm,\n  mergeTrackFormValues,\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\nimport {UpdateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-update-track';\nimport {useSortable} from '@ui/interactions/dnd/sortable/use-sortable';\nimport {SvgImage} from '@ui/images/svg-image';\n\nexport function AlbumTracksForm() {\n  const form = useFormContext<CreateAlbumPayload>();\n  const {watch, setValue, getValues} = form;\n  const {fields, remove, prepend, move} = useFieldArray({\n    name: 'tracks',\n  });\n\n  const updateTrack = (\n    uploadId: string,\n    newValues: Partial<CreateTrackPayload>,\n  ) => {\n    const index = getValues('tracks')?.findIndex(f => f.uploadId === uploadId);\n    if (index != null) {\n      setValue(\n        `tracks.${index}`,\n        mergeTrackFormValues(newValues, getValues(`tracks.${index}`)),\n        {shouldDirty: true},\n      );\n    }\n  };\n\n  const {openFilePicker} = useTrackUploader({\n    onUploadStart: data =>\n      prepend(\n        // newly uploaded track should inherit album artists, genres and tags\n        mergeTrackFormValues(data, {\n          artists: form.getValues('artists'),\n          genres: form.getValues('genres'),\n          tags: form.getValues('tags'),\n        }),\n      ),\n    onMetadataChange: (file, newData) => {\n      hydrateAlbumForm(form, newData);\n      updateTrack(file.id, newData);\n    },\n  });\n\n  const tracks = watch('tracks') || [];\n\n  return (\n    <div>\n      <div className=\"flex items-center gap-12\">\n        <h2 className=\"my-24 text-xl font-semibold\">\n          <Trans message=\"Tracks\" />\n        </h2>\n        <Button\n          variant=\"outline\"\n          color=\"primary\"\n          size=\"xs\"\n          className=\"ml-auto\"\n          startIcon={<FileUploadIcon />}\n          onClick={() => openFilePicker()}\n        >\n          <Trans message=\"Upload tracks\" />\n        </Button>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={newTrack => {\n            if (newTrack) {\n              prepend(newTrack);\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Create track\" />}>\n            <IconButton variant=\"outline\" color=\"primary\" size=\"xs\">\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n          <CreateTrackDialog\n            hideAlbumField\n            defaultValues={{\n              artists: watch('artists'),\n              tags: watch('tags'),\n              genres: watch('genres'),\n            }}\n          />\n        </DialogTrigger>\n      </div>\n      {fields.map((field, index) => {\n        const track = tracks[index];\n        return (\n          <TrackItem\n            key={field.id}\n            track={track}\n            onRemove={() => remove(index)}\n            onSort={(oldIndex, newIndex) => move(oldIndex, newIndex)}\n            tracks={tracks}\n            onUpdate={newValues => {\n              updateTrack(track.uploadId, newValues);\n            }}\n          />\n        );\n      })}\n\n      {!fields.length ? (\n        <IllustratedMessage\n          className=\"mt-40\"\n          image={<SvgImage src={musicImage} />}\n          title={<Trans message=\"This album does not have any tracks yet\" />}\n        />\n      ) : null}\n    </div>\n  );\n}\n\ninterface TrackItemProps {\n  track: CreateAlbumPayloadTrack;\n  tracks: CreateAlbumPayloadTrack[];\n  onRemove: () => void;\n  onUpdate: (updatedTrack: UpdateTrackPayload | CreateTrackPayload) => void;\n  onSort: (oldIndex: number, newIndex: number) => void;\n}\nfunction TrackItem({\n  track,\n  tracks,\n  onRemove,\n  onUpdate,\n  onSort,\n}: TrackItemProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const previewRef = useRef<DragPreviewRenderer>(null);\n\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const activeUpload = useFileUploadStore(s => {\n    return track.uploadId ? s.fileUploads.get(track.uploadId) : null;\n  });\n  const {isUploading, status} = useTrackUpload(track.uploadId);\n\n  const {sortableProps} = useSortable({\n    disabled: isUploading,\n    ref,\n    item: track,\n    items: tracks,\n    type: 'albumFormTrack',\n    preview: previewRef,\n    strategy: 'line',\n    onSortEnd: (oldIndex, newIndex) => {\n      onSort(oldIndex, newIndex);\n    },\n  });\n\n  return (\n    <div\n      className=\"border-b border-t border-t-transparent py-4\"\n      ref={ref}\n      {...sortableProps}\n    >\n      <div className=\"flex items-center text-sm\">\n        <IconButton className=\"mr-14 flex-shrink-0\" disabled={isUploading}>\n          <DragHandleIcon />\n        </IconButton>\n        <div className=\"flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap\">\n          {track.name}\n        </div>\n        {activeUpload && (\n          <div className=\"mr-10 flex items-center\">\n            <TrackUploadStatusText\n              fileUpload={activeUpload}\n              status={status}\n              className=\"mr-10\"\n            />\n            <ProgressCircle\n              isIndeterminate={status === 'processing'}\n              value={activeUpload.percentage}\n              size=\"sm\"\n            />\n          </div>\n        )}\n        <DialogTrigger\n          type=\"modal\"\n          onClose={updatedTrack => {\n            if (updatedTrack) {\n              onUpdate(updatedTrack);\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Edit track\" />}>\n            <IconButton\n              className=\"ml-auto flex-shrink-0 text-muted\"\n              disabled={isUploading}\n            >\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n          <UpdateTrackDialog track={track} hideAlbumField={true} />\n        </DialogTrigger>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={isConfirmed => {\n            if (isConfirmed) {\n              if (track.uploadId) {\n                abortUpload(track.uploadId);\n              }\n              onRemove();\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Remove track\" />}>\n            <IconButton className=\"flex-shrink-0 text-muted\">\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n          <ConfirmationDialog\n            isDanger\n            title={<Trans message=\"Remove track\" />}\n            body={\n              <Trans message=\"Are you sure you want to remove this track from the album?\" />\n            }\n            confirm={<Trans message=\"Remove\" />}\n          />\n        </DialogTrigger>\n      </div>\n      <RowDragPreview track={track} ref={previewRef} />\n    </div>\n  );\n}\n\ninterface DragPreviewProps {\n  track: CreateTrackPayload;\n}\nconst RowDragPreview = React.forwardRef<DragPreviewRenderer, DragPreviewProps>(\n  ({track}, ref) => {\n    let content = track.name;\n    if (track.artists?.length) {\n      content += `- ${track.artists?.[0].name}`;\n    }\n    return (\n      <DragPreview ref={ref}>\n        {() => (\n          <div className=\"rounded bg-chip p-8 text-sm shadow\">{content}</div>\n        )}\n      </DragPreview>\n    );\n  },\n);\n","import React, {Fragment} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormArtistPicker} from '@app/web-player/artists/artist-picker/form-artist-picker';\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {TAG_MODEL} from '@common/tags/tag';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {FormDatePicker} from '@ui/forms/input-field/date/date-picker/date-picker';\nimport {AlbumTracksForm} from '@app/admin/albums-datatable-page/album-form/album-tracks-form';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\n\n// AlbumForm will be wrapped in FileUploadProvider by parent component\n\ninterface AlbumFormProps {\n  showExternalIdFields?: boolean;\n}\nexport function AlbumForm({showExternalIdFields}: AlbumFormProps) {\n  const {trans} = useTrans();\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <Fragment>\n      <div className=\"gap-24 md:flex\">\n        <div className=\"flex-shrink-0\">\n          <FormImageSelector\n            name=\"image\"\n            diskPrefix=\"album_images\"\n            label={isMobile ? <Trans message=\"Image\" /> : null}\n            variant={isMobile ? 'input' : 'square'}\n            previewSize=\"md:w-full md:w-224 md:aspect-square\"\n            stretchPreview\n          />\n        </div>\n        <div className=\"mt-24 flex-auto md:mt-0\">\n          <FormTextField\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-24\"\n            required\n            autoFocus\n          />\n          <FormDatePicker\n            name=\"release_date\"\n            label={<Trans message=\"Release date\" />}\n            className=\"mb-24\"\n            granularity=\"day\"\n          />\n          <FormArtistPicker name=\"artists\" className=\"mb-24\" />\n          <FormNormalizedModelChipField\n            label={<Trans message=\"Genres\" />}\n            placeholder={trans(message('+Add genre'))}\n            model={GENRE_MODEL}\n            name=\"genres\"\n            allowCustomValue\n            className=\"mb-24\"\n          />\n          <FormNormalizedModelChipField\n            label={<Trans message=\"Tags\" />}\n            placeholder={trans(message('+Add tag'))}\n            model={TAG_MODEL}\n            name=\"tags\"\n            allowCustomValue\n            className=\"mb-24\"\n          />\n          <FormTextField\n            name=\"description\"\n            label={<Trans message=\"Description\" />}\n            inputElementType=\"textarea\"\n            rows={5}\n            className=\"mb-24\"\n          />\n          {showExternalIdFields && <SpotifyIdField />}\n        </div>\n      </div>\n      <AlbumTracksForm />\n    </Fragment>\n  );\n}\n\nfunction SpotifyIdField() {\n  const {spotify_is_setup} = useSettings();\n  if (!spotify_is_setup) {\n    return null;\n  }\n  return (\n    <FormTextField\n      name=\"spotify_id\"\n      label={<Trans message=\"Spotify ID\" />}\n      className=\"mb-24\"\n      minLength={22}\n      maxLength={22}\n    />\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\nimport {Album} from '@app/web-player/albums/album';\nimport {\n  UpdateAlbumPayload,\n  useUpdateAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-update-album';\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  FileUploadProvider,\n  useFileUploadStore,\n} from '@common/uploads/uploader/file-upload-provider';\nimport {Navigate} from 'react-router-dom';\nimport {useAlbumPermissions} from '@app/web-player/albums/use-album-permissions';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function UpdateAlbumPage({wrapInContainer}: Props) {\n  const query = useAlbum({loader: 'editAlbumPage'});\n\n  if (query.data) {\n    return (\n      <FileUploadProvider>\n        <PageContent\n          album={query.data.album}\n          wrapInContainer={wrapInContainer}\n        />\n      </FileUploadProvider>\n    );\n  }\n\n  return (\n    <PageStatus\n      query={query}\n      loaderIsScreen={false}\n      loaderClassName=\"absolute inset-0 m-auto\"\n    />\n  );\n}\n\ninterface PageContentProps {\n  album: Album;\n  wrapInContainer?: boolean;\n}\nfunction PageContent({album, wrapInContainer}: PageContentProps) {\n  const {canEdit} = useAlbumPermissions(album);\n  const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\n  const form = useForm<UpdateAlbumPayload>({\n    defaultValues: {\n      image: album.image,\n      name: album.name,\n      release_date: album.release_date,\n      artists: album.artists,\n      genres: album.genres,\n      tags: album.tags,\n      description: album.description,\n      spotify_id: album.spotify_id,\n      tracks: album.tracks,\n    },\n  });\n  const updateAlbum = useUpdateAlbum(form, album.id);\n\n  if (!canEdit) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateAlbum.mutate(values);\n      }}\n      title={<Trans message=\"Edit “:name“ album\" values={{name: album.name}} />}\n      isLoading={updateAlbum.isPending || uploadIsInProgress}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <AlbumForm showExternalIdFields />\n    </CrupdateResourceLayout>\n  );\n}\n\nexport function BackstageUpdateAlbumPage() {\n  return (\n    <BackstageLayout>\n      <UpdateAlbumPage wrapInContainer={false} />\n    </BackstageLayout>\n  );\n}\n","import {forwardRef, useImperativeHandle, useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {\n  CreateAlbumPayload,\n  useCreateAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {\n  hydrateAlbumForm,\n  mergeTrackFormValues,\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {Form} from '@ui/forms/form';\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport type {\n  UploaderActions,\n  UploaderProps,\n} from '@app/web-player/backstage/upload-page/upload-page';\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\n\nexport const AlbumUploader = forwardRef<UploaderActions, UploaderProps>(\n  ({onUploadStart, onCancel, onCreate}, ref) => {\n    const userArtist = usePrimaryArtistForCurrentUser();\n    const now = useCurrentDateTime();\n    const [isVisible, setIsVisible] = useState(false);\n    const form = useForm<CreateAlbumPayload>({\n      defaultValues: {\n        tracks: [],\n        artists: userArtist ? [userArtist] : [],\n        release_date: now.toAbsoluteString(),\n      },\n    });\n    const tracks = form.watch('tracks') || [];\n\n    const abortUpload = useFileUploadStore(s => s.abortUpload);\n    const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\n    const {openFilePicker, uploadTracks, validateUploads} = useTrackUploader({\n      onUploadStart: data => {\n        setIsVisible(true);\n        form.setValue('tracks', [...form.getValues('tracks'), data]);\n        onUploadStart();\n      },\n      onMetadataChange: (file, newData) => {\n        hydrateAlbumForm(form, newData);\n        form.setValue(\n          'tracks',\n          form.getValues('tracks').map(track => {\n            return track.uploadId === file.id\n              ? mergeTrackFormValues(newData, track)\n              : track;\n          }),\n        );\n      },\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        openFilePicker,\n        uploadTracks,\n        validateUploads,\n      }),\n      [openFilePicker, uploadTracks, validateUploads],\n    );\n\n    const createAlbum = useCreateAlbum(form);\n    return isVisible ? (\n      <Form\n        className=\"mb-30 rounded border bg-paper p-14 md:p-24\"\n        form={form}\n        onSubmit={newValues =>\n          createAlbum.mutate(newValues, {\n            onSuccess: response => {\n              setIsVisible(false);\n              form.reset();\n              onCreate(response.album);\n            },\n          })\n        }\n      >\n        <AlbumForm showExternalIdFields={false} />\n        <div className=\"mt-24\">\n          <Button\n            variant=\"text\"\n            onClick={() => {\n              tracks.forEach(track => {\n                abortUpload(track.uploadId);\n              });\n              form.reset();\n              setIsVisible(false);\n              onCancel();\n            }}\n            className=\"mr-10\"\n          >\n            <Trans message=\"Cancel\" />\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"flat\"\n            color=\"primary\"\n            disabled={uploadIsInProgress || createAlbum.isPending}\n          >\n            <Trans message=\"Save\" />\n          </Button>\n        </div>\n      </Form>\n    ) : null;\n  },\n);\n","import {\n  forwardRef,\n  memo,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {\n  TrackUploadPayload,\n  useTrackUploader,\n} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {mergeTrackFormValues} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {\n  UploaderActions,\n  UploaderProps,\n} from '@app/web-player/backstage/upload-page/upload-page';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useForm} from 'react-hook-form';\nimport {useCreateTrack} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\nimport {TrackUploadProgress} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport {Form} from '@ui/forms/form';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\n\nexport const TracksUploader = forwardRef<UploaderActions, UploaderProps>(\n  ({onUploadStart, onCancel, onCreate}, ref) => {\n    const userArtist = usePrimaryArtistForCurrentUser();\n    const abortUpload = useFileUploadStore(s => s.abortUpload);\n    const [tracks, setTracks] = useState<TrackUploadPayload[]>([]);\n\n    const {openFilePicker, uploadTracks, validateUploads} = useTrackUploader({\n      onUploadStart: data => {\n        setTracks(prev => {\n          if (userArtist) {\n            return [...prev, {...data, artists: [userArtist]}];\n          }\n          return [...prev, data];\n        });\n        onUploadStart();\n      },\n      onMetadataChange: (file, newData) => {\n        setTracks(allTracks => {\n          return allTracks.map(track => {\n            return track.uploadId === file.id\n              ? mergeTrackFormValues(newData, track)\n              : track;\n          });\n        });\n      },\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        openFilePicker,\n        uploadTracks,\n        validateUploads,\n      }),\n      [openFilePicker, uploadTracks, validateUploads],\n    );\n\n    return (\n      <div className=\"w-full\">\n        {tracks.map(track => (\n          <TrackUploadItem\n            key={track.uploadId}\n            track={track}\n            onCreate={createdTrack => {\n              // hide upload form for this track\n              setTracks(prev =>\n                prev.filter(t => t.uploadId !== track.uploadId),\n              );\n              onCreate(createdTrack);\n            }}\n            onRemove={() => {\n              setTracks(prev => {\n                const newTracks = prev.filter(\n                  t => t.uploadId !== track.uploadId,\n                );\n                // only invoke \"onCancel\" if every uploaded track has been removed, so upload mode can be unlocked\n                if (!newTracks.length) {\n                  onCancel();\n                }\n                return newTracks;\n              });\n              abortUpload(track.uploadId);\n            }}\n          />\n        ))}\n      </div>\n    );\n  },\n);\n\ninterface TrackUploadItemProps {\n  track: TrackUploadPayload;\n  onRemove: () => void;\n  onCreate: (track: Track) => void;\n}\nconst TrackUploadItem = memo(\n  ({track, onRemove, onCreate}: TrackUploadItemProps) => {\n    const form = useForm<TrackUploadPayload>({\n      defaultValues: track,\n    });\n    const createTrack = useCreateTrack(form);\n    const activeUpload = useFileUploadStore(s =>\n      s.fileUploads.get(track.uploadId),\n    );\n    const {isUploading, status} = useTrackUpload(track.uploadId);\n\n    useEffect(() => {\n      form.reset(track);\n    }, [track, form]);\n\n    const uploadProgress =\n      isUploading && activeUpload ? (\n        <TrackUploadProgress fileUpload={activeUpload} status={status} />\n      ) : null;\n\n    return (\n      <Form\n        form={form}\n        onSubmit={values => {\n          createTrack.mutate(values, {\n            onSuccess: response => onCreate(response.track),\n          });\n        }}\n        className=\"mb-30 rounded border bg-paper p-14 md:p-24\"\n      >\n        <TrackForm uploadButton={uploadProgress} showExternalIdFields={false} />\n        <Button variant=\"text\" onClick={() => onRemove()} className=\"mr-10\">\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createTrack.isPending || !form.watch('src')}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </Form>\n    );\n  },\n);\n","export default \"__VITE_ASSET__19ef062e__\"","import {Track} from '@app/web-player/tracks/track';\nimport {Album, ALBUM_MODEL} from '@app/web-player/albums/album';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {ChipList} from '@ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\nimport {Trans} from '@ui/i18n/trans';\nimport {Link} from 'react-router-dom';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\nimport {LinkStyle} from '@ui/buttons/external-link';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport clsx from 'clsx';\nimport albumBorderImage from './album-border.png';\nimport {ShareMediaButtons} from '@app/web-player/sharing/share-media-buttons';\n\ninterface UploadedMediaPreviewProps {\n  media: Track | Album;\n}\nexport function UploadedMediaPreview({media}: UploadedMediaPreviewProps) {\n  const isAlbum = media.model_type === ALBUM_MODEL;\n  const absoluteLink = isAlbum\n    ? getAlbumLink(media, {absolute: true})\n    : getTrackLink(media, {absolute: true});\n\n  return (\n    <div className=\"mx-auto my-20 flex w-780 max-w-full items-center gap-28 rounded border bg-paper p-20\">\n      <div className={clsx(isAlbum && 'relative isolate mx-18 my-14')}>\n        {isAlbum ? (\n          <AlbumImage\n            album={media}\n            className=\"relative z-20 flex-shrink-0 rounded\"\n            size=\"w-132 h-132\"\n          />\n        ) : (\n          <TrackImage\n            track={media}\n            className=\"relative z-20 flex-shrink-0 rounded\"\n            size=\"w-132 h-132\"\n          />\n        )}\n        {isAlbum && (\n          <img\n            className=\"absolute -left-14 -top-14 z-10 block h-160 w-160 max-w-160\"\n            src={albumBorderImage}\n            alt=\"\"\n          />\n        )}\n      </div>\n      <div className=\"flex-auto\">\n        <div className=\"text-base font-bold\">{media.name}</div>\n        <div className=\"mb-14 text-sm text-muted\">\n          <ArtistLinks artists={media.artists} />\n        </div>\n        {media.genres?.length ? (\n          <ChipList selectable={false} size=\"sm\" className=\"mb-14\">\n            {media.genres?.map(genre => {\n              return (\n                <Chip key={genre.id}>{genre.display_name || genre.name}</Chip>\n              );\n            })}\n          </ChipList>\n        ) : null}\n        <div className=\"text-sm\">\n          <Trans\n            message=\"Upload complete. <a>Go to your track</a>\"\n            values={{\n              a: parts => (\n                <Link\n                  className={LinkStyle}\n                  to={isAlbum ? getAlbumLink(media) : getTrackLink(media)}\n                >\n                  {parts}\n                </Link>\n              ),\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"max-w-300 ml-auto flex-auto\">\n        <div className=\"text-sm text-muted\">\n          <Trans message=\"Share your new track\" />\n          <ShareMediaButtons\n            name={media.name}\n            image={media.image}\n            link={absoluteLink}\n          />\n          <TextField\n            value={absoluteLink}\n            readOnly\n            className=\"mt-24 w-full\"\n            size=\"sm\"\n            onClick={e => {\n              (e.target as HTMLInputElement).select();\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '@ui/i18n/trans';\n\ninterface DropTargetMaskProps {\n  isVisible: boolean;\n}\nexport function DropTargetMask({isVisible}: DropTargetMaskProps) {\n  const mask = (\n    <m.div\n      key=\"dragTargetMask\"\n      {...opacityAnimation}\n      transition={{duration: 0.3}}\n      className=\"pointer-events-none absolute inset-0 min-h-full w-full border-2 border-dashed border-primary bg-primary-light/30\"\n    >\n      <m.div\n        initial={{y: '100%', opacity: 0}}\n        animate={{y: '-10px', opacity: 1}}\n        exit={{y: '100%', opacity: 0}}\n        className=\"fixed bottom-0 left-0 right-0 mx-auto max-w-max rounded bg-primary p-10 text-on-primary\"\n      >\n        <Trans message=\"Drop your files anywhere on the page to upload\" />\n      </m.div>\n    </m.div>\n  );\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useAuth} from '@common/auth/use-auth';\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\n\ninterface Response extends BackendResponse {\n  minutesLeft: number | null;\n}\n\nexport function resetMinutesLimitQuery() {\n  const {user} = getBootstrapData();\n  if (user?.id) {\n    queryClient.resetQueries({queryKey: ['minutesLimit', user.id]});\n  }\n}\n\nexport function useUserMinutesLimit() {\n  const {user} = useAuth();\n  const userId = user?.id!;\n  return useQuery({\n    queryKey: ['minutesLimit', userId],\n    queryFn: () => fetchLimit(userId),\n    enabled: userId != null,\n  });\n}\n\nfunction fetchLimit(userId: number): Promise<Response> {\n  return apiClient\n    .get(`users/${userId}/minutes-left`)\n    .then(response => response.data);\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {Switch} from '@ui/forms/toggle/switch';\nimport {ComponentPropsWithoutRef, ReactNode, useRef, useState} from 'react';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {Link} from 'react-router-dom';\nimport {LinkStyle} from '@ui/buttons/external-link';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumUploader} from '@app/web-player/backstage/upload-page/album-uploader';\nimport {TracksUploader} from '@app/web-player/backstage/upload-page/tracks-uploader';\nimport {UploadedMediaPreview} from '@app/web-player/backstage/upload-page/uploaded-media-preview';\nimport {\n  NativeFileDraggable,\n  useDroppable,\n} from '@ui/interactions/dnd/use-droppable';\nimport {DropTargetMask} from '@app/web-player/backstage/upload-page/drop-tarket-mask';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {\n  resetMinutesLimitQuery,\n  useUserMinutesLimit,\n} from '@app/web-player/backstage/upload-page/use-user-minutes-limit';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ntype UploadMode = 'album' | 'tracks';\n\nexport interface UploaderProps {\n  onUploadStart: () => void;\n  onCancel: () => void;\n  onCreate: (item: Track | Album) => void;\n}\n\nexport type UploaderActions = ReturnType<typeof useTrackUploader>;\n\ninterface Props {\n  backstageLayout?: boolean;\n}\nexport function UploadPage({backstageLayout = false}: Props) {\n  return (\n    <FileUploadProvider>\n      <Content backstageLayout={backstageLayout} />\n    </FileUploadProvider>\n  );\n}\n\nfunction Content({backstageLayout}: Props) {\n  const [uploadMode, setUploadMode] = useState<UploadMode>('tracks');\n  const [modeIsLocked, setModeIsLocked] = useState(false);\n\n  const uploaderRef = useRef<UploaderActions>(null);\n  const Uploader = uploadMode === 'tracks' ? TracksUploader : AlbumUploader;\n\n  const [createdItems, setCreatedItems] = useState<(Album | Track)[]>([]);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const {droppableProps} = useDroppable({\n    id: 'uploadPageRoot',\n    ref,\n    types: ['nativeFile'],\n    onDragEnter: () => setIsDragOver(true),\n    onDragLeave: () => setIsDragOver(false),\n    onDrop: async draggable => {\n      if (draggable.type === 'nativeFile') {\n        const files = await (draggable as NativeFileDraggable).getData();\n        const validFiles = uploaderRef.current?.validateUploads(files);\n        if (validFiles?.length) {\n          uploaderRef.current?.uploadTracks(validFiles);\n        }\n      }\n    },\n  });\n\n  const Wrapper = backstageLayout ? BackstageLayout : DefaultWrapper;\n\n  return (\n    <Wrapper {...droppableProps}>\n      {!modeIsLocked && (\n        <UploadPanel\n          onUpload={() => uploaderRef.current?.openFilePicker()}\n          uploadMode={uploadMode}\n          onUploadModeChange={setUploadMode}\n        />\n      )}\n      {createdItems.map(item => (\n        <UploadedMediaPreview key={item.id} media={item} />\n      ))}\n      <Uploader\n        ref={uploaderRef}\n        onUploadStart={() => setModeIsLocked(true)}\n        onCreate={item => {\n          setCreatedItems(prev => [...prev, item]);\n          resetMinutesLimitQuery();\n        }}\n        onCancel={() => {\n          setModeIsLocked(false);\n        }}\n      />\n      <DropTargetMask isVisible={isDragOver} />\n    </Wrapper>\n  );\n}\n\ninterface UploadPanelProps {\n  onUpload: () => void;\n  uploadMode: UploadMode;\n  onUploadModeChange: (newMode: UploadMode) => void;\n}\nfunction UploadPanel({\n  onUpload,\n  uploadMode,\n  onUploadModeChange,\n}: UploadPanelProps) {\n  const {data} = useUserMinutesLimit();\n  return (\n    <div className=\"pt-40\">\n      <div className=\"mx-auto flex max-w-580 flex-col items-center rounded border bg-paper p-20 md:p-48\">\n        <h1 className=\"text-base md:text-[22px] md:font-light\">\n          <Trans message=\"Drag and drop your tracks, videos & albums here.\" />\n        </h1>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          className=\"mt-20 w-min\"\n          onClick={() => onUpload()}\n        >\n          <Trans message=\"Or choose files to upload\" />\n        </Button>\n        <div className=\"mt-20 border-t pt-20\">\n          <Switch\n            checked={uploadMode === 'album'}\n            onChange={e =>\n              onUploadModeChange(e.target.checked ? 'album' : 'tracks')\n            }\n          >\n            <Trans message=\"Make an album when multiple files are selected\" />\n          </Switch>\n        </div>\n      </div>\n      <div className=\"mt-20 min-h-20 text-center text-sm text-muted\">\n        {data?.minutesLeft != null && (\n          <Trans\n            message=\"You have :count minutes left. Try <a>Pro accounts</a> to get more time and access to advanced features.\"\n            values={{\n              count: data.minutesLeft,\n              a: parts => (\n                <Link className={LinkStyle} to=\"/pricing\">\n                  {parts}\n                </Link>\n              ),\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface DefaultWrapperProps extends ComponentPropsWithoutRef<'div'> {\n  children: ReactNode;\n}\nfunction DefaultWrapper({children, ...domProps}: DefaultWrapperProps) {\n  return (\n    <div {...domProps} className=\"relative min-h-full\">\n      <div className=\"container mx-auto p-14 md:p-24\">{children}</div>\n    </div>\n  );\n}\n\nexport function BackstageUploadPage() {\n  return <UploadPage backstageLayout />;\n}\n","import {useForm} from 'react-hook-form';\nimport React, {useEffect} from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\nimport {\n  CreateAlbumPayload,\n  useCreateAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {useLocation, useSearchParams} from 'react-router-dom';\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\nimport {\n  FileUploadProvider,\n  useFileUploadStore,\n} from '@common/uploads/uploader/file-upload-provider';\nimport {useNormalizedModel} from '@common/ui/normalized-model/use-normalized-model';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function CreateAlbumPage({wrapInContainer}: Props) {\n  return (\n    <FileUploadProvider>\n      <PageContent wrapInContainer={wrapInContainer} />\n    </FileUploadProvider>\n  );\n}\n\nfunction PageContent({wrapInContainer}: Props) {\n  const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\n  const now = useCurrentDateTime();\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  const [searchParams] = useSearchParams();\n  const {data} = useNormalizedModel(\n    `normalized-models/artist/${searchParams.get('artistId')}`,\n    undefined,\n    {enabled: !!searchParams.get('artistId')},\n  );\n  const artist = data?.model;\n  const form = useForm<CreateAlbumPayload>({\n    defaultValues: {\n      release_date: now.toAbsoluteString(),\n    },\n  });\n  const createAlbum = useCreateAlbum(form);\n\n  useEffect(() => {\n    if (artist) {\n      form.reset({\n        artists: [artist],\n      });\n    }\n  }, [artist, form]);\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createAlbum.mutate(values, {\n          onSuccess: response => {\n            if (pathname.includes('admin')) {\n              if (artist) {\n                navigate(`/admin/artists/${artist.id}/edit`);\n              } else {\n                navigate('/admin/albums');\n              }\n            } else {\n              navigate(getAlbumLink(response.album));\n            }\n          },\n        });\n      }}\n      title={<Trans message=\"Add new album\" />}\n      isLoading={createAlbum.isPending || uploadIsInProgress}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <AlbumForm showExternalIdFields />\n    </CrupdateResourceLayout>\n  );\n}\n\nexport function BackstageCreateAlbumPage() {\n  return (\n    <BackstageLayout>\n      <CreateAlbumPage wrapInContainer={false} />\n    </BackstageLayout>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useParams} from 'react-router-dom';\nimport {BackstageRequest} from '@app/web-player/backstage/backstage-request';\n\ninterface Response extends BackendResponse {\n  request: BackstageRequest;\n}\n\nexport function useBackstageRequest() {\n  const {requestId} = useParams();\n  return useQuery({\n    queryKey: ['backstage-request', +requestId!],\n    queryFn: () => fetchBackstageRequest(requestId!),\n  });\n}\n\nfunction fetchBackstageRequest(trackId: number | string) {\n  return apiClient\n    .get<Response>(`backstage-request/${trackId}`)\n    .then(response => response.data);\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DocumentScannerIcon = createSvgIcon(\n  <path d=\"M7 3H4v3H2V1h5v2zm15 3V1h-5v2h3v3h2zM7 21H4v-3H2v5h5v-2zm13-3v3h-3v2h5v-5h-2zM17 6H7v12h10V6zm2 12c0 1.1-.9 2-2 2H7c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2v12zM15 8H9v2h6V8zm0 3H9v2h6v-2zm0 3H9v2h6v-2z\" />\n, 'DocumentScannerOutlined');\n","import {useFormContext} from 'react-hook-form';\nimport React from 'react';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport musicImage from '@app/admin/tracks-datatable-page/music.svg';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {Link} from 'react-router-dom';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {Table} from '@common/ui/tables/table';\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\nimport {UpdateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-update-artist';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {useDeleteAlbum} from '@app/web-player/albums/requests/use-delete-album';\nimport {InfoDialogTriggerIcon} from '@ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon';\nimport {SvgImage} from '@ui/images/svg-image';\n\nconst Columns: ColumnConfig<Album>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Name\" />,\n    visibleInMode: 'all',\n    width: 'flex-3',\n    body: album => (\n      <div className=\"flex items-center gap-12\">\n        <AlbumImage\n          album={album}\n          className=\"flex-shrink-0\"\n          size=\"w-34 h-34 rounded\"\n        />\n        <AlbumLink album={album} target=\"_blank\" />\n      </div>\n    ),\n  },\n  {\n    key: 'release_date',\n    allowsSorting: true,\n    header: () => <Trans message=\"Release date\" />,\n    body: album =>\n      album.release_date ? <FormattedDate date={album.release_date} /> : null,\n  },\n  {\n    key: 'track_count',\n    allowsSorting: false,\n    header: () => <Trans message=\"Track count\" />,\n    body: album =>\n      album.tracks_count ? (\n        <FormattedNumber value={album.tracks_count} />\n      ) : null,\n  },\n  {\n    key: 'plays',\n    allowsSorting: true,\n    header: () => <Trans message=\"Plays\" />,\n    body: album =>\n      album.plays ? <FormattedNumber value={album.plays} /> : null,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    width: 'w-84 flex-shrink-0',\n    visibleInMode: 'all',\n    hideHeader: true,\n    align: 'end',\n    body: album => <RowActions album={album} />,\n  },\n];\n\ninterface Props {\n  albums?: Album[];\n}\nexport function ArtistAlbumsTable({albums = []}: Props) {\n  const {watch} = useFormContext<UpdateArtistPayload>();\n  const artistId = watch('id');\n  const {data, sortDescriptor, onSortChange} = useSortableTableData(albums);\n  return (\n    <div>\n      <div className=\"my-24\">\n        <div className=\"flex items-center gap-12\">\n          <h2 className=\"text-xl font-semibold\">\n            <Trans message=\"Albums\" />\n          </h2>\n          <Button\n            variant=\"outline\"\n            color=\"primary\"\n            size=\"xs\"\n            className=\"ml-auto\"\n            startIcon={<AddIcon />}\n            elementType={artistId ? Link : undefined}\n            to={`../../../albums/new?artistId=${artistId}`}\n            relative=\"path\"\n            disabled={!artistId}\n          >\n            <Trans message=\"Add album\" />\n          </Button>\n        </div>\n\n        {!artistId && (\n          <div className=\"flex items-center gap-6 text-sm\">\n            <InfoDialogTriggerIcon\n              viewBox=\"0 0 16 16\"\n              size=\"xs\"\n              className=\"text-muted\"\n            />\n            <Trans message=\"Save changes to enable album creation.\" />\n          </div>\n        )}\n      </div>\n\n      <Table\n        columns={Columns}\n        data={albums}\n        sortDescriptor={sortDescriptor}\n        onSortChange={onSortChange}\n        enableSelection={false}\n      />\n\n      {!data.length ? (\n        <IllustratedMessage\n          className=\"mt-40\"\n          image={<SvgImage src={musicImage} />}\n          title={<Trans message=\"This artist does not have any albums yet\" />}\n        />\n      ) : null}\n    </div>\n  );\n}\n\ninterface RowActionsProps {\n  album: Album;\n}\nfunction RowActions({album}: RowActionsProps) {\n  const deleteAlbum = useDeleteAlbum();\n  return (\n    <div className=\"text-muted\">\n      <Link to={`../../../albums/${album.id}/edit`} relative=\"path\">\n        <IconButton size=\"md\">\n          <EditIcon />\n        </IconButton>\n      </Link>\n      <DialogTrigger\n        type=\"modal\"\n        onClose={isConfirmed => {\n          if (isConfirmed) {\n            deleteAlbum.mutate({albumId: album.id});\n          }\n        }}\n      >\n        <IconButton size=\"md\" disabled={deleteAlbum.isPending}>\n          <CloseIcon />\n        </IconButton>\n        <ConfirmationDialog\n          isDanger\n          title={<Trans message=\"Delete album\" />}\n          body={<Trans message=\"Are you sure you want to delete this album?\" />}\n          confirm={<Trans message=\"Delete\" />}\n        />\n      </DialogTrigger>\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {FormSwitch} from '@ui/forms/toggle/switch';\nimport {ArtistAlbumsTable} from '@app/admin/artist-datatable-page/artist-form/artist-albums-table';\nimport {Album} from '@app/web-player/albums/album';\nimport {TabList} from '@ui/tabs/tab-list';\nimport {Tab} from '@ui/tabs/tab';\nimport {TabPanel, TabPanels} from '@ui/tabs/tab-panels';\nimport {Tabs} from '@ui/tabs/tabs';\nimport {useFieldArray} from 'react-hook-form';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {CreateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-create-artist';\nimport {ProfileLinksForm} from '@app/admin/artist-datatable-page/artist-form/profile-links-form';\n\ninterface Props {\n  albums?: Album[];\n  showExternalFields?: boolean;\n}\nexport function CrupdateArtistForm({albums, showExternalFields}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <FileUploadProvider>\n      <div className=\"gap-24 md:flex\">\n        <div className=\"flex-shrink-0\">\n          <FormImageSelector\n            name=\"image_small\"\n            diskPrefix=\"artist_images\"\n            label={isMobile ? <Trans message=\"Image\" /> : null}\n            variant={isMobile ? 'input' : 'square'}\n            previewSize={isMobile ? undefined : 'w-full md:w-224 aspect-square'}\n            stretchPreview\n          />\n          {showExternalFields && (\n            <FormSwitch name=\"verified\" className=\"mt-14\">\n              <Trans message=\"Verified\" />\n            </FormSwitch>\n          )}\n        </div>\n        <div className=\"mt-24 flex-auto md:mt-0\">\n          <Tabs isLazy>\n            <TabList>\n              <Tab>\n                <Trans message=\"Details\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Links\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Biography\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Images\" />\n              </Tab>\n            </TabList>\n            <TabPanels className=\"pt-20\">\n              <TabPanel>\n                <DetailsPanel showExternalFields={showExternalFields} />\n              </TabPanel>\n              <TabPanel>\n                <ProfileLinksForm />\n              </TabPanel>\n              <TabPanel>\n                <BiographyPanel />\n              </TabPanel>\n              <TabPanel>\n                <ImagesPanel />\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </div>\n      </div>\n      <ArtistAlbumsTable albums={albums} />\n    </FileUploadProvider>\n  );\n}\n\ninterface DetailsPanelProps {\n  showExternalFields?: boolean;\n}\nfunction DetailsPanel({showExternalFields}: DetailsPanelProps) {\n  const {trans} = useTrans();\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"name\"\n        label={<Trans message=\"Name\" />}\n        className=\"mb-24\"\n        required\n        autoFocus\n        disabled={!showExternalFields}\n      />\n      <FormNormalizedModelChipField\n        label={<Trans message=\"Genres\" />}\n        placeholder={trans(message('+Add genre'))}\n        model={GENRE_MODEL}\n        name=\"genres\"\n        allowCustomValue\n        className=\"mb-24\"\n      />\n      {showExternalFields && <SpotifyIdField />}\n    </Fragment>\n  );\n}\n\nfunction BiographyPanel() {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"profile.country\"\n        label={<Trans message=\"Country\" />}\n        className=\"mb-24\"\n      />\n      <FormTextField\n        name=\"profile.city\"\n        label={<Trans message=\"City\" />}\n        className=\"mb-24\"\n      />\n      <FormTextField\n        inputElementType=\"textarea\"\n        rows={5}\n        name=\"profile.description\"\n        label={<Trans message=\"Description\" />}\n        className=\"mb-24\"\n      />\n    </Fragment>\n  );\n}\n\nfunction ImagesPanel() {\n  const {fields, append, remove} = useFieldArray<CreateArtistPayload>({\n    name: 'profile_images',\n  });\n\n  return (\n    <div>\n      <div className=\"mb-24 flex flex-wrap gap-12\">\n        {fields.map((field, index) => {\n          return (\n            <FormImageSelector\n              key={field.id}\n              name={`profile_images.${index}.url`}\n              diskPrefix=\"artist_images\"\n              variant=\"square\"\n              previewSize=\"w-160 h-160\"\n              stretchPreview\n              showRemoveButton\n              onChange={value => {\n                if (!value) {\n                  remove(index);\n                }\n              }}\n            />\n          );\n        })}\n      </div>\n      <Button\n        variant=\"outline\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        onClick={() => {\n          append({url: ''});\n        }}\n      >\n        <Trans message=\"Add another image\" />\n      </Button>\n    </div>\n  );\n}\n\nfunction SpotifyIdField() {\n  const {spotify_is_setup} = useSettings();\n  if (!spotify_is_setup) {\n    return null;\n  }\n  return (\n    <FormTextField\n      name=\"spotify_id\"\n      label={<Trans message=\"Spotify ID\" />}\n      className=\"mb-24\"\n      minLength={22}\n      maxLength={22}\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {CreateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-create-artist';\nimport {useLocation} from 'react-router-dom';\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\n\ninterface Response extends BackendResponse {\n  artist: Artist;\n}\n\nexport interface UpdateArtistPayload extends CreateArtistPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `artists/${id}`;\n\nexport function useUpdateArtist(form: UseFormReturn<UpdateArtistPayload>) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  return useMutation({\n    mutationFn: (payload: UpdateArtistPayload) => updateAlbum(payload),\n    onSuccess: response => {\n      toast(trans(message('Artist updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('artists'),\n      });\n      if (pathname.includes('admin')) {\n        navigate('/admin/artists');\n      } else {\n        navigate(getArtistLink(response.artist));\n      }\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateAlbum({id, ...payload}: UpdateArtistPayload): Promise<Response> {\n  return apiClient.put(Endpoint(id), payload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  useArtist,\n  UseArtistResponse,\n} from '@app/web-player/artists/requests/use-artist';\nimport {\n  UpdateArtistPayload,\n  useUpdateArtist,\n} from '@app/admin/artist-datatable-page/requests/use-update-artist';\nimport {CrupdateArtistForm} from '@app/admin/artist-datatable-page/artist-form/crupdate-artist-form';\nimport {useArtistPermissions} from '@app/web-player/artists/use-artist-permissions';\nimport {Navigate} from 'react-router-dom';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ninterface Props {\n  wrapInContainer?: boolean;\n  showExternalFields?: boolean;\n}\nexport function UpdateArtistPage({wrapInContainer, showExternalFields}: Props) {\n  const query = useArtist({\n    loader: 'editArtistPage',\n  });\n\n  if (query.data) {\n    return (\n      <PageContent\n        response={query.data}\n        wrapInContainer={wrapInContainer}\n        showExternalFields={showExternalFields}\n      />\n    );\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n\ninterface PageContentProps {\n  response: UseArtistResponse;\n  wrapInContainer?: boolean;\n  showExternalFields?: boolean;\n}\nfunction PageContent({\n  response,\n  wrapInContainer,\n  showExternalFields,\n}: PageContentProps) {\n  const {canEdit} = useArtistPermissions(response.artist);\n  const form = useForm<UpdateArtistPayload>({\n    defaultValues: {\n      id: response.artist.id,\n      name: response.artist.name,\n      verified: response.artist.verified,\n      spotify_id: response.artist.spotify_id,\n      genres: response.artist.genres,\n      image_small: response.artist.image_small,\n      links: response.artist.links,\n      profile: response.artist.profile,\n      profile_images: response.artist.profile_images,\n    },\n  });\n  const updateArtist = useUpdateArtist(form);\n\n  if (!canEdit) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateArtist.mutate(values);\n      }}\n      title={\n        <Trans\n          message=\"Edit “:name“ artist\"\n          values={{name: response.artist.name}}\n        />\n      }\n      isLoading={updateArtist.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <CrupdateArtistForm\n        albums={response.albums?.data}\n        showExternalFields={showExternalFields}\n      />\n    </CrupdateResourceLayout>\n  );\n}\n\nexport function BackstageUpdateArtistPage() {\n  return (\n    <BackstageLayout>\n      <UpdateArtistPage wrapInContainer={false} showExternalFields={false} />\n    </BackstageLayout>\n  );\n}\n\nexport function UpdateArtistPageWithExternalFields() {\n  return <UpdateArtistPage showExternalFields />;\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {apiClient} from '@common/http/query-client';\nimport {\n  DatasetItem,\n  LocationDatasetItem,\n  ReportMetric,\n} from '@common/admin/analytics/report-metric';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {User} from '@ui/types/user';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {Album} from '@app/web-player/albums/album';\n\nconst endpoint = 'reports/insights';\n\nexport interface TopModelDatasetItem extends DatasetItem {\n  model: Artist | Album | Track | User;\n}\n\nexport interface FetchInsightsReportResponse extends BackendResponse {\n  report: {\n    totalClicks: number;\n    plays: ReportMetric;\n    browsers: ReportMetric;\n    locations: ReportMetric<LocationDatasetItem>;\n    devices: ReportMetric;\n    platforms: ReportMetric;\n    tracks: ReportMetric<TopModelDatasetItem>;\n    artists: ReportMetric<TopModelDatasetItem>;\n    albums: ReportMetric<TopModelDatasetItem>;\n    users: ReportMetric<TopModelDatasetItem>;\n  };\n}\n\nexport type InsightsReportMetric =\n  | 'plays'\n  | 'devices'\n  | 'browsers'\n  | 'platforms'\n  | 'locations'\n  | 'tracks'\n  | 'artists'\n  | 'albums'\n  | 'users';\n\ninterface Payload {\n  dateRange: DateRangeValue;\n  model?: string;\n  metrics?: InsightsReportMetric[];\n}\n\ninterface Options {\n  isEnabled: boolean;\n}\n\nexport function useInsightsReport(payload: Payload, options: Options) {\n  return useQuery({\n    queryKey: [endpoint, payload],\n    queryFn: () => fetchReport(endpoint, payload),\n    placeholderData: options.isEnabled ? keepPreviousData : undefined,\n    enabled: options.isEnabled,\n  });\n}\n\nfunction fetchReport<\n  T extends FetchInsightsReportResponse = FetchInsightsReportResponse,\n>(endpoint: string, payload: Payload): Promise<T> {\n  const params: Record<string, any> = {\n    model: payload.model,\n    metrics: payload.metrics?.join(','),\n  };\n  params.startDate = payload.dateRange.start.toAbsoluteString();\n  params.endDate = payload.dateRange.end.toAbsoluteString();\n  params.timezone = payload.dateRange.start.timeZone;\n\n  return apiClient.get(endpoint, {params}).then(response => response.data);\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {ChartLayout, ChartLayoutProps} from '@common/charts/chart-layout';\nimport React, {Fragment, ReactElement} from 'react';\nimport {ReportMetric} from '@common/admin/analytics/report-metric';\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\nimport {TopModelDatasetItem} from '@app/admin/reports/requests/use-insights-report';\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\nimport {InfoIcon} from '@ui/icons/material/Info';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {Link, useLocation} from 'react-router-dom';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {TrackLink} from '@app/web-player/tracks/track-link';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\nimport {UserAvatar} from '@common/auth/user-avatar';\n\ninterface Props extends Partial<ChartLayoutProps> {\n  data?: ReportMetric<TopModelDatasetItem>;\n  title: ReactElement;\n}\nexport function TopModelsChartLayout({data, isLoading, ...layoutProps}: Props) {\n  const dataItems = data?.datasets[0].data || [];\n\n  return (\n    <ChartLayout\n      {...layoutProps}\n      className=\"w-1/2 min-w-500 md:min-w-0\"\n      contentIsFlex={isLoading}\n      contentClassName=\"max-h-[370px] overflow-y-auto compact-scrollbar\"\n    >\n      {isLoading && <ChartLoadingIndicator />}\n      {dataItems.map(item => (\n        <div\n          key={item.model.id}\n          className=\"mb-20 flex items-center justify-between gap-24 text-sm\"\n        >\n          <div className=\"flex items-center gap-8\">\n            <Image\n              model={item.model}\n              size=\"w-42 h-42\"\n              className=\"flex-shrink-0 rounded\"\n            />\n            <div>\n              <div className=\"text-sm\">\n                <Name model={item.model} />\n              </div>\n              <div className=\"text-xs text-muted\">\n                <Description model={item.model} />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-shrink-0 items-center gap-4\">\n            <PlayArrowFilledIcon className=\"text-muted\" size=\"sm\" />\n            <Trans\n              message=\":count plays\"\n              values={{count: <FormattedNumber value={item.value} />}}\n            />\n          </div>\n        </div>\n      ))}\n      {!isLoading && !dataItems.length ? (\n        <div className=\"flex items-center gap-8 text-muted\">\n          <InfoIcon size=\"sm\" />\n          <Trans message=\"No plays in selected timeframe.\" />\n        </div>\n      ) : null}\n    </ChartLayout>\n  );\n}\n\ninterface ImageProps {\n  model: TopModelDatasetItem['model'];\n  size: string;\n  className: string;\n}\nfunction Image({model, size, className}: ImageProps) {\n  const {pathname} = useLocation();\n  const inAdmin = pathname.includes('/admin');\n  const link = inAdmin\n    ? `/admin/${model.model_type}s/${model.id}/insights`\n    : `/backstage/${model.model_type}s/${model.id}/insights`;\n\n  switch (model.model_type) {\n    case 'artist':\n      return (\n        <Link to={link}>\n          <SmallArtistImage artist={model} size={size} className={className} />\n        </Link>\n      );\n    case 'album':\n      return (\n        <Link to={link}>\n          <AlbumImage album={model} size={size} className={className} />\n        </Link>\n      );\n    case 'track':\n      return (\n        <Link to={link}>\n          <TrackImage track={model} size={size} className={className} />\n        </Link>\n      );\n    case 'user':\n      // there's no separate insights page for user\n      return <UserAvatar user={model} size={size} className={className} />;\n  }\n}\n\ninterface NameProps {\n  model: TopModelDatasetItem['model'];\n}\nfunction Name({model}: NameProps) {\n  switch (model.model_type) {\n    case 'artist':\n      return <ArtistLink artist={model} target=\"_blank\" />;\n    case 'album':\n      return <AlbumLink album={model} target=\"_blank\" />;\n    case 'track':\n      return <TrackLink track={model} target=\"_blank\" />;\n    case 'user':\n      return model.id ? (\n        <UserProfileLink user={model} target=\"_blank\" />\n      ) : (\n        <Fragment>{model.name}</Fragment>\n      );\n  }\n}\n\ninterface DescriptionProps {\n  model: TopModelDatasetItem['model'];\n}\nfunction Description({model}: DescriptionProps) {\n  switch (model.model_type) {\n    case 'artist':\n    case 'user':\n      return null;\n    case 'album':\n    case 'track':\n      return <ArtistLinks artists={model.artists} target=\"_blank\" />;\n  }\n}\n","import React, {\n  cloneElement,\n  Fragment,\n  ReactElement,\n  useCallback,\n  useRef,\n  useState,\n} from 'react';\nimport {LineChart} from '@common/charts/line-chart';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {PolarAreaChart} from '@common/charts/polar-area-chart';\nimport {GeoChart} from '@common/admin/analytics/geo-chart/geo-chart';\nimport {BaseChartProps} from '@common/charts/base-chart';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {\n  FetchInsightsReportResponse,\n  InsightsReportMetric,\n  useInsightsReport,\n} from '@app/admin/reports/requests/use-insights-report';\nimport {TopModelsChartLayout} from '@app/admin/reports/top-models-chart-layout';\n\nexport interface InsightsReportChartsProps {\n  showTracks?: boolean;\n  showArtistsAndAlbums?: boolean;\n  dateRange?: DateRangeValue;\n  model?: string;\n}\nexport function InsightsReportCharts(props: InsightsReportChartsProps) {\n  const colGap = 'gap-12 md:gap-24 mb-12 md:mb-24';\n  const rowClassName = `flex flex-col lg:flex-row lg:items-center overflow-x-auto ${colGap}`;\n\n  // will be set via \"cloneElement\"\n  const model = props.model as string;\n  const dateRange = props.dateRange as DateRangeValue;\n\n  return (\n    <Fragment>\n      <div className={rowClassName}>\n        <AsyncChart metric=\"plays\" model={model} dateRange={dateRange}>\n          {({data}) => (\n            <LineChart\n              className=\"flex-auto\"\n              title={<Trans message=\"Plays\" />}\n              hideLegend\n              description={\n                <Trans\n                  message=\":count total plays\"\n                  values={{\n                    count: (\n                      <FormattedNumber value={data?.report.plays.total || 0} />\n                    ),\n                  }}\n                />\n              }\n            />\n          )}\n        </AsyncChart>\n        <AsyncChart metric=\"devices\" model={model} dateRange={dateRange}>\n          <PolarAreaChart title={<Trans message=\"Top devices\" />} />\n        </AsyncChart>\n      </div>\n      <div className={rowClassName}>\n        {props.showTracks && (\n          <AsyncChart metric=\"tracks\" model={model} dateRange={dateRange}>\n            <TopModelsChartLayout\n              title={<Trans message=\"Most played tracks\" />}\n            />\n          </AsyncChart>\n        )}\n        <AsyncChart metric=\"users\" model={model} dateRange={dateRange}>\n          <TopModelsChartLayout title={<Trans message=\"Top listeners\" />} />\n        </AsyncChart>\n      </div>\n      {props.showArtistsAndAlbums && (\n        <div className={rowClassName}>\n          <AsyncChart metric=\"artists\" model={model} dateRange={dateRange}>\n            <TopModelsChartLayout\n              title={<Trans message=\"Most played artists\" />}\n            />\n          </AsyncChart>\n          <AsyncChart metric=\"albums\" model={model} dateRange={dateRange}>\n            <TopModelsChartLayout\n              title={<Trans message=\"Most played albums\" />}\n            />\n          </AsyncChart>\n        </div>\n      )}\n      <div className={rowClassName}>\n        <AsyncChart metric=\"locations\" model={model} dateRange={dateRange}>\n          <GeoChart className=\"w-1/2 flex-auto lg:max-w-[740px]\" />\n        </AsyncChart>\n        <AsyncChart metric=\"platforms\" model={model} dateRange={dateRange}>\n          <PolarAreaChart\n            className=\"max-w-500\"\n            title={<Trans message=\"Top platforms\" />}\n          />\n        </AsyncChart>\n      </div>\n    </Fragment>\n  );\n}\n\ninterface AsyncChartProps {\n  children:\n    | ReactElement<BaseChartProps>\n    | ((\n        query: UseQueryResult<FetchInsightsReportResponse>,\n      ) => ReactElement<BaseChartProps>);\n  metric: InsightsReportMetric;\n  model: string;\n  dateRange: DateRangeValue;\n}\nfunction AsyncChart({children, metric, model, dateRange}: AsyncChartProps) {\n  const [isEnabled, setIsEnabled] = useState(false);\n  const query = useInsightsReport(\n    {metrics: [metric], model, dateRange},\n    {isEnabled},\n  );\n  const chart = typeof children === 'function' ? children(query) : children;\n  const observerRef = useRef<IntersectionObserver>();\n\n  const contentRef = useCallback((el: HTMLDivElement | null) => {\n    if (el) {\n      const observer = new IntersectionObserver(\n        ([e]) => {\n          if (e.isIntersecting) {\n            setIsEnabled(true);\n            observerRef.current?.disconnect();\n            observerRef.current = undefined;\n          }\n        },\n        {threshold: 0.1}, // if only header is visible, don't load\n      );\n      observerRef.current = observer;\n      observer.observe(el);\n    } else if (observerRef.current) {\n      observerRef.current?.disconnect();\n    }\n  }, []);\n\n  return cloneElement<BaseChartProps>(chart, {\n    data: query.data?.report?.[metric],\n    isLoading: query.isLoading,\n    contentRef,\n  });\n}\n","import {Trans} from '@ui/i18n/trans';\nimport React, {cloneElement, Fragment, ReactElement, useState} from 'react';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {DateRangePresets} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {ReportDateSelector} from '@common/admin/analytics/report-date-selector';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\nimport {InsightsReportChartsProps} from '@app/admin/reports/insights-report-charts';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {Footer} from '@common/ui/footer/footer';\nimport {Skeleton} from '@ui/skeleton/skeleton';\n\ninterface Props {\n  children: ReactElement<InsightsReportChartsProps>;\n  reportModel: string;\n  title?: ReactElement;\n  isNested?: boolean;\n}\nexport function BackstageInsightsLayout({\n  children,\n  reportModel,\n  title,\n  isNested,\n}: Props) {\n  const [dateRange, setDateRange] = useState<DateRangeValue>(() => {\n    // This week\n    return DateRangePresets[2].getRangeValue();\n  });\n  return (\n    <Fragment>\n      <StaticPageTitle>\n        <Trans message=\"Insights\" />\n      </StaticPageTitle>\n      <div className=\"flex h-full flex-col\">\n        {!isNested && (\n          <Navbar className=\"flex-shrink-0\" color=\"bg\" darkModeColor=\"bg\" />\n        )}\n        <div className=\"relative flex-auto overflow-y-auto bg-cover\">\n          <div className=\"mx-auto flex min-h-full max-w-[1600px] flex-col overflow-x-hidden p-12 md:p-24\">\n            <div className=\"flex-auto\">\n              <div className=\"mb-38 mt-14 h-48 items-center justify-between gap-24 md:flex\">\n                {title ? title : <Skeleton className=\"max-w-320\" />}\n                <div className=\"flex flex-shrink-0 items-center justify-between gap-10 md:gap-24\">\n                  <ReportDateSelector\n                    value={dateRange}\n                    onChange={setDateRange}\n                  />\n                </div>\n              </div>\n              {cloneElement(children, {dateRange, model: reportModel})}\n            </div>\n            {!isNested && <Footer />}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport React, {cloneElement, ReactElement} from 'react';\n\ninterface Props {\n  image: ReactElement<{size: string; className: string}>;\n  name: ReactElement;\n  description?: ReactElement;\n}\nexport function BackstageInsightsTitle({image, name, description}: Props) {\n  return (\n    <div className=\"flex items-center gap-10\">\n      {cloneElement(image, {size: 'w-48 h-48', className: 'rounded'})}\n      <div>\n        <h1 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-base\">\n          “{name}“ <Trans message=\"insights\" />\n        </h1>\n        {description && <div className=\"text-sm text-muted\">{description}</div>}\n      </div>\n    </div>\n  );\n}\n","import {useParams} from 'react-router-dom';\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\nimport React from 'react';\nimport {useArtist} from '@app/web-player/artists/requests/use-artist';\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\n\ninterface Props {\n  isNested?: boolean;\n}\nexport function BackstageArtistInsights({isNested}: Props) {\n  const {artistId} = useParams();\n  const {data} = useArtist({loader: 'artist'});\n  return (\n    <BackstageInsightsLayout\n      reportModel={`artist=${artistId}`}\n      title={\n        data?.artist && (\n          <BackstageInsightsTitle\n            image={<SmallArtistImage artist={data.artist} />}\n            name={<ArtistLink artist={data.artist} />}\n          />\n        )\n      }\n      isNested={isNested}\n    >\n      <InsightsReportCharts showTracks />\n    </BackstageInsightsLayout>\n  );\n}\n\nexport function NestedBackstageArtistInsights() {\n  return <BackstageArtistInsights isNested />;\n}\n","import {useParams} from 'react-router-dom';\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\nimport React from 'react';\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\n\ninterface Props {\n  isNested?: boolean;\n}\nexport function BackstageAlbumInsights({isNested}: Props) {\n  const {albumId} = useParams();\n  const {data} = useAlbum({loader: 'album'});\n  return (\n    <BackstageInsightsLayout\n      reportModel={`album=${albumId}`}\n      title={\n        data?.album && (\n          <BackstageInsightsTitle\n            image={<AlbumImage album={data.album} />}\n            name={<AlbumLink album={data.album} />}\n            description={<ArtistLinks artists={data.album.artists} />}\n          />\n        )\n      }\n      isNested={isNested}\n    >\n      <InsightsReportCharts showTracks />\n    </BackstageInsightsLayout>\n  );\n}\n\nexport function NestedBackstageAlbumInsights() {\n  return <BackstageAlbumInsights isNested />;\n}\n","import {useParams} from 'react-router-dom';\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\nimport React from 'react';\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {TrackLink} from '@app/web-player/tracks/track-link';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\n\ninterface Props {\n  isNested?: boolean;\n}\nexport function BackstageTrackInsights({isNested}: Props) {\n  const {trackId} = useParams();\n  const {data} = useTrack({loader: 'track'});\n  return (\n    <BackstageInsightsLayout\n      reportModel={`track=${trackId}`}\n      title={\n        data?.track && (\n          <BackstageInsightsTitle\n            image={<TrackImage track={data.track} />}\n            name={<TrackLink track={data.track} />}\n            description={<ArtistLinks artists={data.track.artists} />}\n          />\n        )\n      }\n      isNested={isNested}\n    >\n      <InsightsReportCharts />\n    </BackstageInsightsLayout>\n  );\n}\n\nexport function NestedBackstageTrackInsights() {\n  return <BackstageTrackInsights isNested />;\n}\n"],"names":["DatatableDataQueryKey","endpoint","params","key","useDatatableData","options","onLoad","useQuery","signal","paginate","keepPreviousData","resolve","response","apiClient","useNormalizedModels","queryParams","queryOptions","fetchModels","r","v","useNormalizedModel","fetchModel","NormalizedModelField","label","className","background","value","defaultValue","placeholder","message","searchPlaceholder","onChange","description","errorMessage","invalid","autoFocus","disabled","required","inputRef","useRef","inputValue","setInputValue","useState","selectedValue","setSelectedValue","useControlledState","query","trans","useTrans","fieldClassNames","getInputFieldClassNames","jsxs","jsx","clsx","AnimatePresence","SelectedModelPreview","_a","_b","Select","model","Item","Avatar","modelId","onEditClick","data","isLoading","LoadingSkeleton","m","opacityAnimation","Tooltip","Trans","IconButton","EditIcon","Skeleton","FormNormalizedModelField","name","fieldProps","clearErrors","useFormContext","error","useController","stringToChipValue","ChipFieldInner","props","ref","fieldRef","useObjectRef","displayWith","validateWith","children","suggestions","onInputValueChange","onItemSelected","onOpenChange","chipSize","openMenuOnFocus","showEmptyMessage","propsValue","propsOnChange","valueKey","isAsync","allowCustomValue","showDropdownArrow","onChipClick","alwaysShowAvatar","readOnly","inputFieldProps","useChipFieldValueState","listboxIsOpen","setListboxIsOpen","loadingIndicator","ProgressCircle","dropdownArrow","KeyboardArrowDownIcon","inputProps","useField","Field","Input","ListWrapper","ChipInput","items","setItems","displayChipUsing","manager","useFocusManager","removeItem","useCallback","i","cr","newItems","ChipList","item","Chip","setChips","chips","size","addItems","listbox","useListbox","handleItemSelection","activeIndex","setActiveIndex","isOpen","setIsOpen","refs","listboxId","collection","onInputChange","textValue","option","useLayoutEffect","handleTriggerKeyDown","handleListboxKeyboardNavigation","useListboxKeyboardNavigation","handleFocusAndClick","createEventHandler","Listbox","Popover","e","mergeProps","emails","selection","email","input","useMemo","mixedValueToChipValue","propsDefaultValue","handleChange","newValue","ChipField","React","FormChipField","onBlur","formProps","useDatePickerState","now","useCurrentDateTime","isPlaceholder","setIsPlaceholder","setStateValue","internalValue","setInternalValue","min","max","granularity","timezone","calendarIsOpen","setCalendarIsOpen","closeDialogOnSelection","useBaseDatePickerState","clear","calendarDates","setCalendarDates","toCalendarDate","toSafeZoned","dayIsActive","day","isSameDay","getCellProps","date","DatePicker","showCalendarFooter","state","footer","DialogFooter","Button","dialog","DialogTrigger","Dialog","DialogBody","Calendar","openOnClick","isHourSegment","Fragment","DatePickerField","DateRangeIcon","DateSegmentList","FormDatePicker","format","useDateFormatter","parseAbsoluteToLocal","parsedValue","useStickySentinel","isSticky","setIsSticky","observerRef","sentinelRef","sentinel","observer","CrupdateResourceLayout","onSubmit","form","title","subTitle","actions","backButton","disableSaveWhenNotDirty","wrapInContainer","submitButtonText","variant","isDirty","saveButton","Form","CrupdateResourceHeader","DirtyFormSaveDrawer","startActions","endActions","CrupdateResourceSection","margin","labelMargin","formState","reset","InfoIcon","createSvgIcon","musicImage","useArtistPickerSuggestions","fetchArtists","FormArtistPicker","result","FormNormalizedModelChipField","TAG_MODEL","FileUploadIcon","TrackUploadStatusText","fileUpload","status","bytesUploaded","totalBytes","prettyBytes","uploadedBytes","statusMessage","TrackUploadProgress","onAbort","UploadStatusButton","ProgressBar","useFileUploadStore","s","statusButton","errMessage","AnimatedStatus","MixedText","ErrorIcon","WarningIcon","CheckCircleIcon","CloseIcon","domProps","useExtractTackFileMetadata","useMutation","payload","extractMeta","err","showHttpErrorToast","metadataToFormValues","values","hydrateAlbumForm","mergeArraysWithoutDuplicates","mergeTrackFormValues","newValues","oldValues","nv","ov","FiftyMB","useTrackUploader","uploads","useSettings","restrictions","FileInputType","extractMetadata","optionsRef","uploadMultiple","updateFileUpload","getUpload","updateUpload","uploadId","newMeta","uploadOptions","Disk","entry","file","formValues","toast","validateUploads","files","validFiles","validateFile","uploadTracks","waveData","generateWaveformData","openUploadWindow","useTrackUpload","upload","isUploading","meta","isProcessing","TrackFormUploadButton","setUploadId","setValue","watch","getValues","openFilePicker","newData","mergedValues","activeUpload","abortUpload","clearInactive","TrackForm","showExternalIdFields","showAlbumField","uploadButton","isMobile","useIsMobileMediaQuery","FormImageSelector","FormTextField","GENRE_MODEL","DurationField","SourceField","SpotifyIdField","spotify_is_setup","FormattedDuration","useCreateTrack","onSuccess","createTrack","queryClient","onFormQueryError","prepareTrackPayload","artist","useCreateTrackForm","onTrackCreated","defaultValues","useForm","lightBgImage","darkBgImage","BackstageLayout","isDarkMode","useIsDarkMode","Navbar","Footer","CreateTrackPage","navigate","useNavigate","pathname","useLocation","getTrackLink","FileUploadProvider","BackstageCreateTrackPage","Endpoint","id","useUpdateTrack","updateChannel","useUpdateTrackForm","track","updateTrack","UpdateTrackPage","useTrack","PageContent","PageStatus","canEdit","useTrackPermissions","Navigate","BackstageUpdateTrackPage","useCreateAlbum","createAlbum","prepareAlbumPayload","useUpdateAlbum","albumId","updateAlbum","getAlbumLink","DragHandleIcon","UpdateTrackDialog","hideAlbumField","formId","close","useDialogContext","DialogHeader","CreateTrackDialog","AlbumTracksForm","fields","remove","prepend","move","useFieldArray","index","f","tracks","newTrack","AddIcon","field","TrackItem","oldIndex","newIndex","IllustratedMessage","SvgImage","onRemove","onUpdate","onSort","previewRef","sortableProps","useSortable","updatedTrack","isConfirmed","ConfirmationDialog","RowDragPreview","content","DragPreview","AlbumForm","UpdateAlbumPage","useAlbum","album","useAlbumPermissions","uploadIsInProgress","BackstageUpdateAlbumPage","AlbumUploader","forwardRef","onUploadStart","onCancel","onCreate","userArtist","usePrimaryArtistForCurrentUser","isVisible","setIsVisible","useImperativeHandle","TracksUploader","setTracks","prev","allTracks","TrackUploadItem","createdTrack","t","newTracks","memo","useEffect","uploadProgress","albumBorderImage","UploadedMediaPreview","media","isAlbum","ALBUM_MODEL","absoluteLink","AlbumImage","TrackImage","ArtistLinks","genre","parts","Link","LinkStyle","ShareMediaButtons","TextField","DropTargetMask","mask","resetMinutesLimitQuery","user","getBootstrapData","useUserMinutesLimit","useAuth","userId","fetchLimit","UploadPage","backstageLayout","Content","uploadMode","setUploadMode","modeIsLocked","setModeIsLocked","uploaderRef","Uploader","createdItems","setCreatedItems","isDragOver","setIsDragOver","droppableProps","useDroppable","draggable","Wrapper","DefaultWrapper","UploadPanel","onUpload","onUploadModeChange","Switch","BackstageUploadPage","CreateAlbumPage","searchParams","useSearchParams","BackstageCreateAlbumPage","useBackstageRequest","requestId","useParams","fetchBackstageRequest","trackId","DocumentScannerIcon","Columns","AlbumLink","FormattedDate","FormattedNumber","RowActions","ArtistAlbumsTable","albums","artistId","sortDescriptor","onSortChange","useSortableTableData","InfoDialogTriggerIcon","Table","deleteAlbum","useDeleteAlbum","CrupdateArtistForm","showExternalFields","FormSwitch","Tabs","TabList","Tab","TabPanels","TabPanel","DetailsPanel","ProfileLinksForm","BiographyPanel","ImagesPanel","append","useUpdateArtist","getArtistLink","UpdateArtistPage","useArtist","useArtistPermissions","updateArtist","BackstageUpdateArtistPage","UpdateArtistPageWithExternalFields","useInsightsReport","fetchReport","TopModelsChartLayout","layoutProps","dataItems","ChartLayout","ChartLoadingIndicator","Image","Name","Description","PlayArrowFilledIcon","link","SmallArtistImage","UserAvatar","ArtistLink","TrackLink","UserProfileLink","InsightsReportCharts","rowClassName","dateRange","AsyncChart","LineChart","PolarAreaChart","GeoChart","metric","isEnabled","setIsEnabled","chart","contentRef","el","cloneElement","BackstageInsightsLayout","reportModel","isNested","setDateRange","DateRangePresets","StaticPageTitle","ReportDateSelector","BackstageInsightsTitle","image","BackstageArtistInsights","NestedBackstageArtistInsights","BackstageAlbumInsights","NestedBackstageAlbumInsights","BackstageTrackInsights","NestedBackstageTrackInsights"],"mappings":"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"}